{"version":3,"sources":["file:///E:/personal/bezier-viewer/assets/scripts/Paper.ts"],"names":["_decorator","Component","Node","Prefab","Sprite","Color","UITransform","v3","v2","CCFloat","Graphics","Label","director","Canvas","NodeEventType","NodeFactory","ccclass","property","Paper","canvasNode","pointPool","pointNum","ctrlPoints","stageMultiList","onLoad","getScene","getComponentInChildren","node","addEvents","pointPre","init","randomDraw","on","TOUCH_MOVE","onTouchMove","removeEvents","off","e","delta","touch","getDelta","console","log","x","y","p","position","setPosition","stage","i","Math","round","random","push","draw","min","max","ctrls","n","length","len","t","item","ctrl","j","comb","pow","line2","ctrls1","line1","lineContainer","children","forEach","child","putNode","getNode","parent","getComponent","color","lineColor","ui","width","height","lineWidth","ctrlContainer","k","point","YELLOW","getChildByName","string","g","graphicsContainer","clear","moveTo","lineTo","stroke","ctrls2","circle","fillColor","fill","stageMulti","num","res"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, Vec2, Sprite, Color, ColorKey, color, UITransform, Vec3, v3, v2, CCFloat, Graphics, Label, find, director, Canvas, NodeEventType, EventTouch } from 'cc';\nimport NodeFactory from './NodeFactory';\nimport { Point } from './Point';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Paper')\nexport class Paper extends Component {\n\n    @property(Prefab)\n    pointPre: Prefab = null;\n\n    @property(Color)\n    lineColor: Color = null;\n\n    @property(CCFloat)\n    lineWidth: number = 5;\n\n    @property(Node)\n    lineContainer: Node = null;\n\n    @property(Node)\n    ctrlContainer: Node = null;\n\n    @property(Node)\n    graphicsContainer: Node = null;\n\n    private canvasNode: Node = null;\n\n    private pointPool: NodeFactory = null;\n    private pointNum: number = 1000;\n    /**所有控制点坐标 */\n    private ctrlPoints: Vec2[] = [];\n\n    onLoad() {\n        this.canvasNode = director.getScene().getComponentInChildren(Canvas).node;\n        this.addEvents();\n        this.pointPool = new NodeFactory(this.pointPre);\n        this.pointPool.init(this.pointNum);\n        this.randomDraw(3);\n    }\n\n    private addEvents() {\n        this.canvasNode.on(NodeEventType.TOUCH_MOVE, this.onTouchMove, this);\n    }\n\n    private removeEvents() {\n        this.canvasNode.off(NodeEventType.TOUCH_MOVE, this.onTouchMove, this);\n    }\n\n    private onTouchMove(e: EventTouch) {\n        let delta = e.touch.getDelta();\n        console.log('x, y:', delta.x, delta.y);\n        let p = this.node.position;\n        this.node.setPosition(p.x + delta.x, p.y + delta.y);\n    }\n\n    private randomDraw(stage: number = 3) {\n        for (let i = 0; i < stage + 1; i++) {\n            let x = Math.round(this.random(-960, 960));\n            let y = Math.round(this.random(-540, 540));\n            this.ctrlPoints.push(v2(x, y));\n        }\n        this.draw();\n    }\n\n    private random(min: number, max: number): number {\n        return Math.random() * (max - min) + min;\n    }\n\n    private draw() {\n        let ctrls = this.ctrlPoints;\n        //计算路径坐标\n        let n = ctrls.length - 1;\n        for (let i = 0, len = this.pointNum; i < len; i++) {\n            let t = i / len, x = 0, y = 0;\n            let item: number, ctrl: Vec2;\n            for (let j = 0; j < n + 1; j++) {\n                item = this.comb(n, j) * Math.pow(1 - t, n - j) * Math.pow(t, j);\n                ctrl = ctrls[j];\n                x += ctrl.x * item;\n                y += ctrl.y * item;\n            }\n            // this.line1(x, y, i);\n            this.line2(x, y, i);\n        }\n        this.ctrls1();\n        // this.ctrls2();\n    }\n\n\n    /**方式1： 点累积成线 */\n    private line1(x: number, y: number, i: number) {\n        this.lineContainer.children.forEach(child => { this.pointPool.putNode(child) });\n        let node = this.lineContainer.children[i];\n        if (!node) {\n            node = this.pointPool.getNode();\n            node.parent = this.lineContainer;\n        }\n        node.getComponent(Sprite).color = this.lineColor;\n        let ui = node.getComponent(UITransform);\n        ui.width = ui.height = this.lineWidth;\n        node.setPosition(v3(x, y));\n    }\n\n    /**绘制控制点*/\n    private ctrls1() {\n        this.ctrlContainer.children.forEach(child => { this.pointPool.putNode(child) });\n        let ctrls = this.ctrlPoints;\n        for (let k = 0; k < ctrls.length; k++) {\n            let point = this.pointPool.getNode();\n            point.parent = this.ctrlContainer;\n            let ui = point.getComponent(UITransform);\n            ui.width = ui.height = this.lineWidth * 3;\n            point.getComponent(Sprite).color = Color.YELLOW;\n            let x = ctrls[k].x, y = ctrls[k].y;\n            point.setPosition(v3(x, y));\n            point.getChildByName('coordinate').getComponent(Label).string = `P${k}(x:${x}, y:${y})`;\n        }\n    }\n\n    /**方式2： canvas2d绘制 */\n    private line2(x: number, y: number, i: number) {\n        let g = this.graphicsContainer.getComponent(Graphics);\n        if (i === 0) {\n            g.clear();\n            g.moveTo(x, y);\n        } else g.lineTo(x, y);\n        if (i === this.pointNum - 1) g.stroke();\n    }\n\n    private ctrls2() {\n        let g = this.graphicsContainer.getComponent(Graphics);\n        let ctrls = this.ctrlPoints;\n        for (let k = 0; k < ctrls.length; k++) {\n            g.circle(ctrls[k].x, ctrls[k].y, this.lineWidth * 1.5);\n            g.fillColor = Color.YELLOW;\n            g.fill();\n\n        }\n    }\n\n    /**计算阶乘 */\n    private stageMultiList: number[] = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800];\n    private stageMulti(num: number): number {\n        let res = this.stageMultiList[num];\n        if (!res) {\n            res = num * this.stageMulti(num - 1);\n            this.stageMultiList[num] = res;\n        }\n        return res;\n    }\n\n    /** 计算组合数 */\n    private comb(n: number, i: number): number {\n        return this.stageMulti(n) / this.stageMulti(i) / this.stageMulti(n - i);\n    }\n}\n\n"]}