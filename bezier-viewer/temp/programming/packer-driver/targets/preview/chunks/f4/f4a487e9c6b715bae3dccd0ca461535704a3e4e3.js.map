{"version":3,"sources":["file:///E:/personal/bezier-viewer/project/assets/scripts/NodeFactory.ts"],"names":["instantiate","NodePool","_decorator","ccclass","property","Factory","constructor","pre","prefab","nodePool","init","num","i","put","getNode","node","size","get","putNode","test","name","console","warn","clear"],"mappings":";;;;;;;;;;AAASA,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,Q,OAAAA,Q;AAAkBC,MAAAA,U,OAAAA,U;;;;;;;;;OAGxC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBF,U;;yBAGTG,O,GADpBF,O,UAAD,MACqBE,OADrB,CAC6B;AAEzBC,QAAAA,WAAW,CAACC,GAAD,EAAc;AAAA,eAIjBC,MAJiB,GAIA,IAJA;AAAA,eAKjBC,QALiB,GAKI,IAAIR,QAAJ,EALJ;AACrB,eAAKO,MAAL,GAAcD,GAAd;AACH;;AAKMG,QAAAA,IAAI,CAACC,GAAD,EAAc;AACrB,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAApB,EAAyBC,CAAC,EAA1B,EAA8B;AAC1B,iBAAKH,QAAL,CAAcI,GAAd,CAAkBb,WAAW,CAAC,KAAKQ,MAAN,CAA7B;AACH;AACJ;AAED;;;AACOM,QAAAA,OAAO,GAAS;AACnB,cAAIC,IAAU,GAAG,IAAjB;;AACA,cAAI,KAAKN,QAAL,CAAcO,IAAd,KAAuB,CAA3B,EAA8B;AAC1BD,YAAAA,IAAI,GAAG,KAAKN,QAAL,CAAcQ,GAAd,EAAP;AACH,WAFD,MAEO;AACHF,YAAAA,IAAI,GAAGf,WAAW,CAAC,KAAKQ,MAAN,CAAlB;AACH;;AACD,iBAAOO,IAAP;AACH;AAED;;;AACOG,QAAAA,OAAO,CAACH,IAAD,EAAa;AACvB,cAAII,IAAU,GAAG,KAAKL,OAAL,EAAjB;AACA,cAAIC,IAAI,CAACK,IAAL,KAAcD,IAAI,CAACC,IAAvB,EAA6B,KAAKX,QAAL,CAAcI,GAAd,CAAkBE,IAAlB,EAA7B,KACKM,OAAO,CAACC,IAAR,6EAA6BP,IAA7B,EAAmC,KAAKN,QAAxC;AACR;AAED;;;AACOc,QAAAA,KAAK,GAAG;AACX,eAAKd,QAAL,IAAiB,KAAKA,QAAL,CAAcc,KAAd,EAAjB;AACH;;AApCwB,O","sourcesContent":["import { instantiate, Node, NodePool, Prefab, _decorator } from \"cc\";\r\n\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport default class Factory {\r\n\r\n    constructor(pre: Prefab) {\r\n        this.prefab = pre;\r\n    }\r\n\r\n    private prefab: Prefab = null;\r\n    private nodePool: NodePool = new NodePool();\r\n\r\n    public init(num: number) {\r\n        for (let i = 0; i < num; i++) {\r\n            this.nodePool.put(instantiate(this.prefab));\r\n        }\r\n    }\r\n\r\n    /** 获取节点 */\r\n    public getNode(): Node {\r\n        let node: Node = null;\r\n        if (this.nodePool.size() > 0) {\r\n            node = this.nodePool.get();\r\n        } else {\r\n            node = instantiate(this.prefab);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /** 放回节点 */\r\n    public putNode(node: Node) {\r\n        let test: Node = this.getNode();\r\n        if (node.name === test.name) this.nodePool.put(node);\r\n        else console.warn(`节点放回到错误的节点池：`, node, this.nodePool);\r\n    }\r\n\r\n    /**清空节点池 */\r\n    public clear() {\r\n        this.nodePool && this.nodePool.clear();\r\n    }\r\n}\r\n"]}