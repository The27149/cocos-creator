{"version":3,"sources":["file:///E:/personal/bezier-viewer/project/assets/scripts/Paper.ts"],"names":["_decorator","Component","Prefab","Factory","ccclass","property","Paper","pointPool","pointPre","pointNum","stageMultiList","onLoad","init","draw","points","len","length","i","node","children","getNode","parent","stageMulti","num","res","comb","n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,M,OAAAA,M;;AAC/BC,MAAAA,O;;;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;uBAGjBM,K,WADZF,OAAO,CAAC,OAAD,C,UAGHC,QAAQ,CAACH,MAAD,C,2BAHb,MACaI,KADb,SAC2BL,SAD3B,CACqC;AAAA;AAAA;;AAAA;;AAAA,eAKzBM,SALyB,GAKJ;AAAA;AAAA,kCAAY,KAAKC,QAAjB,CALI;AAAA,eAMzBC,QANyB,GAMN,IANM;AAAA,eAwBzBC,cAxByB,GAwBE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,IAA3B,EAAiC,KAAjC,EAAwC,MAAxC,EAAgD,OAAhD,CAxBF;AAAA;;AAQjCC,QAAAA,MAAM,GAAG;AACL,eAAKJ,SAAL,CAAeK,IAAf,CAAoB,GAApB;AACH;;AAEOC,QAAAA,IAAI,CAACC,MAAD,EAAiB;AACzB,cAAIC,GAAG,GAAGD,MAAM,CAACE,MAAjB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAR,EAAWF,IAAG,GAAG,KAAKN,QAA3B,EAAqCQ,CAAC,GAAGF,IAAzC,EAA8CE,CAAC,EAA/C,EAAmD;AAC/C,gBAAIC,IAAI,GAAG,KAAKA,IAAL,CAAUC,QAAV,CAAmBF,CAAnB,CAAX;;AACA,gBAAI,CAACC,IAAL,EAAW;AACPA,cAAAA,IAAI,GAAG,KAAKX,SAAL,CAAea,OAAf,EAAP;AACAF,cAAAA,IAAI,CAACG,MAAL,GAAc,KAAKH,IAAnB;AACH;AACJ;AACJ;AAED;;;AAEQI,QAAAA,UAAU,CAACC,GAAD,EAAsB;AACpC,cAAIC,GAAG,GAAG,KAAKd,cAAL,CAAoBa,GAApB,CAAV;AACA,cAAI,CAACC,GAAL,EAAUA,GAAG,GAAGD,GAAG,GAAG,KAAKD,UAAL,CAAgBC,GAAG,GAAG,CAAtB,CAAZ;AACV,iBAAOC,GAAP;AACH;AAED;;;AACQC,QAAAA,IAAI,CAACC,CAAD,EAAYT,CAAZ,EAA+B;AACvC,iBAAO,KAAKK,UAAL,CAAgBI,CAAhB,IAAqB,KAAKJ,UAAL,CAAgBL,CAAhB,CAArB,GAA0C,KAAKK,UAAL,CAAgBI,CAAC,GAAGT,CAApB,CAAjD;AACH;;AAlCgC,O;;;;;iBAGd,I","sourcesContent":["import { _decorator, Component, Node, Prefab, Vec2 } from 'cc';\nimport Factory from './Factory';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Paper')\nexport class Paper extends Component {\n\n    @property(Prefab)\n    pointPre: Prefab = null;\n\n    private pointPool: Factory = new Factory(this.pointPre);\n    private pointNum: number = 1000;\n\n    onLoad() {\n        this.pointPool.init(200);\n    }\n\n    private draw(points: [Vec2]) {\n        let len = points.length;\n        for (let i = 0, len = this.pointNum; i < len; i++) {\n            let node = this.node.children[i];\n            if (!node) {\n                node = this.pointPool.getNode();\n                node.parent = this.node;\n            }\n        }\n    }\n\n    /**计算阶乘 */\n    private stageMultiList: number[] = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800];\n    private stageMulti(num: number): number {\n        let res = this.stageMultiList[num];\n        if (!res) res = num * this.stageMulti(num - 1);\n        return res;\n    }\n\n    /** 计算组合数 */\n    private comb(n: number, i: number): number {\n        return this.stageMulti(n) / this.stageMulti(i) / this.stageMulti(n - i);\n    }\n}\n\n"]}