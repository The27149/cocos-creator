{"version":3,"sources":["file:///E:/personal/bezier-viewer/assets/scripts/Paper.ts"],"names":["_decorator","Component","Node","Prefab","Sprite","Color","UITransform","v3","v2","CCFloat","Graphics","Label","director","Canvas","NodeEventType","NodeFactory","Point","ccclass","property","Paper","canvasNode","pointPool","pointNum","ctrlPoints","stageMultiList","onLoad","getScene","getComponentInChildren","node","addEvents","pointPre","init","randomDraw","on","TOUCH_MOVE","onTouchMove","removeEvents","off","e","delta","touch","getDelta","position","add3f","x","y","stage","i","Math","round","random","push","draw","min","max","updateCtrls","length","ctrlContainer","children","p","drawCtrls","ctrls","n","len","t","item","ctrl","j","comb","pow","drawLines","forEach","child","putNode","k","point","getNode","parent","ui","getComponent","width","height","lineWidth","color","YELLOW","setPosition","getChildByName","string","g","graphicsContainer","clear","moveTo","lineTo","stroke","stageMulti","num","res"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, Vec2, Sprite, Color, ColorKey, color, UITransform, Vec3, v3, v2, CCFloat, Graphics, Label, find, director, Canvas, NodeEventType, EventTouch } from 'cc';\nimport NodeFactory from './NodeFactory';\nimport { Point } from './Point';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Paper')\nexport class Paper extends Component {\n\n    @property(Prefab)\n    pointPre: Prefab = null;\n\n    @property(Color)\n    lineColor: Color = null;\n\n    @property(CCFloat)\n    lineWidth: number = 5;\n\n    @property(Node)\n    lineContainer: Node = null;\n\n    @property(Node)\n    ctrlContainer: Node = null;\n\n    @property(Node)\n    graphicsContainer: Node = null;\n\n    private canvasNode: Node = null;\n\n    private pointPool: NodeFactory = null;\n    private pointNum: number = 1000;\n    /**所有控制点坐标 */\n    private ctrlPoints: Vec2[] = [];\n\n    onLoad() {\n        this.canvasNode = director.getScene().getComponentInChildren(Canvas).node;\n        this.addEvents();\n        this.pointPool = new NodeFactory(this.pointPre);\n        this.pointPool.init(this.pointNum);\n        this.randomDraw(3);\n    }\n\n    private addEvents() {\n        this.canvasNode.on(NodeEventType.TOUCH_MOVE, this.onTouchMove, this);\n    }\n\n    private removeEvents() {\n        this.canvasNode.off(NodeEventType.TOUCH_MOVE, this.onTouchMove, this);\n    }\n\n    private onTouchMove(e: EventTouch) {\n        let delta = e.touch.getDelta();\n        this.node.position = this.node.position.add3f(delta.x, delta.y, 0);\n    }\n\n    private randomDraw(stage: number = 3) {\n        for (let i = 0; i < stage + 1; i++) {\n            let x = Math.round(this.random(-960, 960));\n            let y = Math.round(this.random(-540, 540));\n            this.ctrlPoints.push(v2(x, y));\n        }\n        this.draw();\n    }\n\n    private random(min: number, max: number): number {\n        return Math.random() * (max - min) + min;\n    }\n\n    /**控制点更新后 重绘曲线 */\n    public updateCtrls() {\n        this.ctrlPoints.length = this.ctrlContainer.children.length;\n        for (let i = 0; i < this.ctrlPoints.length; i++) {\n            let node = this.ctrlContainer.children[i];\n            let p = this.ctrlPoints[i];\n            if (!p) p = v2();\n            p.x = node.position.x;\n            p.y = node.position.y;\n            this.ctrlPoints[i] = p;\n        }\n        this.draw();\n    }\n\n    public draw() {\n        this.drawCtrls();\n        let ctrls = this.ctrlPoints;\n        //计算路径坐标\n        let n = ctrls.length - 1;\n        for (let i = 0, len = this.pointNum; i < len; i++) {\n            let t = i / len, x = 0, y = 0;\n            let item: number, ctrl: Vec2;\n            for (let j = 0; j < n + 1; j++) {\n                item = this.comb(n, j) * Math.pow(1 - t, n - j) * Math.pow(t, j);\n                ctrl = ctrls[j];\n                x += ctrl.x * item;\n                y += ctrl.y * item;\n            }\n            // this.line1(x, y, i);\n            this.drawLines(x, y, i);\n        }\n    }\n\n\n    // /**方式1： 点累积成线 */\n    // private line1(x: number, y: number, i: number) {\n    //     this.lineContainer.children.forEach(child => { this.pointPool.putNode(child) });\n    //     let node = this.lineContainer.children[i];\n    //     if (!node) {\n    //         node = this.pointPool.getNode();\n    //         node.parent = this.lineContainer;\n    //     }\n    //     node.getComponent(Sprite).color = this.lineColor;\n    //     let ui = node.getComponent(UITransform);\n    //     ui.width = ui.height = this.lineWidth;\n    //     node.setPosition(v3(x, y));\n    // }\n\n    /**绘制控制点*/\n    private drawCtrls() {\n        this.ctrlContainer.children.forEach(child => { this.pointPool.putNode(child) });\n        let ctrls = this.ctrlPoints;\n        for (let k = 0; k < ctrls.length; k++) {\n            let point = this.pointPool.getNode();\n            point.parent = this.ctrlContainer;\n            let ui = point.getComponent(UITransform);\n            ui.width = ui.height = this.lineWidth * 3;\n            point.getComponent(Sprite).color = Color.YELLOW;\n            let x = ctrls[k].x, y = ctrls[k].y;\n            point.setPosition(v3(x, y));\n            point.getChildByName('coordinate').getComponent(Label).string = `P${k}(x:${x}, y:${y})`;\n            point.getComponent(Point).init(this);\n        }\n    }\n\n    /**方式2： canvas2d绘制 */\n    private drawLines(x: number, y: number, i: number) {\n        let g = this.graphicsContainer.getComponent(Graphics);\n        if (i === 0) {\n            g.clear();\n            g.moveTo(x, y);\n        } else g.lineTo(x, y);\n        if (i === this.pointNum - 1) g.stroke();\n    }\n\n    // private ctrls2() {\n    //     let g = this.graphicsContainer.getComponent(Graphics);\n    //     let ctrls = this.ctrlPoints;\n    //     for (let k = 0; k < ctrls.length; k++) {\n    //         g.circle(ctrls[k].x, ctrls[k].y, this.lineWidth * 1.5);\n    //         g.fillColor = Color.YELLOW;\n    //         g.fill();\n\n    //     }\n    // }\n\n    /**计算阶乘 */\n    private stageMultiList: number[] = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800];\n    private stageMulti(num: number): number {\n        let res = this.stageMultiList[num];\n        if (!res) {\n            res = num * this.stageMulti(num - 1);\n            this.stageMultiList[num] = res;\n        }\n        return res;\n    }\n\n    /** 计算组合数 */\n    private comb(n: number, i: number): number {\n        return this.stageMulti(n) / this.stageMulti(i) / this.stageMulti(n - i);\n    }\n}\n\n"]}