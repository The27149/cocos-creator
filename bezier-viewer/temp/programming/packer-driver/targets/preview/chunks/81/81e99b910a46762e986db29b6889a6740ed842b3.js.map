{"version":3,"sources":["file:///E:/personal/bezier-viewer/assets/scripts/Paper.ts"],"names":["_decorator","Component","Node","Prefab","Sprite","Color","UITransform","v3","v2","CCFloat","Graphics","NodeFactory","ccclass","property","Paper","pointPool","pointNum","ctrlPoints","stageMultiList","onLoad","pointPre","init","randomDraw","stage","i","push","random","draw","min","max","Math","ctrls","n","length","len","t","x","y","item","ctrl","j","comb","pow","line2","line1","clearPaper","k","point","getNode","parent","ctrlContainer","ui","getComponent","width","height","lineWidth","color","YELLOW","setPosition","node","lineContainer","children","lineColor","g","graphicsContainer","clear","moveTo","lineTo","close","stroke","forEach","child","putNode","stageMulti","num","res"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, Vec2, Sprite, Color, ColorKey, color, UITransform, Vec3, v3, v2, CCFloat, Graphics } from 'cc';\nimport NodeFactory from './NodeFactory';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Paper')\nexport class Paper extends Component {\n\n    @property(Prefab)\n    pointPre: Prefab = null;\n\n    @property(Color)\n    lineColor: Color = null;\n\n    @property(CCFloat)\n    lineWidth: number = 5;\n\n    @property(Node)\n    lineContainer: Node = null;\n\n    @property(Node)\n    ctrlContainer: Node = null;\n\n    @property(Node)\n    graphicsContainer: Node = null;\n\n\n    private pointPool: NodeFactory = null;\n    private pointNum: number = 1000;\n    /**所有控制点坐标 */\n    private ctrlPoints: Vec2[] = [];\n\n    onLoad() {\n        this.pointPool = new NodeFactory(this.pointPre);\n        this.pointPool.init(this.pointNum);\n        this.randomDraw(50);\n    }\n\n    private randomDraw(stage: number = 3) {\n        for (let i = 0; i < stage + 1; i++) {\n            this.ctrlPoints.push(v2(this.random(-960, 960), this.random(-540, 540)));\n        }\n        this.draw();\n    }\n\n    private random(min: number, max: number): number {\n        return Math.random() * (max - min) + min;\n    }\n\n    private draw() {\n        let ctrls = this.ctrlPoints;\n        //计算路径坐标\n        let n = ctrls.length - 1;\n        for (let i = 0, len = this.pointNum; i < len; i++) {\n            let t = i / len, x = 0, y = 0;\n            let item: number, ctrl: Vec2;\n            for (let j = 0; j < n + 1; j++) {\n                item = this.comb(n, j) * Math.pow(1 - t, n - j) * Math.pow(t, j);\n                ctrl = ctrls[j];\n                x += ctrl.x * item;\n                y += ctrl.y * item;\n            }\n            // this.line1(x, y, i);\n            this.line2(x, y, i);\n        }\n    }\n\n    /**方式1： 点累积成线 */\n    private line1(x: number, y: number, i: number) {\n        this.clearPaper();\n        //绘制控制点\n        let ctrls = this.ctrlPoints;\n        for (let k = 0; k < ctrls.length; k++) {\n            let point = this.pointPool.getNode();\n            point.parent = this.ctrlContainer;\n            let ui = point.getComponent(UITransform);\n            ui.width = ui.height = this.lineWidth * 3;\n            point.getComponent(Sprite).color = Color.YELLOW;\n            point.setPosition(v3(ctrls[k].x, ctrls[k].y));\n        }\n        //绘制线\n        let node = this.lineContainer.children[i];\n        if (!node) {\n            node = this.pointPool.getNode();\n            node.parent = this.lineContainer;\n        }\n        node.getComponent(Sprite).color = this.lineColor;\n        let ui = node.getComponent(UITransform);\n        ui.width = ui.height = this.lineWidth;\n        node.setPosition(v3(x, y));\n    }\n\n    /**方式2： canvas2d绘制 */\n    private line2(x: number, y: number, i: number) {\n        let g = this.graphicsContainer.getComponent(Graphics);\n        g.clear();\n        if (i === 0) g.moveTo(x, y);\n        else g.lineTo(x, y);\n        if (i === this.pointNum - 1) g.close();\n        g.stroke();\n    }\n\n    /**清理画布 */\n    private clearPaper() {\n        this.lineContainer.children.forEach(child => { this.pointPool.putNode(child) });\n        this.ctrlContainer.children.forEach(child => { this.pointPool.putNode(child) });\n    }\n\n    /**计算阶乘 */\n    private stageMultiList: number[] = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800];\n    private stageMulti(num: number): number {\n        let res = this.stageMultiList[num];\n        if (!res) {\n            res = num * this.stageMulti(num - 1);\n            this.stageMultiList[num] = res;\n        }\n        return res;\n    }\n\n    /** 计算组合数 */\n    private comb(n: number, i: number): number {\n        return this.stageMulti(n) / this.stageMulti(i) / this.stageMulti(n - i);\n    }\n}\n\n"]}