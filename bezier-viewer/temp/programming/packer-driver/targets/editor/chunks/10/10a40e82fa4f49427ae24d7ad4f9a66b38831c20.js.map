{"version":3,"sources":["file:///E:/personal/bezier-viewer/project/assets/scripts/Pool.ts"],"names":["instantiate","NodePool","_decorator","ccclass","property","Pool","constructor","pre","prefab","nodePool","getNode","node","size","get","putNode","test","name","put","console","warn","clear"],"mappings":";;;;;;;;;;AAASA,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,Q,OAAAA,Q;AAAkBC,MAAAA,U,OAAAA,U;;;;;;;;;OAGxC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBF,U;;yBAGTG,I,GADpBF,O,UAAD,MACqBE,IADrB,CAC0B;AAEtBC,QAAAA,WAAW,CAACC,GAAD,EAAc;AAAA,eAIjBC,MAJiB,GAIA,IAJA;AAAA,eAKjBC,QALiB,GAKI,IAAIR,QAAJ,EALJ;AACrB,eAAKO,MAAL,GAAcD,GAAd;AACH;;AAKD;AACOG,QAAAA,OAAO,GAAS;AACnB,cAAIC,IAAU,GAAG,IAAjB;;AACA,cAAI,KAAKF,QAAL,CAAcG,IAAd,KAAuB,CAA3B,EAA8B;AAC1BD,YAAAA,IAAI,GAAG,KAAKF,QAAL,CAAcI,GAAd,EAAP;AACH,WAFD,MAEO;AACHF,YAAAA,IAAI,GAAGX,WAAW,CAAC,KAAKQ,MAAN,CAAlB;AACH;;AACD,iBAAOG,IAAP;AACH;AAED;;;AACOG,QAAAA,OAAO,CAACH,IAAD,EAAa;AACvB,cAAII,IAAU,GAAG,KAAKL,OAAL,EAAjB;AACA,cAAIC,IAAI,CAACK,IAAL,KAAcD,IAAI,CAACC,IAAvB,EAA6B,KAAKP,QAAL,CAAcQ,GAAd,CAAkBN,IAAlB,EAA7B,KACKO,OAAO,CAACC,IAAR,CAAc,cAAd,EAA6BR,IAA7B,EAAmC,KAAKF,QAAxC;AACR;AAED;;;AACOW,QAAAA,KAAK,GAAG;AACX,eAAKX,QAAL,IAAiB,KAAKA,QAAL,CAAcW,KAAd,EAAjB;AACH;;AA9BqB,O","sourcesContent":["import { instantiate, Node, NodePool, Prefab, _decorator } from \"cc\";\r\n\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport default class Pool {\r\n\r\n    constructor(pre: Prefab) {\r\n        this.prefab = pre;\r\n    }\r\n\r\n    private prefab: Prefab = null;\r\n    private nodePool: NodePool = new NodePool();\r\n\r\n    /** 获取节点 */\r\n    public getNode(): Node {\r\n        let node: Node = null;\r\n        if (this.nodePool.size() > 0) {\r\n            node = this.nodePool.get();\r\n        } else {\r\n            node = instantiate(this.prefab);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /** 放回节点 */\r\n    public putNode(node: Node) {\r\n        let test: Node = this.getNode();\r\n        if (node.name === test.name) this.nodePool.put(node);\r\n        else console.warn(`节点放回到错误的节点池：`, node, this.nodePool);\r\n    }\r\n\r\n    /**清空节点池 */\r\n    public clear() {\r\n        this.nodePool && this.nodePool.clear();\r\n    }\r\n}\r\n"]}