{"version":3,"sources":["file:///E:/personal/bezier-viewer/project/assets/scripts/Paper.ts"],"names":["_decorator","Component","Prefab","Sprite","Color","UITransform","Factory","ccclass","property","Paper","Number","pointPool","pointPre","pointNum","stageMultiList","onLoad","init","draw","ctrls","n","length","i","len","node","children","getNode","parent","getComponent","color","lineColor","ui","width","height","lineWidth","t","x","y","item","ctrl","j","comb","Math","pow","stageMulti","num","res","WHITE"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, Vec2, Sprite, Color, ColorKey, color, UITransform } from 'cc';\nimport Factory from './Factory';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Paper')\nexport class Paper extends Component {\n\n    @property(Prefab)\n    pointPre: Prefab = null;\n\n    @property(Color)\n    lineColor: Color = Color.WHITE;\n\n    @property(Number)\n    lineWidth: number = 5;\n\n    private pointPool: Factory = new Factory(this.pointPre);\n    private pointNum: number = 1000;\n\n    onLoad() {\n        this.pointPool.init(this.pointNum);\n    }\n\n    private draw(ctrls: [Vec2]) {\n        let n = ctrls.length - 1;\n        for (let i = 0, len = this.pointNum; i < len; i++) {\n            let node = this.node.children[i];\n            if (!node) {\n                node = this.pointPool.getNode();\n                node.parent = this.node;\n            }\n            node.getComponent(Sprite).color = this.lineColor;\n            let ui = node.getComponent(UITransform);\n            ui.width = ui.height = this.lineWidth;\n            let t = i / len, x = 0, y = 0;\n            let item: number, ctrl: Vec2;\n            for (let j = 0; j < n + 1; j++) {\n                item = this.comb(n, j) * Math.pow(1 - t, n - j) * Math.pow(t, j);\n                ctrl = ctrls[j];\n                x += ctrl.x * item;\n                y += ctrl.y * item;\n            }\n        }\n    }\n\n    /**计算阶乘 */\n    private stageMultiList: number[] = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800];\n    private stageMulti(num: number): number {\n        let res = this.stageMultiList[num];\n        if (!res) res = num * this.stageMulti(num - 1);\n        return res;\n    }\n\n    /** 计算组合数 */\n    private comb(n: number, i: number): number {\n        return this.stageMulti(n) / this.stageMulti(i) / this.stageMulti(n - i);\n    }\n}\n\n"]}