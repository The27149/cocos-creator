{"version":3,"sources":["file:///E:/personal/bezier-viewer/project/assets/scripts/Paper.ts"],"names":["_decorator","Component","Prefab","Color","UITransform","v3","v2","CCFloat","NodeFactory","ccclass","property","Paper","pointPool","pointPre","pointNum","stageMultiList","onLoad","randomDraw","stage","arr","i","push","random","draw","min","max","Math","ctrls","n","length","len","node","children","getNode","parent","ui","getComponent","t","x","y","item","ctrl","j","comb","pow","setPosition","stageMulti","num","res"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, Vec2, Sprite, Color, ColorKey, color, UITransform, Vec3, v3, v2, CCFloat } from 'cc';\nimport NodeFactory from './NodeFactory';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Paper')\nexport class Paper extends Component {\n\n    @property(Prefab)\n    pointPre: Prefab = null;\n\n    @property(Color)\n    lineColor: Color = null;\n\n    @property(CCFloat)\n    lineWidth: Number = 5;\n\n    private pointPool: NodeFactory = new NodeFactory(this.pointPre);\n    private pointNum: number = 1000;\n\n    onLoad() {\n        // this.pointPool.init(this.pointNum);\n        // this.randomDraw();\n    }\n\n    private randomDraw(stage: number = 3) {\n        let arr: Vec2[] = [];\n        for (let i = 0; i < stage + 1; i++) {\n            arr.push(v2(this.random(-960, 960), this.random(-540, 540)));\n        }\n        this.draw(arr);\n    }\n\n    private random(min: number, max: number): number {\n        return Math.random() * (max - min) + min;\n    }\n\n    private draw(ctrls: Vec2[]) {\n        let n = ctrls.length - 1;\n        for (let i = 0, len = this.pointNum; i < len; i++) {\n            let node = this.node.children[i];\n            if (!node) {\n                node = this.pointPool.getNode();\n                node.parent = this.node;\n            }\n            // node.getComponent(Sprite).color = this.lineColor;\n            let ui = node.getComponent(UITransform);\n            // ui.width = ui.height = this.lineWidth;\n            let t = i / len, x = 0, y = 0;\n            let item: number, ctrl: Vec2;\n            for (let j = 0; j < n + 1; j++) {\n                item = this.comb(n, j) * Math.pow(1 - t, n - j) * Math.pow(t, j);\n                ctrl = ctrls[j];\n                x += ctrl.x * item;\n                y += ctrl.y * item;\n            }\n            node.setPosition(v3(x, y));\n        }\n    }\n\n    /**计算阶乘 */\n    private stageMultiList: number[] = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800];\n    private stageMulti(num: number): number {\n        let res = this.stageMultiList[num];\n        if (!res) {\n            res = num * this.stageMulti(num - 1);\n            this.stageMultiList[num] = res;\n        }\n        return res;\n    }\n\n    /** 计算组合数 */\n    private comb(n: number, i: number): number {\n        return this.stageMulti(n) / this.stageMulti(i) / this.stageMulti(n - i);\n    }\n}\n\n"]}