{"version":3,"sources":["assets\\script\\CoinMgr.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,8CAAyC;AACzC,0CAAiD;AAG3C,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAGI;QAUQ,SAAI,GAAW,CAAC,CAAC;IAVD,CAAC;gBAHR,OAAO;IAKxB,sBAAkB,cAAG;aAArB;YACI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACZ,IAAI,CAAC,IAAI,GAAG,IAAI,SAAO,EAAE,CAAC;gBAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IAIO,sBAAI,GAAZ;QACI,IAAI,GAAG,GAAG,eAAM,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,SAAO,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,GAAG,KAAK,SAAS,EAAE;YACnB,GAAG,GAAG,CAAC,CAAC;YACR,eAAM,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,SAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;IACpB,CAAC;IAEM,yBAAO,GAAd;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAEM,4BAAU,GAAjB,UAAkB,CAAS;QACvB,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC;QACf,eAAM,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,SAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,kBAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,eAAM,CAAC,WAAW,CAAC,CAAC;IAC1C,CAAC;;IA/BD,aAAa;IACC,gBAAQ,GAAW,SAAS,CAAC;IAE5B,YAAI,GAAY,IAAI,CAAC;IAJnB,OAAO;QAD3B,OAAO;OACa,OAAO,CAkC3B;IAAD,cAAC;CAlCD,AAkCC,IAAA;kBAlCoB,OAAO","file":"","sourceRoot":"/","sourcesContent":["import EventMgr from \"./common/EventMgr\";\r\nimport { GEvent, Global } from \"./common/Global\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class CoinMgr {\r\n    /**本地存储key */\r\n    public static localKey: string = `starNum`;\r\n    private constructor() { }\r\n    private static _ins: CoinMgr = null;\r\n    public static get ins(): CoinMgr {\r\n        if (!this._ins) {\r\n            this._ins = new CoinMgr();\r\n            this._ins.init();\r\n        }\r\n        return this._ins;\r\n    }\r\n\r\n    private coin: number = 0;\r\n\r\n    private init() {\r\n        let num = Global.ins.localData.getData(CoinMgr.localKey);\r\n        if (num === undefined) {\r\n            num = 0;\r\n            Global.ins.localData.setData(CoinMgr.localKey, num);\r\n        }\r\n        this.coin = num;\r\n    }\r\n\r\n    public getCoin(): number {\r\n        return this.coin;\r\n    }\r\n\r\n    public changeCoin(v: number) {\r\n        this.coin += v;\r\n        Global.ins.localData.setData(CoinMgr.localKey, this.coin);\r\n        EventMgr.ins.emit(GEvent.coinChanged);\r\n    }\r\n\r\n}\r\n"]}