{"version":3,"sources":["assets\\script\\Clock.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAEQ,IAAA,OAAO,GAAK,EAAE,CAAC,UAAU,QAAlB,CAAmB;AAElC,aAAa;AACb,IAAY,YAIX;AAJD,WAAY,YAAY;IACpB,+CAAI,CAAA;IACJ,2DAAU,CAAA;IACV,2DAAU,CAAA,CAAE,QAAQ;AACxB,CAAC,EAJW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAIvB;AAkBD,SAAS;AAET;IAAA;QACY,aAAQ,GAAiB,YAAY,CAAC,IAAI,CAAC;QAC3C,aAAQ,GAAmB,IAAI,CAAC;QAChC,cAAS,GAAa,IAAI,CAAC;QAG3B,gBAAW,GAAY,KAAK,CAAC;QAC7B,aAAQ,GAAW,CAAC,CAAC;QACrB,YAAO,GAAa,IAAI,CAAC;QACjC,SAAS;QACD,cAAS,GAAW,EAAE,CAAC;QAC/B,YAAY;QACJ,aAAQ,GAAW,CAAC,CAAC;IAoFjC,CAAC;IAnFG,sBAAY,0BAAO;aAAnB;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;aACD,UAAoB,CAAS;YACzB,IAAI,CAAC,GAAG,CAAC;gBAAE,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS;gBAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,QAAQ,KAAK,YAAY,CAAC,IAAI,EAAE;gBACrC,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QACL,CAAC;;;OARA;IAUD,YAAY;IACL,oBAAI,GAAX,UAAY,KAAkB;;QAC1B,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,OAAO,SAAG,KAAK,CAAC,OAAO,mCAAI,CAAC,CAAC;QAClC,IAAI,CAAC,WAAW,SAAG,KAAK,CAAC,WAAW,mCAAI,KAAK,CAAC;QAC9C,IAAI,CAAC,QAAQ,SAAG,KAAK,CAAC,QAAQ,mCAAI,IAAI,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,cAAc;IACP,wBAAQ,GAAf,UAAgB,KAAiB;;QAC7B,IAAI,CAAC,QAAQ,SAAG,KAAK,CAAC,QAAQ,mCAAI,YAAY,CAAC,IAAI,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,UAAU;IACH,qBAAK,GAAZ,UAAa,KAAc;QACvB,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,KAAK;YAAE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,WAAW;IACJ,qBAAK,GAAZ;QACI,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxE,CAAC;IAED,WAAW;IACJ,oBAAI,GAAX;QACI,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED,aAAa;IACL,oBAAI,GAAZ;QACI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;YAChC,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;SAClC;IACL,CAAC;IAED,YAAY;IACJ,0BAAU,GAAlB;QACI,IAAI,GAAG,GAAW,CAAC,CAAC;QACpB,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACnB,KAAK,YAAY,CAAC,UAAU;gBACxB,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;gBACnB,MAAM;YACV,KAAK,YAAY,CAAC,UAAU;gBACxB,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;gBACpC,MAAM;SACb;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;YACxC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,MAAM,EAAE;gBAClC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;aAClC;SACJ;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC;SAC9B;IACL,CAAC;IA9FgB,KAAK;QADzB,OAAO;OACa,KAAK,CAgGzB;IAAD,YAAC;CAhGD,AAgGC,IAAA;kBAhGoB,KAAK","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\n/**计时器显示模式 */\r\nexport enum CLOCK_UIMODE {\r\n    none,       //没有ui\r\n    showPassed, //显示累计时间\r\n    showRemain  //显示剩余时间\r\n}\r\n\r\n/**计时器参数 */\r\nexport interface IClockParam {\r\n    totalTime: number;      //总时间\r\n    curTime?: number;       //当前累计时间\r\n    isRunAtBack?: false;    //是否能在后台运行\r\n    cellTime?: number;       //变化颗粒度 默认0.05s\r\n    endCall?: Function;      //结束回调\r\n}\r\n\r\n/**计时器ui */\r\nexport interface IClockView {\r\n    viewMode?: CLOCK_UIMODE;   //显示模式\r\n    progress?: cc.ProgressBar;  //进度条\r\n    timeLabel?: cc.Label;\r\n}\r\n\r\n/**计时器 */\r\n@ccclass\r\nexport default class Clock {\r\n    private viewMode: CLOCK_UIMODE = CLOCK_UIMODE.none;\r\n    private progress: cc.ProgressBar = null;\r\n    private timeLabel: cc.Label = null;\r\n\r\n\r\n    private isRunAtBack: boolean = false;\r\n    private cellTime: number = 0;\r\n    private endCall: Function = null;\r\n    /**总计时 */\r\n    private totalTime: number = 10;\r\n    /**当前累计时间 */\r\n    private _curTime: number = 0;\r\n    private get curTime(): number {\r\n        return this._curTime;\r\n    }\r\n    private set curTime(v: number) {\r\n        if (v < 0) v = 0;\r\n        if (v > this.totalTime) v = this.totalTime;\r\n        this._curTime = v;\r\n        if (this.viewMode !== CLOCK_UIMODE.none) {\r\n            this.updateView();\r\n        }\r\n    }\r\n\r\n    /**初始化计时器 */\r\n    public init(param: IClockParam): Clock {\r\n        cc.director.getScheduler().enableForTarget(this);\r\n        this.totalTime = param.totalTime;\r\n        this.curTime = param.curTime ?? 0;\r\n        this.isRunAtBack = param.isRunAtBack ?? false;\r\n        this.cellTime = param.cellTime ?? 0.05;\r\n        this.endCall = param.endCall;\r\n        this.viewMode = CLOCK_UIMODE.none;\r\n        return this;\r\n    }\r\n\r\n    /**初始化计时器ui */\r\n    public initView(param: IClockView): Clock {\r\n        this.viewMode = param.viewMode ?? CLOCK_UIMODE.none;\r\n        this.progress = param.progress;\r\n        this.timeLabel = param.timeLabel;\r\n        this.reset();\r\n        return this;\r\n    }\r\n\r\n    /**重置计时 */\r\n    public reset(total?: number): Clock {\r\n        this.stop();\r\n        if (total) this.totalTime = total;\r\n        this.curTime = 0;\r\n        return this;\r\n    }\r\n\r\n    /**开启定时器 */\r\n    public start() {\r\n        cc.director.getScheduler().schedule(this.step, this, this.cellTime);\r\n    }\r\n\r\n    /**停止定时器 */\r\n    public stop() {\r\n        cc.director.getScheduler().unschedule(this.step, this);\r\n    }\r\n\r\n    /**计时器执行内容 */\r\n    private step() {\r\n        this.curTime += this.cellTime;\r\n        if (this.curTime >= this.totalTime) {\r\n            this.stop();\r\n            this.endCall && this.endCall();\r\n        }\r\n    }\r\n\r\n    /**更新计时视图 */\r\n    private updateView() {\r\n        let val: number = 0;\r\n        switch (this.viewMode) {\r\n            case CLOCK_UIMODE.showPassed:\r\n                val = this.curTime;\r\n                break;\r\n            case CLOCK_UIMODE.showRemain:\r\n                val = this.totalTime - this.curTime;\r\n                break;\r\n        }\r\n        if (this.timeLabel) {\r\n            let intStr = Math.floor(val).toString();\r\n            if (this.timeLabel.string !== intStr) {\r\n                this.timeLabel.string = intStr;\r\n            }\r\n        }\r\n        if (this.progress) {\r\n            let r = val / this.totalTime;\r\n            this.progress.progress = r;\r\n        }\r\n    }\r\n\r\n}\r\n"]}