{"version":3,"sources":["assets\\script\\common\\Utils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Utils {\r\n\r\n    public static log(...params) {\r\n        console.log('%c >>>>>>>>>>>', 'color: orange', ...params);\r\n    }\r\n\r\n    /**随机整数 */\r\n    public static randomInt(...nums: number[]) {\r\n        let min = Math.floor(Math.min(...nums));\r\n        let max = Math.floor(Math.max(...nums));\r\n        return Math.floor(Math.random() * (++max - min)) + min;\r\n    }\r\n\r\n    /**从数组中随机取出一项 */\r\n    static randomFromArray<T>(list: T[]): T {\r\n        let idx = Utils.randomInt(0, list.length - 1);\r\n        return list[idx];\r\n    }\r\n\r\n    /**\r\n     * 动态显示图片\r\n     * @param target \r\n     * @param path \r\n     * @param call \r\n     */\r\n    static dynamicSprite(target: cc.Node | cc.Sprite, path: string, call?: Function) {\r\n        if (target instanceof cc.Node) target = target.getComponent(cc.Sprite) || target.addComponent(cc.Sprite);\r\n        cc.resources.load(path, cc.SpriteFrame, (err: Error, frame: cc.SpriteFrame) => {\r\n            if (!err) {\r\n                (target as cc.Sprite).spriteFrame = frame;\r\n                call && call(frame);\r\n            } else {\r\n                Utils.log('加载图片错误', path, err);\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 动态显示图片(指定bundle)\r\n     * @param target \r\n     * @param path \r\n     * @param call \r\n     */\r\n    static dynamicSpriteInBundle(target: cc.Node | cc.Sprite, bundleName: string, path: string, call?: Function) {\r\n        let bundle = cc.assetManager.getBundle(bundleName);\r\n        if (!bundle) {\r\n            cc.assetManager.loadBundle(bundleName, show);\r\n        } else show();\r\n\r\n        function show() {\r\n            bundle = cc.assetManager.getBundle(bundleName);\r\n            if (target instanceof cc.Node) target = target.getComponent(cc.Sprite) || target.addComponent(cc.Sprite);\r\n            bundle.load(path, cc.SpriteFrame, (err: Error, frame: cc.SpriteFrame) => {\r\n                if (!err) {\r\n                    (target as cc.Sprite).spriteFrame = frame;\r\n                    call && call(frame);\r\n                } else {\r\n                    Utils.log('加载图片错误', path, err);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /**扁平化一层数组 */\r\n    static flat<T>(list: T[][]): T[] {\r\n        return list.reduce((pre, item) => {\r\n            (pre as Array<T>).push(...item);\r\n            return pre;\r\n        }, []);\r\n    }\r\n\r\n    /**计算距离 */\r\n    static getDistance(p1: cc.Vec2, p2: cc.Vec2) {\r\n        return Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\r\n    }\r\n\r\n}\r\n"]}