2024-4-1 14:26:07-log: Cannot access game frame or container.
2024-4-1 14:26:08-debug: asset-db:require-engine-code (2712ms)
2024-4-1 14:26:11-log: meshopt wasm decoder initialized
2024-4-1 14:26:12-log: [box2d]:box2d wasm lib loaded.
2024-4-1 14:26:12-log: [bullet]:bullet wasm lib loaded.
2024-4-1 14:26:17-log: Cocos Creator v3.8.2
2024-4-1 14:26:17-debug: [Assets Memory track]: asset-db:worker-init: initEngine start:16.51MB, end 105.06MB, increase: 88.55MB
2024-4-1 14:26:19-debug: [Assets Memory track]: asset-db-plugin-register: programming start:105.70MB, end 107.27MB, increase: 1.56MB
2024-4-1 14:26:30-debug: [Assets Memory track]: asset-db-plugin-enable: project start:107.52MB, end 196.05MB, increase: 88.53MB
2024-4-1 14:26:30-debug: [Assets Memory track]: asset-db-plugin-register: engine-extends start:107.32MB, end 196.04MB, increase: 88.72MB
2024-4-1 14:26:30-debug: [Assets Memory track]: asset-db-plugin-enable: builder start:107.86MB, end 199.32MB, increase: 91.46MB
2024-4-1 14:26:30-debug: [Assets Memory track]: asset-db:worker-init: initPlugin start:105.07MB, end 196.21MB, increase: 91.14MB
2024-4-1 14:26:30-debug: asset-db:worker-init: initPlugin (12936ms)
2024-4-1 14:26:30-debug: [Assets Memory track]: asset-db:worker-init start:16.51MB, end 196.33MB, increase: 179.82MB
2024-4-1 14:26:30-debug: Run asset db hook programming:beforePreStart success!
2024-4-1 14:26:30-debug: Run asset db hook engine-extends:beforePreStart success!
2024-4-1 14:26:30-debug: Run asset db hook engine-extends:beforePreStart ...
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunksbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default-terrainbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_cubemapbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_contentbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fontsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materialsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_renderpipelinebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skyboxbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_uibackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: run package(cocos-service) handler(register) start
2024-4-1 14:26:37-debug: run package(cocos-service) handler(register) success!
2024-4-1 14:26:37-debug: run package(cocos-service) handler(disable) start
2024-4-1 14:26:37-debug: run package(cocos-service) handler(disable) success!
2024-4-1 14:26:37-debug: run package(cocos-service) handler(enable) start
2024-4-1 14:26:37-debug: run package(cocos-service) handler(enable) success!
2024-4-1 14:26:30-debug: Run asset db hook programming:beforePreStart ...
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\dependenciesbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmobackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\physicsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\toolsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: asset-db:worker-init (32005ms)
2024-4-1 14:26:37-debug: asset-db-hook-programming-beforePreStart (7275ms)
2024-4-1 14:26:37-debug: asset-db-hook-engine-extends-beforePreStart (7274ms)
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtinbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\commonbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacybackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-modelsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\post-processbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effectsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entriesbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfacesbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\animaskbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\animgraphvaribackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\animbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\animgraphbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\effect-surfacebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:37-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\flowbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\forward-pipelinebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\jsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\pacbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\pmtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\rppbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\rtbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\scenebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\scene-2dbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\scene-qualitybackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\stgbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\terrainbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\tsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\ts-animation-graphbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\ts-render-flowbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\ts-render-pipelinebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_file_content\ts-render-stagebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmapbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-freetypebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\2dbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\3dbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\effectsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\lightbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\uibackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\dependencies\texturesbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\advancedbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\for2dbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internalbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\legacybackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\particlesbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\utilbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipelinebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\functionalitiesbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\internalbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\colorbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniformsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\debugbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\databackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\graph-expressionbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\lightingbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\meshbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\mathbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\texturebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\shadowbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\main-functionsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\data-structuresbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\default-functionsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\includesbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\lighting-flowbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\model-functionsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functionsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\data-structuresbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\data-structuresbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\default-functionsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\includesbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\effect-macrosbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\module-functionsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\dependencies\textures\lutbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\editorbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-processbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\util\dccbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\2d\uibackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\miscbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-to-reflectmapbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-planar-shadowbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-to-shadowmapbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process\chunksbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-to-scenebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\util\dcc\vatbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-to-scene\pipelinebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\common-define.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\deprecated.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\decode-base.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\decode.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\decode-standard.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\fog-base.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\fog-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\input-standard.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\input.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\fog-vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\lightingmap-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\lighting.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\lightingmap-vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\local-batch.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\output-standard.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\output.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\sh-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\sh-vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\shading-cluster-additive.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\shading-standard-additive.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\morph.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\shading-standard-base.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\shading-standard.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\shading-toon.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\shadow-map-base.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\shadow-map-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\shadow-map-vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\standard-surface-entry.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\post-process\anti-aliasing.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\post-process\fxaa-hq.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\post-process\fxaa.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\skinning.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\advanced\common-functions.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\advanced\eye.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\functionalities\fog.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\functionalities\probe.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\functionalities\morph-animation.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\functionalities\sh.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\functionalities\skinning-animation-lbs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\functionalities\world-transform.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\functionalities\skinning-animation-dqs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\functionalities\shadow-map.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\internal\alpha-test.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\internal\embedded-alpha.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\internal\particle-common.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\internal\particle-vs-legacy.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\internal\particle-vs-gpu.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\internal\sprite-texture.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-csm.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\internal\sprite-common.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\internal\particle-trail.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-diffusemap.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-environment.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-forward-light.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-global.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-local-batched.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-morph.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-light-map.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-reflection-probe.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-sh.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-local.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-shadow-map.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-shadow.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\color\aces.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\color\gamma.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\color\tone-mapping.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-skinning.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\data\packing.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\data\unpack.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\debug\debug-view-define.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\effect\fog.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\builtin\uniforms\cc-world-bound.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\effect\special-effects.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\lighting\attenuation.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\lighting\brdf.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\lighting\bxdf.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\lighting\functions.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\lighting\light-map.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\lighting\rect-area-light.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\math\coordinates.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\math\number.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\graph-expression\base.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\math\octahedron-transform.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\math\transform.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\mesh\material.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\mesh\vat-animation.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\shadow\native-pcf.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\texture\cubemap.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\texture\texture-lod.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\main-functions\general-vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\main-functions\outline-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\common\texture\texture-misc.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\legacy\main-functions\outline-vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\data-structures\lighting-misc-data.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\data-structures\lighting-result.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\default-functions\simple-skin.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\default-functions\skin.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\default-functions\standard.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\default-functions\toon.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\includes\common.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\includes\standard.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\data-structures\lighting-intermediate-data.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\includes\toon.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\includes\unlit.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\lighting-flow\common-flow.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\lighting-flow\unlit-flow.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\model-functions\standard.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\data-structures\vs-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\model-functions\toon.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\data-structures\vs-input.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\lighting-models\model-functions\standard-common.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:38-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\data-structures\fs-input.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\data-structures\vs-intermediate.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\data-structures\vs-output.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\data-structures\standard.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\data-structures\toon.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\data-structures\unlit.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\default-functions\common-vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\default-functions\standard-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\default-functions\skin.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\default-functions\unlit-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\default-functions\toon-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\effect-macros\common-macros.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\effect-macros\render-to-shadowmap.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\effect-macros\render-planar-shadow.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\effect-macros\silhouette-edge.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\effect-macros\sky.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\effect-macros\terrain.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\effect-macros\unlit.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\includes\common-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\includes\standard-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\includes\common-vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\includes\standard-vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\includes\toon-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\includes\toon-vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\includes\unlit-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\module-functions\common-vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\module-functions\debug-view.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\module-functions\standard-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\module-functions\toon-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\surfaces\module-functions\unlit-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\misc\silhouette-edge-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\misc\silhouette-edge-vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\misc\sky-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-planar-shadow\vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-planar-shadow\fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-to-reflectmap\fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-to-scene\vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-to-scene\fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-to-shadowmap\fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-to-shadowmap\vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\misc\sky-vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process\chunks\fsr.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process\chunks\hbao.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process\chunks\vs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-to-scene\pipeline\deferred-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\chunks\shading-entries\main-functions\render-to-scene\pipeline\forward-fs.chunkbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\builtin-reflection-probe-preview.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:39-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\builtin-terrain.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:41-debug: run package(im-plugin) handler(register) start
2024-4-1 14:26:41-debug: run package(im-plugin) handler(register) success!
2024-4-1 14:26:41-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\builtin-unlit.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:42-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\builtin-toon.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:42-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\builtin-standard.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:43-debug: run package(im-plugin) handler(disable) start
2024-4-1 14:26:43-debug: run package(im-plugin) handler(disable) success!
2024-4-1 14:26:43-debug: run package(im-plugin) handler(enable) start
2024-4-1 14:26:43-debug: run package(im-plugin) handler(enable) success!
2024-4-1 14:26:43-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\advanced\car-paint.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:45-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\advanced\eye.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:47-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\advanced\fabric.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:49-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\advanced\glass.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:50-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\advanced\hair.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:53-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\advanced\leaf.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:54-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\advanced\simple-skin.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:55-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\advanced\skin.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:56-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\advanced\sky.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:56-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\advanced\water.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:57-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\for2d\builtin-spine.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:57-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\for2d\builtin-sprite-renderer.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:57-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\for2d\builtin-sprite.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:57-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\builtin-camera-texture.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:57-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\builtin-clear-stencil.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:57-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\builtin-debug-renderer.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:58-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\builtin-geometry-renderer.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:58-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\builtin-graphics.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:58-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\builtin-occlusion-query.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:58-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\builtin-reflection-deferred.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:58-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\builtin-wireframe.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:58-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\legacy\standard.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:26:59-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\legacy\terrain.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:00-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\legacy\toon.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:00-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\particles\builtin-billboard.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:01-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\particles\builtin-particle-gpu.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:02-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\particles\builtin-particle-trail.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:02-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\particles\builtin-particle-xr-trail.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:02-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\particles\builtin-particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:03-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\cluster-build.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:03-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\cluster-culling.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:03-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\copy-pass.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:03-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\deferred-lighting.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:03-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\float-output-process.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:03-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\planar-shadow.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:03-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:03-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\skybox.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:03-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\smaa.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:04-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\ssss-blur.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:04-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\tonemap.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:04-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\util\sequence-anim.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:04-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\util\batched-unlit.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:04-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\util\profiler.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:04-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\util\splash-screen.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:04-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\editor\box-height-light.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:04-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\editor\gizmo.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:04-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\editor\grid-2d.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:05-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\editor\grid-stroke.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:05-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\editor\light-probe-visualization.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:05-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\editor\grid.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:05-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\editor\light.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:05-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\editor\terrain-image-brush.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:05-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\editor\terrain-circle-brush.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:05-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\internal\editor\terrain-select-brush.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:05-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process\blit-screen.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:05-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process\bloom.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:05-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process\color-grading.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:05-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process\dof.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:06-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process\fsr.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:06-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process\fxaa-hq.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:06-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process\hbao.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:06-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process\post-final.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:06-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\pipeline\post-process\taa.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:06-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\util\dcc\imported-metallic-roughness.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:07-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\util\dcc\imported-specular-glossiness.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:07-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\util\dcc\vat\houdini-fluid-v3-liquid.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:08-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\util\dcc\vat\houdini-rigidbody-v2.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:09-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\util\dcc\vat\houdini-softbody-v3.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:10-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\tools\debug-view-runtime-control.tsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:10-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\effects\util\dcc\vat\zeno-fluid-liquid.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:11-debug: Preimport db internal success
2024-4-1 14:27:11-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shaderbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:11-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:11-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\srcbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:11-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Roam.tsbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:11-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\space.effectbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:11-debug: Preimport db assets success
2024-4-1 14:27:11-debug: Run asset db hook programming:afterPreStart ...
2024-4-1 14:27:11-debug: starting packer-driver...
2024-4-1 14:27:14-debug: initialize scripting environment...
2024-4-1 14:27:14-debug: Set detail map pack:///resolution-detail-map.json: {}
2024-4-1 14:27:14-debug: Run asset db hook programming:afterPreStart success!
2024-4-1 14:27:14-debug: Run asset db hook engine-extends:afterPreStart ...
2024-4-1 14:27:14-debug: asset-db-hook-programming-afterPreStart (2177ms)
2024-4-1 14:27:14-debug: recompile effect.bin success
2024-4-1 14:27:14-debug: Run asset db hook engine-extends:afterPreStart success!
2024-4-1 14:27:14-debug: [Assets Memory track]: asset-db:worker-init: preStart start:196.34MB, end 254.62MB, increase: 58.29MB
2024-4-1 14:27:14-debug: Start up the 'internal' database...
2024-4-1 14:27:15-debug: asset-db:worker-effect-data-processing (1408ms)
2024-4-1 14:27:15-debug: asset-db-hook-engine-extends-afterPreStart (1409ms)
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default-video.mp4background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\Default-Particle.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default-terrain\default-layer-texture.jpgbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_cubemap\back.jpgbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\Default-Particle.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_cubemap\back.jpg@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default-terrain\default-layer-texture.jpg@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_cubemap\front.jpgbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_cubemap\left.jpgbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_cubemap\bottom.jpgbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\primitives.fbxbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_cubemap\left.jpg@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_cubemap\bottom.jpg@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_cubemap\front.jpg@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_cubemap\right.jpgbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\default-billboard-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\default-clear-stencil.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_cubemap\top.jpgbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\default-material-transparent.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\default-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_cubemap\right.jpg@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\default-particle-gpu-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\default-particle-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_cubemap\top.jpg@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\default-spine-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\default-sprite-renderer-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\default-trail-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\missing-effect-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\particle-add.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\missing-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\standard-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\ui-alpha-test-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\ui-base-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\ui-graphics-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\ui-sprite-alpha-sep-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\ui-sprite-gray-alpha-sep-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\ui-sprite-gray-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_materials\ui-sprite-material.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\Camera.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\Terrain.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_renderpipeline\builtin-deferred.rppbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_renderpipeline\builtin-forward.rppbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_renderpipeline\deferred-lighting.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_renderpipeline\post-process.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_renderpipeline\tonemap.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\atom.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\atom.plistbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.hdrbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:15-debug: Start to conver asset {asset[d032ac98-05e1-4090-88bb-eb640dcb5fc1](d032ac98-05e1-4090-88bb-eb640dcb5fc1)}
2024-4-1 14:27:16-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\atom.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:16-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:16-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\atom.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:16-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.png@b47c0background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:16-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\atom_new.plistbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:16-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_btn_disabled.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: Conver assetC:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.hdr -> PNG success.
2024-4-1 14:27:17-debug: Frame rate: 24 [{asset(1263d74c-8167-4928-91a6-4e2672411f47)}]
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_btn_disabled.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_btn_normal.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.hdr@b47c0background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_btn_disabled.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\primitives.fbx@17020background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\primitives.fbx@801ecbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_btn_normal.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.png@b47c0@74afdbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_btn_pressed.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_btn_normal.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\primitives.fbx@2e76ebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.png@b47c0@8fd34background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\primitives.fbx@38fd2background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_editbox_bg.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.png@b47c0@bb97fbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\primitives.fbx@40ecebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_btn_pressed.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.png@b47c0@7d38fbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\primitives.fbx@fc873background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_btn_pressed.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_editbox_bg.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.png@b47c0@e9a6dbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\primitives.fbx@8abdcbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_editbox_bg.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.png@b47c0@40c10background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\primitives.fbx@a804abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_panel.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\primitives.fbx@8d883background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_progressbar.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\primitives.fbx@aae0fbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.hdr@b47c0@74afdbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_progressbar_bg.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.hdr@b47c0@8fd34background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_panel.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_progressbar.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_radio_button_off.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_panel.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_progressbar.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.hdr@b47c0@bb97fbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.hdr@b47c0@7d38fbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_progressbar_bg.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_radio_button_on.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_scrollbar.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_progressbar_bg.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.hdr@b47c0@e9a6dbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_radio_button_off.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_skybox\default_skybox.hdr@b47c0@40c10background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_radio_button_off.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_scrollbar_bg.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_scrollbar.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_radio_button_on.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_scrollbar.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_radio_button_on.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_scrollbar_vertical.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_scrollbar_vertical_bg.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_scrollbar_bg.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_sprite.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_sprite_splash.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_scrollbar_bg.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_scrollbar_vertical.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_scrollbar_vertical_bg.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_toggle_checkmark.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_scrollbar_vertical_bg.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_scrollbar_vertical.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_sprite_splash.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_sprite.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_sprite.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_sprite_splash.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_toggle_disabled.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_toggle_normal.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_toggle_checkmark.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_toggle_pressed.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\camera.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_toggle_checkmark.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_toggle_disabled.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_toggle_normal.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\directional-light.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_toggle_normal.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\light-probe.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_toggle_pressed.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\default_toggle_pressed.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\camera.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\particle-system.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\scene-gizmo.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\reflection-probe.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\directional-light.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\sphere-light.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\light-probe.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\spot-light.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\webview.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\reflection-probe.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\particle-system.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\sphere-light.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\y.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\x.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\z.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\webview.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\spot-light.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\physics\default-physics-material.pmtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:17-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\tools\debug-view-runtime-control.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\y.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\x.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\y.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\tools\parsed-effect-info.jsonbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\x.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\z.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\gizmo\z.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Bold.fntbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-BoldItalic.fntbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-BoldItalic_0.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Italic.fntbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Regular.fntbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Bold_0.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Italic_0.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-BoldItalic_0.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-BoldItalic_0.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Bold_0.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-freetype\OpenSans-Bold.ttfbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Regular_0.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Bold_0.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Italic_0.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Italic_0.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-freetype\OpenSans-BoldItalic.ttfbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-freetype\OpenSans-Italic.ttfbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-freetype\OpenSans-Regular.ttfbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Regular_0.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\2d\Camera.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Regular_0.png@f9941background: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\3d\Capsule.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\3d\Cone.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\3d\Cube.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\3d\Cylinder.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\3d\Plane.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\3d\Quad.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\3d\Sphere.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\3d\Torus.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\effects\Particle System.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\light\Directional Light.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\light\Light Probe Group.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\light\Point Light.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\light\Ranged Directional Light.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\light\Reflection Probe.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\light\Sphere Light.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\light\Spot Light.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\Button.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\Canvas.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\EditBox.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\Graphics.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\Label.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\Mask.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\Layout.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\pageView.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\ParticleSystem2D.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\ProgressBar.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\RichText.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\ScrollView.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\Slider.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\Sprite.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\SpriteRenderer.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\SpriteSplash.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\TiledMap.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\Toggle.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\ToggleContainer.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\VideoPlayer.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\WebView.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\ui\Widget.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_prefab\2d\ui\Canvas.prefabbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\dependencies\textures\preintegrated-skin.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\dependencies\textures\lut\original-color-grading.pngbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\dependencies\textures\preintegrated-skin.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\dependencies\textures\lut\original-color-grading.png@6c48abackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-BoldItalic.fntbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\atom_new.plistbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_ui\atom.plistbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Italic.fntbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Regular.fntbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: C:\ProgramData\cocos\editors\Creator\3.8.2\resources\resources\3d\engine\editor\assets\default_fonts\builtin-bitmap\OpenSans-Bold.fntbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: [Assets Memory track]: asset-db:worker-startup-database[internal] start:207.21MB, end 255.11MB, increase: 47.90MB
2024-4-1 14:27:18-debug: Start up the 'assets' database...
2024-4-1 14:27:18-debug: asset-db:worker-startup-database[internal] (44842ms)
2024-4-1 14:27:18-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\main.scenebackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\space.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-1 14:27:18-debug: [Assets Memory track]: asset-db:worker-startup-database[assets] start:229.67MB, end 249.68MB, increase: 20.02MB
2024-4-1 14:27:18-debug: asset-db:worker-startup-database[assets] (7070ms)
2024-4-1 14:27:18-debug: asset-db:start-database (48180ms)
2024-4-1 14:27:18-debug: asset-db:ready (80446ms)
2024-4-1 14:27:18-debug: init worker message success
2024-4-1 14:27:19-debug: [Build Memory track]: builder:worker-init start:249.81MB, end 264.95MB, increase: 15.14MB
2024-4-1 14:27:19-debug: programming:execute-script (20ms)
2024-4-1 14:27:20-debug: builder:worker-init (1249ms)
2024-4-1 14:27:23-debug: programming:execute-script (11ms)
2024-4-1 14:41:31-debug: refresh db internal success
2024-4-1 14:41:31-debug: refresh db assets success
2024-4-1 14:41:31-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-1 14:41:31-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-1 14:41:31-debug: asset-db:refresh-all-database (99ms)
2024-4-1 14:41:31-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-1 14:41:31-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-4-1 14:43:17-debug: refresh db internal success
2024-4-1 14:43:17-debug: refresh db assets success
2024-4-1 14:43:17-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-1 14:43:17-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-1 14:43:17-debug: asset-db:refresh-all-database (611ms)
2024-4-1 14:43:17-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-1 14:43:17-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-1 15:36:54-debug: refresh db internal success
2024-4-1 15:36:54-debug: refresh db assets success
2024-4-1 15:36:54-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-1 15:36:54-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-1 15:36:54-debug: asset-db:refresh-all-database (1114ms)
2024-4-1 15:36:54-debug: asset-db:worker-effect-data-processing (19ms)
2024-4-1 15:36:54-debug: asset-db-hook-engine-extends-afterRefresh (20ms)
2024-4-1 15:37:05-debug: refresh db internal success
2024-4-1 15:37:05-debug: refresh db assets success
2024-4-1 15:37:05-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-1 15:37:05-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-1 15:37:05-debug: asset-db:refresh-all-database (88ms)
2024-4-1 15:37:05-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-1 15:42:36-debug: refresh db internal success
2024-4-1 15:42:36-debug: refresh db assets success
2024-4-1 15:42:36-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-1 15:42:36-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-1 15:42:36-debug: asset-db:refresh-all-database (157ms)
2024-4-1 15:42:36-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-1 15:42:36-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-1 15:48:33-debug: refresh db internal success
2024-4-1 15:48:33-debug: refresh db assets success
2024-4-1 15:48:33-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-1 15:48:33-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-1 15:48:33-debug: asset-db:refresh-all-database (262ms)
2024-4-1 15:48:33-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-1 15:48:33-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-1 18:20:09-debug: refresh db internal success
2024-4-1 18:20:09-debug: refresh db assets success
2024-4-1 18:20:09-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-1 18:20:09-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-1 18:20:09-debug: asset-db:refresh-all-database (319ms)
2024-4-1 18:20:09-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-1 18:20:09-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-2 09:40:58-debug: refresh db internal success
2024-4-2 09:40:58-debug: refresh db assets success
2024-4-2 09:40:58-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-2 09:40:58-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-2 09:40:58-debug: asset-db:refresh-all-database (67ms)
2024-4-2 09:40:58-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-2 09:40:58-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-4-2 09:41:08-debug: refresh db internal success
2024-4-2 09:41:08-debug: refresh db assets success
2024-4-2 09:41:08-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-2 09:41:08-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-2 09:41:08-debug: asset-db:refresh-all-database (166ms)
2024-4-2 09:41:08-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-2 09:41:08-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 11:52:14-debug: refresh db internal success
2024-4-3 11:52:15-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 11:52:15-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 11:52:14-debug: refresh db assets success
2024-4-3 11:52:15-debug: asset-db:refresh-all-database (228ms)
2024-4-3 11:52:15-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 11:52:15-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 14:34:11-debug: refresh db internal success
2024-4-3 14:34:11-debug: refresh db assets success
2024-4-3 14:34:11-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 14:34:11-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 14:34:11-debug: asset-db:refresh-all-database (363ms)
2024-4-3 14:34:11-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 14:34:11-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 14:34:16-debug: refresh db internal success
2024-4-3 14:34:16-debug: refresh db assets success
2024-4-3 14:34:16-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 14:34:16-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 14:34:16-debug: asset-db:refresh-all-database (218ms)
2024-4-3 14:34:16-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-3 14:34:16-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 14:34:25-debug: Query all assets info in project
2024-4-3 14:34:25-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 14:34:25-debug:   Number of all scenes: 1
2024-4-3 14:34:25-debug:   Number of all scripts: 3
2024-4-3 14:34:25-debug:   Number of other assets: 326
2024-4-3 14:34:25-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 14:34:25-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 14:34:25-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 14:34:25-debug: // ---- build task 查询 Asset Bundle ---- (57ms)
2024-4-3 14:34:25-debug: run build task 查询 Asset Bundle success in 57 ms√, progress: 5%
2024-4-3 14:34:25-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 14:34:25-debug: [Build Memory track]: 查询 Asset Bundle start:204.19MB, end 204.82MB, increase: 640.78KB
2024-4-3 14:34:25-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 14:34:25-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 10%
2024-4-3 14:34:25-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-4-3 14:34:25-debug: [Build Memory track]: 查询 Asset Bundle start:204.83MB, end 204.85MB, increase: 14.72KB
2024-4-3 14:34:25-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 14:34:25-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 14:34:25-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-3 14:34:25-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 14:34:25-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 14:34:25-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:204.86MB, end 204.88MB, increase: 17.41KB
2024-4-3 14:34:25-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-3 14:34:25-debug: [Build Memory track]: 填充脚本数据到 settings.json start:204.89MB, end 204.91MB, increase: 19.85KB
2024-4-3 14:34:25-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 14:34:25-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 14:34:25-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 14:34:25-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 14:34:25-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (49ms)
2024-4-3 14:34:25-debug: run build task 整理部分构建选项内数据到 settings.json success in 49 ms√, progress: 15%
2024-4-3 14:34:25-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:204.93MB, end 205.05MB, increase: 127.23KB
2024-4-3 14:37:57-debug: refresh db internal success
2024-4-3 14:37:57-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\space.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 14:37:58-debug: refresh db assets success
2024-4-3 14:37:58-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 14:37:58-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 14:37:58-debug: asset-db:refresh-all-database (1730ms)
2024-4-3 14:37:58-debug: asset-db-hook-engine-extends-afterRefresh (59ms)
2024-4-3 14:37:58-debug: asset-db:worker-effect-data-processing (57ms)
2024-4-3 14:37:58-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\space.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 14:38:00-debug: Query all assets info in project
2024-4-3 14:38:01-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 14:38:01-debug:   Number of all scenes: 1
2024-4-3 14:38:01-debug:   Number of all scripts: 3
2024-4-3 14:38:01-debug:   Number of other assets: 326
2024-4-3 14:38:01-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 14:38:01-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 14:38:01-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 14:38:01-debug: // ---- build task 查询 Asset Bundle ---- (80ms)
2024-4-3 14:38:01-debug: run build task 查询 Asset Bundle success in 80 ms√, progress: 5%
2024-4-3 14:38:01-debug: [Build Memory track]: 查询 Asset Bundle start:198.44MB, end 201.79MB, increase: 3.35MB
2024-4-3 14:38:01-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 14:38:01-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 14:38:01-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 14:38:01-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 14:38:01-debug: [Build Memory track]: 查询 Asset Bundle start:201.80MB, end 202.55MB, increase: 765.03KB
2024-4-3 14:38:01-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 14:38:01-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 14:38:01-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (9ms)
2024-4-3 14:38:01-debug: run build task 整理部分构建选项内数据到 settings.json success in 9 ms√, progress: 12%
2024-4-3 14:38:01-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:202.56MB, end 195.86MB, increase: -6865.56KB
2024-4-3 14:38:01-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 14:38:01-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 14:38:01-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 14:38:01-debug: [Build Memory track]: 填充脚本数据到 settings.json start:195.87MB, end 195.89MB, increase: 17.60KB
2024-4-3 14:38:01-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 14:38:01-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 14:38:01-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 14:38:01-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (50ms)
2024-4-3 14:38:01-debug: run build task 整理部分构建选项内数据到 settings.json success in 50 ms√, progress: 15%
2024-4-3 14:38:01-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:195.91MB, end 198.28MB, increase: 2.37MB
2024-4-3 14:38:01-debug: recompile effect.bin success
2024-4-3 14:38:51-debug: refresh db internal success
2024-4-3 14:38:51-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\space.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 14:38:52-debug: refresh db assets success
2024-4-3 14:38:52-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 14:38:52-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 14:38:52-debug: asset-db:refresh-all-database (679ms)
2024-4-3 14:38:52-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 14:38:52-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-3 14:38:52-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\space.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 14:38:53-debug: Query all assets info in project
2024-4-3 14:38:53-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 14:38:53-debug:   Number of all scenes: 1
2024-4-3 14:38:53-debug:   Number of all scripts: 3
2024-4-3 14:38:53-debug:   Number of other assets: 326
2024-4-3 14:38:53-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 14:38:53-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 14:38:53-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 14:38:53-debug: // ---- build task 查询 Asset Bundle ---- (48ms)
2024-4-3 14:38:53-debug: run build task 查询 Asset Bundle success in 48 ms√, progress: 5%
2024-4-3 14:38:53-debug: [Build Memory track]: 查询 Asset Bundle start:204.08MB, end 196.75MB, increase: -7507.30KB
2024-4-3 14:38:53-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 14:38:53-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 14:38:53-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 14:38:53-debug: [Build Memory track]: 查询 Asset Bundle start:196.76MB, end 196.95MB, increase: 196.43KB
2024-4-3 14:38:53-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 14:38:53-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 14:38:53-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 14:38:53-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-3 14:38:53-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-3 14:38:53-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:196.97MB, end 196.99MB, increase: 19.18KB
2024-4-3 14:38:53-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 14:38:53-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 14:38:53-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 14:38:53-debug: [Build Memory track]: 填充脚本数据到 settings.json start:197.00MB, end 197.02MB, increase: 14.06KB
2024-4-3 14:38:53-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 14:38:53-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 14:38:53-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 14:38:53-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (36ms)
2024-4-3 14:38:53-debug: run build task 整理部分构建选项内数据到 settings.json success in 36 ms√, progress: 15%
2024-4-3 14:38:53-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:197.03MB, end 197.43MB, increase: 404.31KB
2024-4-3 14:38:55-debug: recompile effect.bin success
2024-4-3 14:41:25-debug: refresh db internal success
2024-4-3 14:41:25-debug: refresh db assets success
2024-4-3 14:41:25-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 14:41:25-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 14:41:25-debug: asset-db:refresh-all-database (93ms)
2024-4-3 14:41:25-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 14:41:25-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 14:41:29-debug: start refresh asset from E:\cary\git\cocos-creator\3d\firework\assets\shader\space-001.effect...
2024-4-3 14:41:29-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\space-001.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 14:41:29-debug: refresh asset E:\cary\git\cocos-creator\3d\firework\assets\shader success
2024-4-3 14:41:30-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shaderbackground: #aaff85; color: #000;color: #000;
2024-4-3 14:41:31-debug: recompile effect.bin success
2024-4-3 14:41:37-debug: start move asset from E:\cary\git\cocos-creator\3d\firework\assets\shader\space-001.effect -> E:\cary\git\cocos-creator\3d\firework\assets\shader\partice.effect...
2024-4-3 14:41:37-debug: start refresh asset from E:\cary\git\cocos-creator\3d\firework\assets\shader\partice.effect...
2024-4-3 14:41:37-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\partice.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 14:41:37-debug: refresh asset E:\cary\git\cocos-creator\3d\firework\assets\shader success
2024-4-3 14:41:37-debug: start refresh asset from E:\cary\git\cocos-creator\3d\firework\assets\shader...
2024-4-3 14:41:37-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shaderbackground: #aaff85; color: #000;color: #000;
2024-4-3 14:41:37-debug: refresh asset E:\cary\git\cocos-creator\3d\firework\assets success
2024-4-3 14:41:37-debug: move asset from E:\cary\git\cocos-creator\3d\firework\assets\shader\space-001.effect -> E:\cary\git\cocos-creator\3d\firework\assets\shader\partice.effect success
2024-4-3 14:41:39-debug: recompile effect.bin success
2024-4-3 14:41:45-debug: refresh db internal success
2024-4-3 14:41:45-debug: refresh db assets success
2024-4-3 14:41:45-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 14:41:45-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 14:41:45-debug: asset-db:refresh-all-database (87ms)
2024-4-3 14:41:45-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-3 14:41:45-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-4-3 14:41:48-debug: start move asset from E:\cary\git\cocos-creator\3d\firework\assets\shader\partice.effect -> E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effect...
2024-4-3 14:41:48-debug: start refresh asset from E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effect...
2024-4-3 14:41:48-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 14:41:48-debug: refresh asset E:\cary\git\cocos-creator\3d\firework\assets\shader success
2024-4-3 14:41:48-debug: start refresh asset from E:\cary\git\cocos-creator\3d\firework\assets\shader...
2024-4-3 14:41:48-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shaderbackground: #aaff85; color: #000;color: #000;
2024-4-3 14:41:48-debug: refresh asset E:\cary\git\cocos-creator\3d\firework\assets success
2024-4-3 14:41:48-debug: move asset from E:\cary\git\cocos-creator\3d\firework\assets\shader\partice.effect -> E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effect success
2024-4-3 14:41:50-debug: recompile effect.bin success
2024-4-3 15:05:21-debug: refresh db internal success
2024-4-3 15:05:21-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:05:21-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:755: '=' : dimension mismatchERROR: 0:755: '=' : cannot convert from 'highp 4-component vector of float' to 'highp 3-component vector of float' 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 nor = normalize(In.position);756   float time = mod(cc_time.x, 3.0);757   vec3 v = nor * rand(cc_time.xy);758   In.position.xyz = v * time;759 760   vec4 pos = matWorld * In.position;761 762   v_position = pos.xyz;763   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);764   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);765   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;766 767   v_uv = a_texCoord;768   #if HAS_SECOND_UV769     v_uv1 = a_texCoord1;770   #endif771   v_color = a_color;772 773   CC_TRANSFER_FOG(pos);774   v_shadowPos = cc_matLightViewProj * pos;775   gl_PointSize = 1.0;776   return cc_matProj * (cc_matView * matWorld) * In.position;777 }778 779 780 void main() { gl_Position = vert(); }781 
2024-4-3 15:05:21-debug: refresh db assets success
2024-4-3 15:05:21-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:05:21-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:05:21-debug: asset-db:refresh-all-database (410ms)
2024-4-3 15:05:21-debug: asset-db:worker-effect-data-processing (7ms)
2024-4-3 15:05:21-debug: asset-db-hook-engine-extends-afterRefresh (7ms)
2024-4-3 15:07:18-debug: refresh db internal success
2024-4-3 15:07:18-debug: refresh db assets success
2024-4-3 15:07:18-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:07:19-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:07:19-debug: asset-db:refresh-all-database (87ms)
2024-4-3 15:07:19-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-3 15:07:19-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-4-3 15:07:36-debug: refresh db internal success
2024-4-3 15:07:36-debug: refresh db assets success
2024-4-3 15:07:36-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:07:36-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:07:36-debug: asset-db:refresh-all-database (292ms)
2024-4-3 15:07:36-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 15:07:36-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-3 15:07:50-debug: refresh db internal success
2024-4-3 15:07:50-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:07:51-debug: refresh db assets success
2024-4-3 15:07:51-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:07:51-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:07:51-debug: asset-db:refresh-all-database (783ms)
2024-4-3 15:07:51-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 15:07:51-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 15:07:53-debug: recompile effect.bin success
2024-4-3 15:07:54-debug: start refresh asset from E:\cary\git\cocos-creator\3d\firework\assets\main.scene...
2024-4-3 15:07:54-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\main.scenebackground: #aaff85; color: #000;color: #000;
2024-4-3 15:07:54-debug: refresh asset E:\cary\git\cocos-creator\3d\firework\assets success
2024-4-3 15:07:55-debug: Query all assets info in project
2024-4-3 15:07:55-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:07:55-debug:   Number of all scripts: 3
2024-4-3 15:07:55-debug:   Number of other assets: 327
2024-4-3 15:07:55-debug:   Number of all scenes: 1
2024-4-3 15:07:55-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:07:55-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:07:55-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:07:55-debug: // ---- build task 查询 Asset Bundle ---- (59ms)
2024-4-3 15:07:55-debug: [Build Memory track]: 查询 Asset Bundle start:208.87MB, end 210.82MB, increase: 1.95MB
2024-4-3 15:07:55-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:07:55-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:07:55-debug: run build task 查询 Asset Bundle success in 59 ms√, progress: 5%
2024-4-3 15:07:55-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 15:07:55-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 15:07:55-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:07:55-debug: [Build Memory track]: 查询 Asset Bundle start:210.83MB, end 210.85MB, increase: 15.84KB
2024-4-3 15:07:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:07:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 15:07:55-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.86MB, end 210.88MB, increase: 17.52KB
2024-4-3 15:07:55-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 15:07:55-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:07:55-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:07:55-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 15:07:55-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 15:07:55-debug: [Build Memory track]: 填充脚本数据到 settings.json start:210.90MB, end 210.91MB, increase: 16.05KB
2024-4-3 15:07:55-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:07:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:07:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (31ms)
2024-4-3 15:07:55-debug: run build task 整理部分构建选项内数据到 settings.json success in 31 ms√, progress: 15%
2024-4-3 15:07:55-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.93MB, end 211.05MB, increase: 127.20KB
2024-4-3 15:08:22-debug: start refresh asset from E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtl...
2024-4-3 15:08:22-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:08:22-debug: refresh asset E:\cary\git\cocos-creator\3d\firework\assets\shader success
2024-4-3 15:08:22-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shaderbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:08:40-debug: start refresh asset from E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtl...
2024-4-3 15:08:40-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:08:40-debug: refresh asset E:\cary\git\cocos-creator\3d\firework\assets\shader success
2024-4-3 15:08:50-debug: start refresh asset from E:\cary\git\cocos-creator\3d\firework\assets\main.scene...
2024-4-3 15:08:50-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\main.scenebackground: #aaff85; color: #000;color: #000;
2024-4-3 15:08:50-debug: refresh asset E:\cary\git\cocos-creator\3d\firework\assets success
2024-4-3 15:08:51-debug: Query all assets info in project
2024-4-3 15:08:51-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:08:51-debug:   Number of all scenes: 1
2024-4-3 15:08:51-debug:   Number of all scripts: 3
2024-4-3 15:08:51-debug:   Number of other assets: 328
2024-4-3 15:08:51-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:08:51-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:08:51-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:08:51-debug: // ---- build task 查询 Asset Bundle ---- (12ms)
2024-4-3 15:08:51-debug: run build task 查询 Asset Bundle success in 12 ms√, progress: 5%
2024-4-3 15:08:51-debug: [Build Memory track]: 查询 Asset Bundle start:208.50MB, end 208.55MB, increase: 47.16KB
2024-4-3 15:08:51-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:08:51-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:08:51-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 15:08:51-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 15:08:51-debug: [Build Memory track]: 查询 Asset Bundle start:208.56MB, end 208.58MB, increase: 16.44KB
2024-4-3 15:08:51-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (1ms)
2024-4-3 15:08:51-debug: run build task 整理部分构建选项内数据到 settings.json success in 1 ms√, progress: 12%
2024-4-3 15:08:51-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:208.59MB, end 208.61MB, increase: 17.16KB
2024-4-3 15:08:51-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:08:51-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:08:51-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:08:51-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:08:51-debug: // ---- build task 填充脚本数据到 settings.json ---- (1ms)
2024-4-3 15:08:51-debug: run build task 填充脚本数据到 settings.json success in 1 ms√, progress: 13%
2024-4-3 15:08:51-debug: [Build Memory track]: 填充脚本数据到 settings.json start:208.63MB, end 208.64MB, increase: 16.63KB
2024-4-3 15:08:51-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:08:51-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:08:51-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (8ms)
2024-4-3 15:08:51-debug: run build task 整理部分构建选项内数据到 settings.json success in 8 ms√, progress: 15%
2024-4-3 15:08:51-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:208.66MB, end 208.78MB, increase: 127.24KB
2024-4-3 15:08:54-debug: refresh db internal success
2024-4-3 15:08:54-debug: refresh db assets success
2024-4-3 15:08:54-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:08:54-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:08:54-debug: asset-db:refresh-all-database (213ms)
2024-4-3 15:08:54-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 15:08:54-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 15:09:58-debug: refresh db internal success
2024-4-3 15:09:58-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:09:58-debug: refresh db assets success
2024-4-3 15:09:58-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:09:58-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:09:58-debug: asset-db:refresh-all-database (304ms)
2024-4-3 15:09:58-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 15:09:58-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 15:09:58-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:09:59-debug: Query all assets info in project
2024-4-3 15:09:59-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:10:00-debug:   Number of all scenes: 1
2024-4-3 15:10:00-debug:   Number of all scripts: 3
2024-4-3 15:10:00-debug:   Number of other assets: 328
2024-4-3 15:10:00-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:10:00-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:10:00-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:10:00-debug: // ---- build task 查询 Asset Bundle ---- (53ms)
2024-4-3 15:10:00-debug: [Build Memory track]: 查询 Asset Bundle start:209.57MB, end 202.83MB, increase: -6902.21KB
2024-4-3 15:10:00-debug: run build task 查询 Asset Bundle success in 53 ms√, progress: 5%
2024-4-3 15:10:00-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:10:00-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:10:00-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 15:10:00-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 15:10:00-debug: [Build Memory track]: 查询 Asset Bundle start:202.84MB, end 202.86MB, increase: 16.25KB
2024-4-3 15:10:00-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:10:00-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:10:00-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (7ms)
2024-4-3 15:10:00-debug: run build task 整理部分构建选项内数据到 settings.json success in 7 ms√, progress: 12%
2024-4-3 15:10:00-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:202.87MB, end 203.04MB, increase: 167.13KB
2024-4-3 15:10:00-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:10:00-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:10:00-debug: // ---- build task 填充脚本数据到 settings.json ---- (4ms)
2024-4-3 15:10:00-debug: run build task 填充脚本数据到 settings.json success in 4 ms√, progress: 13%
2024-4-3 15:10:00-debug: [Build Memory track]: 填充脚本数据到 settings.json start:203.05MB, end 203.07MB, increase: 16.34KB
2024-4-3 15:10:00-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:10:00-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:10:00-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (37ms)
2024-4-3 15:10:00-debug: run build task 整理部分构建选项内数据到 settings.json success in 37 ms√, progress: 15%
2024-4-3 15:10:00-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:203.08MB, end 206.13MB, increase: 3.04MB
2024-4-3 15:10:00-debug: recompile effect.bin success
2024-4-3 15:10:24-debug: refresh db internal success
2024-4-3 15:10:24-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:10:25-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:10:25-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:10:25-debug: refresh db assets success
2024-4-3 15:10:25-debug: asset-db:refresh-all-database (867ms)
2024-4-3 15:10:25-debug: asset-db:worker-effect-data-processing (6ms)
2024-4-3 15:10:25-debug: asset-db-hook-engine-extends-afterRefresh (7ms)
2024-4-3 15:10:25-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:10:26-debug: Query all assets info in project
2024-4-3 15:10:26-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:10:26-debug:   Number of all scenes: 1
2024-4-3 15:10:26-debug:   Number of all scripts: 3
2024-4-3 15:10:26-debug:   Number of other assets: 328
2024-4-3 15:10:26-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:10:26-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:10:26-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:10:26-debug: // ---- build task 查询 Asset Bundle ---- (66ms)
2024-4-3 15:10:26-debug: run build task 查询 Asset Bundle success in 66 ms√, progress: 5%
2024-4-3 15:10:26-debug: [Build Memory track]: 查询 Asset Bundle start:205.62MB, end 204.81MB, increase: -831.60KB
2024-4-3 15:10:26-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:10:26-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:10:26-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 15:10:26-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 15:10:26-debug: [Build Memory track]: 查询 Asset Bundle start:204.82MB, end 204.84MB, increase: 15.93KB
2024-4-3 15:10:26-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:10:26-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:10:26-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (5ms)
2024-4-3 15:10:26-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:204.85MB, end 207.39MB, increase: 2.53MB
2024-4-3 15:10:26-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:10:26-debug: run build task 整理部分构建选项内数据到 settings.json success in 5 ms√, progress: 12%
2024-4-3 15:10:26-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:10:26-debug: // ---- build task 填充脚本数据到 settings.json ---- (4ms)
2024-4-3 15:10:26-debug: [Build Memory track]: 填充脚本数据到 settings.json start:207.40MB, end 207.42MB, increase: 16.34KB
2024-4-3 15:10:26-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:10:26-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:10:26-debug: run build task 填充脚本数据到 settings.json success in 4 ms√, progress: 13%
2024-4-3 15:10:27-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (57ms)
2024-4-3 15:10:27-debug: run build task 整理部分构建选项内数据到 settings.json success in 57 ms√, progress: 15%
2024-4-3 15:10:27-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.43MB, end 211.51MB, increase: 4.07MB
2024-4-3 15:10:27-debug: recompile effect.bin success
2024-4-3 15:13:36-debug: refresh db internal success
2024-4-3 15:13:36-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:13:37-debug: refresh db assets success
2024-4-3 15:13:37-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:13:37-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:13:37-debug: asset-db:refresh-all-database (894ms)
2024-4-3 15:13:37-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 15:13:37-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-3 15:13:37-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:13:38-debug: Query all assets info in project
2024-4-3 15:13:38-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:13:38-debug:   Number of all scenes: 1
2024-4-3 15:13:38-debug:   Number of all scripts: 3
2024-4-3 15:13:38-debug:   Number of other assets: 328
2024-4-3 15:13:38-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:13:38-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:13:38-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:13:38-debug: run build task 查询 Asset Bundle success in 48 ms√, progress: 5%
2024-4-3 15:13:38-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:13:38-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:13:38-debug: // ---- build task 查询 Asset Bundle ---- (48ms)
2024-4-3 15:13:38-debug: [Build Memory track]: 查询 Asset Bundle start:202.21MB, end 198.18MB, increase: -4131.76KB
2024-4-3 15:13:38-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 15:13:38-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 15:13:38-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:13:38-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-3 15:13:38-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-3 15:13:38-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:198.22MB, end 198.24MB, increase: 15.02KB
2024-4-3 15:13:38-debug: [Build Memory track]: 查询 Asset Bundle start:198.19MB, end 198.21MB, increase: 14.98KB
2024-4-3 15:13:38-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:13:38-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:13:38-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:13:39-debug: // ---- build task 填充脚本数据到 settings.json ---- (4ms)
2024-4-3 15:13:39-debug: run build task 填充脚本数据到 settings.json success in 4 ms√, progress: 13%
2024-4-3 15:13:39-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:13:39-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:13:39-debug: [Build Memory track]: 填充脚本数据到 settings.json start:198.25MB, end 198.32MB, increase: 69.78KB
2024-4-3 15:13:39-debug: run build task 整理部分构建选项内数据到 settings.json success in 36 ms√, progress: 15%
2024-4-3 15:13:39-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:198.34MB, end 198.47MB, increase: 132.84KB
2024-4-3 15:13:39-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (36ms)
2024-4-3 15:13:40-debug: recompile effect.bin success
2024-4-3 15:14:24-debug: refresh db internal success
2024-4-3 15:14:24-debug: refresh db assets success
2024-4-3 15:14:24-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:14:24-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:14:24-debug: asset-db:refresh-all-database (279ms)
2024-4-3 15:14:24-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 15:14:24-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 15:14:31-debug: refresh db internal success
2024-4-3 15:14:31-debug: refresh db assets success
2024-4-3 15:14:31-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:14:31-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:14:31-debug: asset-db:refresh-all-database (381ms)
2024-4-3 15:14:31-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 15:14:31-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 15:14:34-debug: refresh db internal success
2024-4-3 15:14:34-debug: refresh db assets success
2024-4-3 15:14:34-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:14:34-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:14:34-debug: asset-db:refresh-all-database (291ms)
2024-4-3 15:14:34-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 15:14:34-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 15:14:38-debug: start refresh asset from E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtl...
2024-4-3 15:14:38-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:14:38-debug: refresh asset E:\cary\git\cocos-creator\3d\firework\assets\shader success
2024-4-3 15:14:38-debug: refresh db internal success
2024-4-3 15:14:38-debug: refresh db assets success
2024-4-3 15:14:38-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:14:38-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:14:38-debug: asset-db:worker-effect-data-processing (6ms)
2024-4-3 15:14:38-debug: asset-db:refresh-all-database (399ms)
2024-4-3 15:14:38-debug: asset-db-hook-engine-extends-afterRefresh (11ms)
2024-4-3 15:14:41-debug: Query all assets info in project
2024-4-3 15:14:41-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:14:41-debug:   Number of all scenes: 1
2024-4-3 15:14:41-debug:   Number of all scripts: 3
2024-4-3 15:14:41-debug:   Number of other assets: 328
2024-4-3 15:14:41-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:14:41-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:14:41-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:14:41-debug: // ---- build task 查询 Asset Bundle ---- (19ms)
2024-4-3 15:14:41-debug: run build task 查询 Asset Bundle success in 19 ms√, progress: 5%
2024-4-3 15:14:41-debug: [Build Memory track]: 查询 Asset Bundle start:209.54MB, end 211.38MB, increase: 1.84MB
2024-4-3 15:14:41-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:14:41-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:14:41-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 15:14:41-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 15:14:41-debug: [Build Memory track]: 查询 Asset Bundle start:211.39MB, end 211.41MB, increase: 15.90KB
2024-4-3 15:14:41-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:14:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:14:41-debug: run build task 整理部分构建选项内数据到 settings.json success in 1 ms√, progress: 12%
2024-4-3 15:14:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (1ms)
2024-4-3 15:14:41-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:14:41-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:14:41-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.42MB, end 211.44MB, increase: 17.63KB
2024-4-3 15:14:41-debug: // ---- build task 填充脚本数据到 settings.json ---- (1ms)
2024-4-3 15:14:41-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:14:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:14:41-debug: run build task 填充脚本数据到 settings.json success in 1 ms√, progress: 13%
2024-4-3 15:14:41-debug: [Build Memory track]: 填充脚本数据到 settings.json start:211.46MB, end 211.47MB, increase: 15.80KB
2024-4-3 15:14:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (7ms)
2024-4-3 15:14:41-debug: run build task 整理部分构建选项内数据到 settings.json success in 7 ms√, progress: 15%
2024-4-3 15:14:41-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.49MB, end 211.61MB, increase: 129.70KB
2024-4-3 15:15:28-debug: refresh db internal success
2024-4-3 15:15:28-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:15:28-debug: refresh db assets success
2024-4-3 15:15:28-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:15:28-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:15:28-debug: asset-db:refresh-all-database (468ms)
2024-4-3 15:15:28-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 15:15:28-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-3 15:15:31-debug: Query all assets info in project
2024-4-3 15:15:31-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:15:31-debug:   Number of all scenes: 1
2024-4-3 15:15:31-debug:   Number of all scripts: 3
2024-4-3 15:15:31-debug:   Number of other assets: 328
2024-4-3 15:15:31-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:15:31-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:15:31-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:15:31-debug: run build task 查询 Asset Bundle success in 71 ms√, progress: 5%
2024-4-3 15:15:31-debug: [Build Memory track]: 查询 Asset Bundle start:211.84MB, end 211.89MB, increase: 51.23KB
2024-4-3 15:15:31-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:15:31-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:15:31-debug: // ---- build task 查询 Asset Bundle ---- (71ms)
2024-4-3 15:15:31-debug: // ---- build task 查询 Asset Bundle ---- (9ms)
2024-4-3 15:15:31-debug: run build task 查询 Asset Bundle success in 9 ms√, progress: 10%
2024-4-3 15:15:31-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:15:31-debug: [Build Memory track]: 查询 Asset Bundle start:211.90MB, end 211.92MB, increase: 15.29KB
2024-4-3 15:15:31-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:15:31-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 15:15:31-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 15:15:31-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.94MB, end 211.95MB, increase: 17.54KB
2024-4-3 15:15:31-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:15:31-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:15:31-debug: run build task 填充脚本数据到 settings.json success in 12 ms√, progress: 13%
2024-4-3 15:15:31-debug: [Build Memory track]: 填充脚本数据到 settings.json start:211.97MB, end 211.98MB, increase: 16.74KB
2024-4-3 15:15:31-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:15:31-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:15:31-debug: // ---- build task 填充脚本数据到 settings.json ---- (12ms)
2024-4-3 15:15:31-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (34ms)
2024-4-3 15:15:31-debug: run build task 整理部分构建选项内数据到 settings.json success in 34 ms√, progress: 15%
2024-4-3 15:15:31-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:212.00MB, end 212.12MB, increase: 123.93KB
2024-4-3 15:16:07-debug: start refresh asset from E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtl...
2024-4-3 15:16:07-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:16:07-debug: refresh asset E:\cary\git\cocos-creator\3d\firework\assets\shader success
2024-4-3 15:16:16-debug: Query all assets info in project
2024-4-3 15:16:16-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:16:16-debug:   Number of all scenes: 1
2024-4-3 15:16:16-debug:   Number of all scripts: 3
2024-4-3 15:16:16-debug:   Number of other assets: 328
2024-4-3 15:16:16-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:16:16-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:16:16-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:16:16-debug: // ---- build task 查询 Asset Bundle ---- (19ms)
2024-4-3 15:16:16-debug: run build task 查询 Asset Bundle success in 19 ms√, progress: 5%
2024-4-3 15:16:16-debug: [Build Memory track]: 查询 Asset Bundle start:212.73MB, end 213.13MB, increase: 409.69KB
2024-4-3 15:16:16-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:16:16-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:16:16-debug: run build task 查询 Asset Bundle success in √, progress: 10%
2024-4-3 15:16:16-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:16:16-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:16:16-debug: [Build Memory track]: 查询 Asset Bundle start:213.14MB, end 213.15MB, increase: 10.49KB
2024-4-3 15:16:16-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 15:16:16-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 15:16:16-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:213.17MB, end 213.18MB, increase: 16.98KB
2024-4-3 15:16:16-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:16:16-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:16:16-debug: // ---- build task 填充脚本数据到 settings.json ---- (1ms)
2024-4-3 15:16:16-debug: run build task 填充脚本数据到 settings.json success in 1 ms√, progress: 13%
2024-4-3 15:16:16-debug: [Build Memory track]: 填充脚本数据到 settings.json start:213.20MB, end 212.48MB, increase: -736.50KB
2024-4-3 15:16:16-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:16:16-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:16:16-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (8ms)
2024-4-3 15:16:16-debug: run build task 整理部分构建选项内数据到 settings.json success in 8 ms√, progress: 15%
2024-4-3 15:16:16-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:212.50MB, end 212.63MB, increase: 134.24KB
2024-4-3 15:16:31-debug: refresh db internal success
2024-4-3 15:16:31-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:16:31-debug: refresh db assets success
2024-4-3 15:16:31-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:16:31-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:16:31-debug: asset-db:refresh-all-database (332ms)
2024-4-3 15:16:31-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 15:16:31-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 15:16:33-debug: Query all assets info in project
2024-4-3 15:16:33-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:16:33-debug:   Number of all scenes: 1
2024-4-3 15:16:33-debug:   Number of all scripts: 3
2024-4-3 15:16:34-debug:   Number of other assets: 328
2024-4-3 15:16:34-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:16:34-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:16:34-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:16:34-debug: // ---- build task 查询 Asset Bundle ---- (41ms)
2024-4-3 15:16:34-debug: [Build Memory track]: 查询 Asset Bundle start:215.12MB, end 215.29MB, increase: 172.47KB
2024-4-3 15:16:34-debug: run build task 查询 Asset Bundle success in 41 ms√, progress: 5%
2024-4-3 15:16:34-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:16:34-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:16:34-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 15:16:34-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 15:16:34-debug: [Build Memory track]: 查询 Asset Bundle start:215.31MB, end 215.32MB, increase: 15.39KB
2024-4-3 15:16:34-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:16:34-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:16:34-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-3 15:16:34-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-3 15:16:34-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:16:34-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:215.34MB, end 215.35MB, increase: 17.27KB
2024-4-3 15:16:34-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:16:34-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 15:16:34-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 15:16:34-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:16:34-debug: [Build Memory track]: 填充脚本数据到 settings.json start:215.37MB, end 215.39MB, increase: 16.61KB
2024-4-3 15:16:34-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:16:34-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (20ms)
2024-4-3 15:16:34-debug: run build task 整理部分构建选项内数据到 settings.json success in 20 ms√, progress: 15%
2024-4-3 15:16:34-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:215.40MB, end 215.52MB, increase: 126.47KB
2024-4-3 15:20:56-debug: refresh db internal success
2024-4-3 15:20:56-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:20:56-debug: refresh db assets success
2024-4-3 15:20:56-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:20:56-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:20:56-debug: asset-db:refresh-all-database (297ms)
2024-4-3 15:20:56-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:20:56-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 15:20:56-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 15:20:58-debug: Query all assets info in project
2024-4-3 15:20:58-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:20:58-debug:   Number of all scenes: 1
2024-4-3 15:20:58-debug:   Number of other assets: 328
2024-4-3 15:20:58-debug:   Number of all scripts: 3
2024-4-3 15:20:58-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:20:58-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:20:58-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:20:58-debug: // ---- build task 查询 Asset Bundle ---- (47ms)
2024-4-3 15:20:58-debug: run build task 查询 Asset Bundle success in 47 ms√, progress: 5%
2024-4-3 15:20:58-debug: [Build Memory track]: 查询 Asset Bundle start:205.05MB, end 211.93MB, increase: 6.88MB
2024-4-3 15:20:58-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:20:58-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:20:58-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 15:20:58-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 15:20:58-debug: [Build Memory track]: 查询 Asset Bundle start:211.95MB, end 211.96MB, increase: 16.40KB
2024-4-3 15:20:58-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:20:58-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:20:58-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-3 15:20:58-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-3 15:20:58-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.98MB, end 211.99MB, increase: 14.92KB
2024-4-3 15:20:58-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:20:58-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:20:58-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 15:20:58-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 15:20:58-debug: [Build Memory track]: 填充脚本数据到 settings.json start:212.01MB, end 212.03MB, increase: 19.83KB
2024-4-3 15:20:58-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:20:58-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:20:58-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (42ms)
2024-4-3 15:20:58-debug: run build task 整理部分构建选项内数据到 settings.json success in 42 ms√, progress: 15%
2024-4-3 15:20:58-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:212.04MB, end 215.89MB, increase: 3.85MB
2024-4-3 15:20:59-debug: recompile effect.bin success
2024-4-3 15:21:52-debug: refresh db internal success
2024-4-3 15:21:52-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:21:52-debug: refresh db assets success
2024-4-3 15:21:52-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:21:52-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:21:52-debug: asset-db:refresh-all-database (305ms)
2024-4-3 15:21:52-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 15:21:52-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-3 15:21:52-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:21:54-debug: recompile effect.bin success
2024-4-3 15:21:56-debug: Query all assets info in project
2024-4-3 15:21:56-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:21:56-debug:   Number of all scenes: 1
2024-4-3 15:21:56-debug:   Number of all scripts: 3
2024-4-3 15:21:56-debug:   Number of other assets: 328
2024-4-3 15:21:56-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:21:56-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:21:56-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:21:56-debug: // ---- build task 查询 Asset Bundle ---- (38ms)
2024-4-3 15:21:56-debug: run build task 查询 Asset Bundle success in 38 ms√, progress: 5%
2024-4-3 15:21:56-debug: [Build Memory track]: 查询 Asset Bundle start:205.92MB, end 207.79MB, increase: 1.86MB
2024-4-3 15:21:56-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:21:56-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:21:56-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 15:21:56-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 15:21:56-debug: [Build Memory track]: 查询 Asset Bundle start:207.80MB, end 207.82MB, increase: 16.32KB
2024-4-3 15:21:56-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:21:56-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:21:56-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (1ms)
2024-4-3 15:21:56-debug: run build task 整理部分构建选项内数据到 settings.json success in 1 ms√, progress: 12%
2024-4-3 15:21:56-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.83MB, end 207.85MB, increase: 18.26KB
2024-4-3 15:21:56-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:21:56-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:21:56-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 15:21:56-debug: [Build Memory track]: 填充脚本数据到 settings.json start:207.87MB, end 207.88MB, increase: 16.62KB
2024-4-3 15:21:56-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 15:21:56-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:21:56-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:21:56-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (27ms)
2024-4-3 15:21:56-debug: run build task 整理部分构建选项内数据到 settings.json success in 27 ms√, progress: 15%
2024-4-3 15:21:56-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.90MB, end 208.02MB, increase: 126.03KB
2024-4-3 15:22:22-debug: refresh db internal success
2024-4-3 15:22:22-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:22:23-debug: refresh db assets success
2024-4-3 15:22:23-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:22:23-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:22:23-debug: asset-db:refresh-all-database (880ms)
2024-4-3 15:22:23-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:22:23-debug: asset-db:worker-effect-data-processing (8ms)
2024-4-3 15:22:23-debug: asset-db-hook-engine-extends-afterRefresh (10ms)
2024-4-3 15:22:24-debug: Query all assets info in project
2024-4-3 15:22:24-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:22:24-debug:   Number of all scenes: 1
2024-4-3 15:22:24-debug:   Number of all scripts: 3
2024-4-3 15:22:24-debug:   Number of other assets: 328
2024-4-3 15:22:24-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:22:24-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:22:24-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:22:24-debug: // ---- build task 查询 Asset Bundle ---- (52ms)
2024-4-3 15:22:24-debug: [Build Memory track]: 查询 Asset Bundle start:213.55MB, end 216.11MB, increase: 2.56MB
2024-4-3 15:22:24-debug: run build task 查询 Asset Bundle success in 52 ms√, progress: 5%
2024-4-3 15:22:24-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:22:24-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-4-3 15:22:24-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:22:24-debug: [Build Memory track]: 查询 Asset Bundle start:216.13MB, end 216.14MB, increase: 14.50KB
2024-4-3 15:22:24-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 10%
2024-4-3 15:22:24-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:22:24-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:22:24-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-3 15:22:24-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-3 15:22:24-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:22:24-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:22:24-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:216.16MB, end 216.18MB, increase: 17.43KB
2024-4-3 15:22:24-debug: // ---- build task 填充脚本数据到 settings.json ---- (5ms)
2024-4-3 15:22:24-debug: [Build Memory track]: 填充脚本数据到 settings.json start:216.19MB, end 216.21MB, increase: 17.89KB
2024-4-3 15:22:24-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:22:24-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:22:24-debug: run build task 填充脚本数据到 settings.json success in 5 ms√, progress: 13%
2024-4-3 15:22:24-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (50ms)
2024-4-3 15:22:24-debug: run build task 整理部分构建选项内数据到 settings.json success in 50 ms√, progress: 15%
2024-4-3 15:22:24-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:216.22MB, end 219.09MB, increase: 2.87MB
2024-4-3 15:22:25-debug: recompile effect.bin success
2024-4-3 15:22:45-debug: refresh db internal success
2024-4-3 15:22:45-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:22:45-debug: refresh db assets success
2024-4-3 15:22:45-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:22:45-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:22:45-debug: asset-db:refresh-all-database (920ms)
2024-4-3 15:22:45-debug: asset-db-hook-engine-extends-afterRefresh (15ms)
2024-4-3 15:22:45-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:22:45-debug: asset-db:worker-effect-data-processing (12ms)
2024-4-3 15:22:46-debug: Query all assets info in project
2024-4-3 15:22:46-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:22:47-debug:   Number of all scenes: 1
2024-4-3 15:22:47-debug:   Number of other assets: 328
2024-4-3 15:22:47-debug:   Number of all scripts: 3
2024-4-3 15:22:47-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:22:47-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:22:47-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:22:47-debug: // ---- build task 查询 Asset Bundle ---- (50ms)
2024-4-3 15:22:47-debug: run build task 查询 Asset Bundle success in 50 ms√, progress: 5%
2024-4-3 15:22:47-debug: [Build Memory track]: 查询 Asset Bundle start:204.39MB, end 198.42MB, increase: -6116.16KB
2024-4-3 15:22:47-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:22:47-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:22:47-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 15:22:47-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 15:22:47-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:22:47-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:22:47-debug: [Build Memory track]: 查询 Asset Bundle start:198.43MB, end 198.48MB, increase: 53.15KB
2024-4-3 15:22:47-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 15:22:47-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:198.50MB, end 198.52MB, increase: 17.75KB
2024-4-3 15:22:47-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:22:47-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:22:47-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 15:22:47-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 15:22:47-debug: [Build Memory track]: 填充脚本数据到 settings.json start:198.53MB, end 198.55MB, increase: 16.59KB
2024-4-3 15:22:47-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:22:47-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:22:47-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 15:22:47-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (66ms)
2024-4-3 15:22:47-debug: run build task 整理部分构建选项内数据到 settings.json success in 66 ms√, progress: 15%
2024-4-3 15:22:47-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:198.56MB, end 198.95MB, increase: 397.68KB
2024-4-3 15:22:48-debug: recompile effect.bin success
2024-4-3 15:34:10-debug: refresh db internal success
2024-4-3 15:34:10-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:34:10-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:757: '=' : dimension mismatchERROR: 0:757: '=' : cannot convert from 'highp float' to 'highp 3-component vector of float'ERROR: 0:758: ';' : syntax error 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float time = mod(cc_time.x, 5.0);757   vec3 r = rand(In.position.xy);758   In.position.xyz = dir * time * ;759 760   vec4 pos = matWorld * In.position;761 762   v_position = pos.xyz;763   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);764   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);765   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;766 767   v_uv = a_texCoord;768   #if HAS_SECOND_UV769     v_uv1 = a_texCoord1;770   #endif771   v_color = a_color;772 773   CC_TRANSFER_FOG(pos);774   v_shadowPos = cc_matLightViewProj * pos;775   gl_PointSize = 1.0;776   return cc_matProj * (cc_matView * matWorld) * In.position;777 }778 779 780 void main() { gl_Position = vert(); }781 
2024-4-3 15:34:10-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:34:10-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:34:10-debug: refresh db assets success
2024-4-3 15:34:10-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-3 15:34:10-debug: asset-db:refresh-all-database (242ms)
2024-4-3 15:34:10-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 15:34:10-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:34:12-debug: Query all assets info in project
2024-4-3 15:34:12-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:34:12-debug:   Number of all scenes: 1
2024-4-3 15:34:12-debug:   Number of all scripts: 3
2024-4-3 15:34:12-debug:   Number of other assets: 327
2024-4-3 15:34:12-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:34:12-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:34:12-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:34:12-debug: // ---- build task 查询 Asset Bundle ---- (28ms)
2024-4-3 15:34:12-debug: run build task 查询 Asset Bundle success in 28 ms√, progress: 5%
2024-4-3 15:34:12-debug: [Build Memory track]: 查询 Asset Bundle start:210.92MB, end 209.60MB, increase: -1354.66KB
2024-4-3 15:34:12-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:34:12-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:34:12-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 15:34:12-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 15:34:12-debug: [Build Memory track]: 查询 Asset Bundle start:209.62MB, end 209.63MB, increase: 16.12KB
2024-4-3 15:34:12-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:34:12-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:34:12-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 15:34:12-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 15:34:12-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:209.65MB, end 209.67MB, increase: 18.74KB
2024-4-3 15:34:12-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:34:12-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:34:12-debug: run build task 填充脚本数据到 settings.json success in 1 ms√, progress: 13%
2024-4-3 15:34:12-debug: // ---- build task 填充脚本数据到 settings.json ---- (1ms)
2024-4-3 15:34:12-debug: [Build Memory track]: 填充脚本数据到 settings.json start:209.68MB, end 209.70MB, increase: 17.43KB
2024-4-3 15:34:12-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:34:12-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:34:12-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (15ms)
2024-4-3 15:34:12-debug: run build task 整理部分构建选项内数据到 settings.json success in 15 ms√, progress: 15%
2024-4-3 15:34:12-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:209.71MB, end 209.84MB, increase: 125.16KB
2024-4-3 15:34:23-debug: refresh db internal success
2024-4-3 15:34:23-debug: refresh db assets success
2024-4-3 15:34:23-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:34:23-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:34:23-debug: asset-db:refresh-all-database (282ms)
2024-4-3 15:34:23-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 15:34:23-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 15:34:30-debug: refresh db internal success
2024-4-3 15:34:30-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:34:31-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:757: '=' : dimension mismatchERROR: 0:757: '=' : cannot convert from 'highp float' to 'highp 3-component vector of float' 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float time = mod(cc_time.x, 5.0);757   vec3 r = rand(In.position.xy);758   In.position.xyz = dir * time ;759 760   vec4 pos = matWorld * In.position;761 762   v_position = pos.xyz;763   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);764   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);765   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;766 767   v_uv = a_texCoord;768   #if HAS_SECOND_UV769     v_uv1 = a_texCoord1;770   #endif771   v_color = a_color;772 773   CC_TRANSFER_FOG(pos);774   v_shadowPos = cc_matLightViewProj * pos;775   gl_PointSize = 1.0;776   return cc_matProj * (cc_matView * matWorld) * In.position;777 }778 779 780 void main() { gl_Position = vert(); }781 
2024-4-3 15:34:31-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:34:31-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:34:31-debug: refresh db assets success
2024-4-3 15:34:31-debug: asset-db:refresh-all-database (416ms)
2024-4-3 15:34:31-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 15:34:31-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 15:34:31-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:34:42-debug: refresh db internal success
2024-4-3 15:34:42-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:34:42-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:757: '=' : dimension mismatchERROR: 0:757: '=' : cannot convert from 'highp float' to 'highp 3-component vector of float' 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float time = mod(cc_time.x, 5.0);757   vec3 r = rand(In.position.xy);758   In.position.xyz = dir * time;759 760   vec4 pos = matWorld * In.position;761 762   v_position = pos.xyz;763   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);764   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);765   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;766 767   v_uv = a_texCoord;768   #if HAS_SECOND_UV769     v_uv1 = a_texCoord1;770   #endif771   v_color = a_color;772 773   CC_TRANSFER_FOG(pos);774   v_shadowPos = cc_matLightViewProj * pos;775   gl_PointSize = 1.0;776   return cc_matProj * (cc_matView * matWorld) * In.position;777 }778 779 780 void main() { gl_Position = vert(); }781 
2024-4-3 15:34:42-debug: refresh db assets success
2024-4-3 15:34:42-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:34:42-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:34:42-debug: asset-db:refresh-all-database (496ms)
2024-4-3 15:34:42-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:34:42-debug: asset-db:worker-effect-data-processing (23ms)
2024-4-3 15:34:42-debug: asset-db-hook-engine-extends-afterRefresh (26ms)
2024-4-3 15:35:04-debug: refresh db internal success
2024-4-3 15:35:04-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:35:04-debug: refresh db assets success
2024-4-3 15:35:04-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:757: '=' : dimension mismatchERROR: 0:757: '=' : cannot convert from 'highp float' to 'highp 3-component vector of float' 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float time = mod(cc_time.x, 5.0);757   vec3 r = rand(In.position.xy);758   In.position.xyz = dir.xyz * time;759 760   vec4 pos = matWorld * In.position;761 762   v_position = pos.xyz;763   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);764   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);765   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;766 767   v_uv = a_texCoord;768   #if HAS_SECOND_UV769     v_uv1 = a_texCoord1;770   #endif771   v_color = a_color;772 773   CC_TRANSFER_FOG(pos);774   v_shadowPos = cc_matLightViewProj * pos;775   gl_PointSize = 1.0;776   return cc_matProj * (cc_matView * matWorld) * In.position;777 }778 779 780 void main() { gl_Position = vert(); }781 
2024-4-3 15:35:04-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:35:04-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:35:04-debug: asset-db:refresh-all-database (471ms)
2024-4-3 15:35:04-debug: asset-db:worker-effect-data-processing (9ms)
2024-4-3 15:35:04-debug: asset-db-hook-engine-extends-afterRefresh (11ms)
2024-4-3 15:35:04-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:35:12-debug: refresh db internal success
2024-4-3 15:35:12-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:35:12-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:757: '=' : dimension mismatchERROR: 0:757: '=' : cannot convert from 'highp float' to 'highp 3-component vector of float' 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float time = mod(cc_time.x, 5.0);757   vec3 r = rand(In.position.xy);758   In.position.xyz = dir.xyz * time;759 760   vec4 pos = matWorld * In.position;761 762   v_position = pos.xyz;763   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);764   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);765   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;766 767   v_uv = a_texCoord;768   #if HAS_SECOND_UV769     v_uv1 = a_texCoord1;770   #endif771   v_color = a_color;772 773   CC_TRANSFER_FOG(pos);774   v_shadowPos = cc_matLightViewProj * pos;775   gl_PointSize = 1.0;776   return cc_matProj * (cc_matView * matWorld) * In.position;777 }778 779 780 void main() { gl_Position = vert(); }781 
2024-4-3 15:35:12-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:35:12-debug: refresh db assets success
2024-4-3 15:35:12-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:35:12-debug: asset-db:refresh-all-database (422ms)
2024-4-3 15:35:12-debug: asset-db:worker-effect-data-processing (7ms)
2024-4-3 15:35:12-debug: asset-db-hook-engine-extends-afterRefresh (7ms)
2024-4-3 15:35:12-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:35:57-debug: refresh db internal success
2024-4-3 15:35:57-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:35:57-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:757: '=' : dimension mismatchERROR: 0:757: '=' : cannot convert from 'highp float' to 'highp 3-component vector of float' 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float time = mod(cc_time.x, 5.0);757   vec3 r = rand(In.position.xy);758   In.position.xyz = dir * time * r;759 760   vec4 pos = matWorld * In.position;761 762   v_position = pos.xyz;763   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);764   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);765   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;766 767   v_uv = a_texCoord;768   #if HAS_SECOND_UV769     v_uv1 = a_texCoord1;770   #endif771   v_color = a_color;772 773   CC_TRANSFER_FOG(pos);774   v_shadowPos = cc_matLightViewProj * pos;775   gl_PointSize = 1.0;776   return cc_matProj * (cc_matView * matWorld) * In.position;777 }778 779 780 void main() { gl_Position = vert(); }781 
2024-4-3 15:35:57-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:35:57-debug: refresh db assets success
2024-4-3 15:35:57-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:35:57-debug: asset-db:refresh-all-database (166ms)
2024-4-3 15:35:57-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 15:35:57-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 15:35:57-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:36:21-debug: refresh db internal success
2024-4-3 15:36:21-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:36:21-debug: refresh db assets success
2024-4-3 15:36:21-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:36:21-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:36:21-debug: asset-db:refresh-all-database (907ms)
2024-4-3 15:36:21-debug: asset-db:worker-effect-data-processing (10ms)
2024-4-3 15:36:21-debug: asset-db-hook-engine-extends-afterRefresh (13ms)
2024-4-3 15:36:21-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:36:23-debug: recompile effect.bin success
2024-4-3 15:36:23-debug: Query all assets info in project
2024-4-3 15:36:23-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:36:23-debug:   Number of all scenes: 1
2024-4-3 15:36:23-debug:   Number of all scripts: 3
2024-4-3 15:36:23-debug:   Number of other assets: 328
2024-4-3 15:36:23-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:36:23-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:36:23-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:36:23-debug: // ---- build task 查询 Asset Bundle ---- (35ms)
2024-4-3 15:36:23-debug: [Build Memory track]: 查询 Asset Bundle start:208.23MB, end 210.10MB, increase: 1.87MB
2024-4-3 15:36:23-debug: run build task 查询 Asset Bundle success in 35 ms√, progress: 5%
2024-4-3 15:36:23-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:36:23-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:36:23-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 15:36:23-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 15:36:23-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:36:23-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:36:23-debug: [Build Memory track]: 查询 Asset Bundle start:210.11MB, end 210.13MB, increase: 15.47KB
2024-4-3 15:36:23-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-3 15:36:23-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-3 15:36:23-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.14MB, end 210.16MB, increase: 17.28KB
2024-4-3 15:36:23-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:36:23-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:36:23-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 15:36:23-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 15:36:23-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:36:23-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:36:23-debug: [Build Memory track]: 填充脚本数据到 settings.json start:210.17MB, end 210.19MB, increase: 16.22KB
2024-4-3 15:36:23-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (32ms)
2024-4-3 15:36:23-debug: run build task 整理部分构建选项内数据到 settings.json success in 32 ms√, progress: 15%
2024-4-3 15:36:23-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.21MB, end 210.33MB, increase: 126.04KB
2024-4-3 15:37:04-debug: refresh db internal success
2024-4-3 15:37:04-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:37:04-debug: refresh db assets success
2024-4-3 15:37:04-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:37:04-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:37:04-debug: asset-db:refresh-all-database (975ms)
2024-4-3 15:37:04-debug: asset-db:worker-effect-data-processing (8ms)
2024-4-3 15:37:05-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:37:04-debug: asset-db-hook-engine-extends-afterRefresh (10ms)
2024-4-3 15:37:05-debug: Query all assets info in project
2024-4-3 15:37:05-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:37:05-debug:   Number of all scenes: 1
2024-4-3 15:37:05-debug:   Number of all scripts: 3
2024-4-3 15:37:05-debug:   Number of other assets: 328
2024-4-3 15:37:05-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:37:05-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:37:05-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:37:05-debug: // ---- build task 查询 Asset Bundle ---- (34ms)
2024-4-3 15:37:05-debug: run build task 查询 Asset Bundle success in 34 ms√, progress: 5%
2024-4-3 15:37:05-debug: [Build Memory track]: 查询 Asset Bundle start:214.79MB, end 217.04MB, increase: 2.24MB
2024-4-3 15:37:05-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:37:05-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:37:05-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 15:37:05-debug: [Build Memory track]: 查询 Asset Bundle start:217.05MB, end 217.07MB, increase: 14.86KB
2024-4-3 15:37:05-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 15:37:05-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:37:05-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:37:05-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 15:37:05-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 15:37:05-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:217.08MB, end 217.10MB, increase: 17.49KB
2024-4-3 15:37:05-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:37:05-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:37:06-debug: // ---- build task 填充脚本数据到 settings.json ---- (4ms)
2024-4-3 15:37:06-debug: run build task 填充脚本数据到 settings.json success in 4 ms√, progress: 13%
2024-4-3 15:37:06-debug: [Build Memory track]: 填充脚本数据到 settings.json start:217.11MB, end 220.44MB, increase: 3.33MB
2024-4-3 15:37:06-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:37:06-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:37:06-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (21ms)
2024-4-3 15:37:06-debug: run build task 整理部分构建选项内数据到 settings.json success in 21 ms√, progress: 15%
2024-4-3 15:37:06-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:220.46MB, end 220.58MB, increase: 125.43KB
2024-4-3 15:37:07-debug: recompile effect.bin success
2024-4-3 15:39:20-debug: refresh db internal success
2024-4-3 15:39:20-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:39:21-debug: refresh db assets success
2024-4-3 15:39:21-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:39:21-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:39:21-debug: asset-db:worker-effect-data-processing (15ms)
2024-4-3 15:39:21-debug: asset-db:refresh-all-database (871ms)
2024-4-3 15:39:21-debug: asset-db-hook-engine-extends-afterRefresh (16ms)
2024-4-3 15:39:21-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:39:22-debug: Query all assets info in project
2024-4-3 15:39:22-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:39:22-debug:   Number of all scenes: 1
2024-4-3 15:39:22-debug:   Number of all scripts: 3
2024-4-3 15:39:22-debug:   Number of other assets: 328
2024-4-3 15:39:22-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:39:22-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:39:22-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:39:22-debug: run build task 查询 Asset Bundle success in 45 ms√, progress: 5%
2024-4-3 15:39:22-debug: [Build Memory track]: 查询 Asset Bundle start:202.71MB, end 199.31MB, increase: -3471.55KB
2024-4-3 15:39:22-debug: // ---- build task 查询 Asset Bundle ---- (45ms)
2024-4-3 15:39:22-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:39:22-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:39:22-debug: // ---- build task 查询 Asset Bundle ---- (5ms)
2024-4-3 15:39:22-debug: run build task 查询 Asset Bundle success in 5 ms√, progress: 10%
2024-4-3 15:39:22-debug: [Build Memory track]: 查询 Asset Bundle start:199.33MB, end 199.35MB, increase: 16.22KB
2024-4-3 15:39:22-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:39:22-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:39:22-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (15ms)
2024-4-3 15:39:22-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:199.36MB, end 199.46MB, increase: 102.10KB
2024-4-3 15:39:22-debug: run build task 整理部分构建选项内数据到 settings.json success in 15 ms√, progress: 12%
2024-4-3 15:39:22-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:39:22-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:39:22-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 15:39:22-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 15:39:22-debug: [Build Memory track]: 填充脚本数据到 settings.json start:199.48MB, end 199.49MB, increase: 16.29KB
2024-4-3 15:39:22-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:39:22-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:39:22-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (138ms)
2024-4-3 15:39:22-debug: run build task 整理部分构建选项内数据到 settings.json success in 138 ms√, progress: 15%
2024-4-3 15:39:22-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:199.51MB, end 199.95MB, increase: 448.61KB
2024-4-3 15:39:24-debug: recompile effect.bin success
2024-4-3 15:41:20-debug: refresh db internal success
2024-4-3 15:41:20-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:41:20-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:756: 'len' : no matching overloaded function foundERROR: 0:757: '=' : dimension mismatchERROR: 0:757: '=' : cannot convert from 'highp 4-component vector of float' to 'highp float' 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float l = len(In.position);757   float time = mod(abs(cc_time - l), 5.0);758   float r = rand(In.position.xy);759   In.position.xyz = dir * time * r;760 761   vec4 pos = matWorld * In.position;762 763   v_position = pos.xyz;764   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);765   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);766   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;767 768   v_uv = a_texCoord;769   #if HAS_SECOND_UV770     v_uv1 = a_texCoord1;771   #endif772   v_color = a_color;773 774   CC_TRANSFER_FOG(pos);775   v_shadowPos = cc_matLightViewProj * pos;776   gl_PointSize = 1.0;777   return cc_matProj * (cc_matView * matWorld) * In.position;778 }779 780 781 void main() { gl_Position = vert(); }782 
2024-4-3 15:41:20-debug: refresh db assets success
2024-4-3 15:41:20-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:41:20-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:41:20-debug: asset-db:refresh-all-database (181ms)
2024-4-3 15:41:20-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 15:41:20-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 15:41:20-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:41:41-debug: refresh db internal success
2024-4-3 15:41:41-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:41:41-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:756: 'len' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float l = len(In.position);757   float time = mod(abs(cc_time.x - l), 5.0);758   float r = rand(In.position.xy);759   In.position.xyz = dir * time * r;760 761   vec4 pos = matWorld * In.position;762 763   v_position = pos.xyz;764   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);765   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);766   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;767 768   v_uv = a_texCoord;769   #if HAS_SECOND_UV770     v_uv1 = a_texCoord1;771   #endif772   v_color = a_color;773 774   CC_TRANSFER_FOG(pos);775   v_shadowPos = cc_matLightViewProj * pos;776   gl_PointSize = 1.0;777   return cc_matProj * (cc_matView * matWorld) * In.position;778 }779 780 781 void main() { gl_Position = vert(); }782 
2024-4-3 15:41:41-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:41:41-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:41:41-debug: refresh db assets success
2024-4-3 15:41:41-debug: asset-db:refresh-all-database (147ms)
2024-4-3 15:41:41-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 15:41:41-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-3 15:41:41-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:41:55-debug: refresh db internal success
2024-4-3 15:41:55-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:41:55-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:756: 'len' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float l = len(In.position);757   float time = mod(abs(cc_time.x - l), 5.0);758   float r = rand(In.position.xy);759   In.position.xyz = dir * time * r;760 761   vec4 pos = matWorld * In.position;762 763   v_position = pos.xyz;764   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);765   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);766   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;767 768   v_uv = a_texCoord;769   #if HAS_SECOND_UV770     v_uv1 = a_texCoord1;771   #endif772   v_color = a_color;773 774   CC_TRANSFER_FOG(pos);775   v_shadowPos = cc_matLightViewProj * pos;776   gl_PointSize = 1.0;777   return cc_matProj * (cc_matView * matWorld) * In.position;778 }779 780 781 void main() { gl_Position = vert(); }782 
2024-4-3 15:41:55-debug: refresh db assets success
2024-4-3 15:41:55-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:41:55-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:41:55-debug: asset-db:refresh-all-database (476ms)
2024-4-3 15:41:55-debug: asset-db:worker-effect-data-processing (7ms)
2024-4-3 15:41:55-debug: asset-db-hook-engine-extends-afterRefresh (8ms)
2024-4-3 15:41:55-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:42:28-debug: refresh db internal success
2024-4-3 15:42:28-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:42:28-debug: refresh db assets success
2024-4-3 15:42:28-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:42:28-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:42:28-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:42:28-debug: asset-db:refresh-all-database (258ms)
2024-4-3 15:42:28-debug: asset-db:worker-effect-data-processing (11ms)
2024-4-3 15:42:28-debug: asset-db-hook-engine-extends-afterRefresh (11ms)
2024-4-3 15:42:31-debug: Query all assets info in project
2024-4-3 15:42:31-debug: recompile effect.bin success
2024-4-3 15:42:31-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 15:42:31-debug:   Number of all scenes: 1
2024-4-3 15:42:31-debug:   Number of all scripts: 3
2024-4-3 15:42:31-debug:   Number of other assets: 328
2024-4-3 15:42:31-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 15:42:31-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:42:31-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 15:42:31-debug: // ---- build task 查询 Asset Bundle ---- (83ms)
2024-4-3 15:42:31-debug: run build task 查询 Asset Bundle success in 83 ms√, progress: 5%
2024-4-3 15:42:31-debug: [Build Memory track]: 查询 Asset Bundle start:209.65MB, end 211.54MB, increase: 1.89MB
2024-4-3 15:42:31-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 15:42:31-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 15:42:31-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-4-3 15:42:31-debug: [Build Memory track]: 查询 Asset Bundle start:211.55MB, end 211.57MB, increase: 15.89KB
2024-4-3 15:42:31-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 15:42:31-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:42:31-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 10%
2024-4-3 15:42:31-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-3 15:42:31-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-3 15:42:31-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 15:42:31-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 15:42:31-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.58MB, end 211.70MB, increase: 114.77KB
2024-4-3 15:42:31-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 15:42:31-debug: [Build Memory track]: 填充脚本数据到 settings.json start:211.71MB, end 211.73MB, increase: 16.41KB
2024-4-3 15:42:31-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 15:42:31-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 15:42:31-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 15:42:31-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (20ms)
2024-4-3 15:42:31-debug: run build task 整理部分构建选项内数据到 settings.json success in 20 ms√, progress: 15%
2024-4-3 15:42:31-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.74MB, end 211.87MB, increase: 129.05KB
2024-4-3 15:49:49-debug: refresh db internal success
2024-4-3 15:49:49-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:49:49-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:758: 'step' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float f = 5.0;757   float delay = length(In.position) * f;758   float time = step(0, cc_time.x - delay);759   time = mod(time, 5.0);760   float r = rand(In.position.xy);761   In.position.xyz = dir * time * r;762 763   vec4 pos = matWorld * In.position;764 765   v_position = pos.xyz;766   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);767   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);768   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;769 770   v_uv = a_texCoord;771   #if HAS_SECOND_UV772     v_uv1 = a_texCoord1;773   #endif774   v_color = a_color;775 776   CC_TRANSFER_FOG(pos);777   v_shadowPos = cc_matLightViewProj * pos;778   gl_PointSize = 1.0;779   return cc_matProj * (cc_matView * matWorld) * In.position;780 }781 782 783 void main() { gl_Position = vert(); }784 
2024-4-3 15:49:49-debug: refresh db assets success
2024-4-3 15:49:49-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:49:49-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:49:49-debug: asset-db:refresh-all-database (268ms)
2024-4-3 15:49:49-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 15:49:49-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 15:49:49-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:53:03-debug: refresh db internal success
2024-4-3 15:53:03-debug: refresh db assets success
2024-4-3 15:53:03-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:53:03-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:53:03-debug: asset-db:refresh-all-database (287ms)
2024-4-3 15:53:03-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 15:53:03-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 15:57:01-debug: refresh db internal success
2024-4-3 15:57:01-debug: refresh db assets success
2024-4-3 15:57:01-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:57:01-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:57:01-debug: asset-db:refresh-all-database (322ms)
2024-4-3 15:57:01-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 15:57:01-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 15:57:09-debug: refresh db internal success
2024-4-3 15:57:09-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:758: 'step' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float f = 5.0;757   float delay = length(In.position) * f;758   float time = step(0, cc_time.x - delay);759   time = mod(time, 5.0);760   float r = rand(In.position.xy);761   In.position.xyz = dir * time * r;762 763   vec4 pos = matWorld * In.position;764 765   v_position = pos.xyz;766   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);767   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);768   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;769 770   v_uv = a_texCoord;771   #if HAS_SECOND_UV772     v_uv1 = a_texCoord1;773   #endif774   v_color = a_color;775 776   CC_TRANSFER_FOG(pos);777   v_shadowPos = cc_matLightViewProj * pos;778   gl_PointSize = 1.0;779   return cc_matProj * (cc_matView * matWorld) * In.position;780 }781 782 783 void main() { gl_Position = vert(); }784 
2024-4-3 15:57:09-debug: refresh db assets success
2024-4-3 15:57:09-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:57:09-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:57:09-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:57:09-debug: asset-db:refresh-all-database (397ms)
2024-4-3 15:57:09-debug: asset-db:worker-effect-data-processing (8ms)
2024-4-3 15:57:09-debug: asset-db-hook-engine-extends-afterRefresh (8ms)
2024-4-3 15:57:09-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 15:58:38-debug: refresh db internal success
2024-4-3 15:58:38-debug: refresh db assets success
2024-4-3 15:58:38-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 15:58:38-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 15:58:38-debug: asset-db:refresh-all-database (325ms)
2024-4-3 15:58:38-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 15:58:38-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 16:01:02-debug: refresh db internal success
2024-4-3 16:01:02-debug: refresh db assets success
2024-4-3 16:01:02-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:01:02-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:01:02-debug: asset-db:refresh-all-database (333ms)
2024-4-3 16:01:02-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 16:01:02-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 16:02:07-debug: refresh db internal success
2024-4-3 16:02:07-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:02:07-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:758: 'step' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float f = 5.0;757   float delay = length(In.position) * f;758   float time = mod(step(0, cc_time.x - delay), 5.0);759   float r = rand(In.position.xy);760   In.position.xyz = dir * time * r;761 762   vec4 pos = matWorld * In.position;763 764   v_position = pos.xyz;765   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);766   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);767   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;768 769   v_uv = a_texCoord;770   #if HAS_SECOND_UV771     v_uv1 = a_texCoord1;772   #endif773   v_color = a_color;774 775   CC_TRANSFER_FOG(pos);776   v_shadowPos = cc_matLightViewProj * pos;777   gl_PointSize = 1.0;778   return cc_matProj * (cc_matView * matWorld) * In.position;779 }780 781 782 void main() { gl_Position = vert(); }783 
2024-4-3 16:02:07-debug: refresh db assets success
2024-4-3 16:02:07-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:02:07-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:02:07-debug: asset-db:refresh-all-database (142ms)
2024-4-3 16:02:07-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 16:02:07-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 16:02:07-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:02:15-debug: refresh db internal success
2024-4-3 16:02:15-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:02:15-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:758: 'step' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float f = 5.0;757   float delay = length(In.position) * f;758   float time = mod(step(0, cc_time.x - delay), 5.0);759   float r = rand(In.position.xy);760   In.position.xyz = dir * time * r;761 762   vec4 pos = matWorld * In.position;763 764   v_position = pos.xyz;765   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);766   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);767   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;768 769   v_uv = a_texCoord;770   #if HAS_SECOND_UV771     v_uv1 = a_texCoord1;772   #endif773   v_color = a_color;774 775   CC_TRANSFER_FOG(pos);776   v_shadowPos = cc_matLightViewProj * pos;777   gl_PointSize = 1.0;778   return cc_matProj * (cc_matView * matWorld) * In.position;779 }780 781 782 void main() { gl_Position = vert(); }783 
2024-4-3 16:02:15-debug: refresh db assets success
2024-4-3 16:02:15-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:02:15-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:02:15-debug: asset-db:refresh-all-database (348ms)
2024-4-3 16:02:15-debug: asset-db:worker-effect-data-processing (8ms)
2024-4-3 16:02:15-debug: asset-db-hook-engine-extends-afterRefresh (11ms)
2024-4-3 16:02:15-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:04:01-debug: refresh db internal success
2024-4-3 16:04:01-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:04:01-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:748: 'step' : built-in functions cannot be redefinedERROR: 0:749: '?:' : mismatching ternary operator operand types 'const int and 'const float'ERROR: 0:762: 'step' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 float step(float a, float b){749   return b < a ? 0 : 1.0;750 }751 752 vec4 vert () {753   StandardVertInput In;754   CCVertInput(In);755 756   mat4 matWorld, matWorldIT;757   CCGetWorldMatrixFull(matWorld, matWorldIT);758 759   vec3 dir = normalize(In.position.xyz);760   float f = 5.0;761   float delay = length(In.position) * f;762   float time = mod(step(0, cc_time.x - delay), 5.0);763   float r = rand(In.position.xy);764   In.position.xyz = dir * time * r;765 766   vec4 pos = matWorld * In.position;767 768   v_position = pos.xyz;769   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);770   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);771   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;772 773   v_uv = a_texCoord;774   #if HAS_SECOND_UV775     v_uv1 = a_texCoord1;776   #endif777   v_color = a_color;778 779   CC_TRANSFER_FOG(pos);780   v_shadowPos = cc_matLightViewProj * pos;781   gl_PointSize = 1.0;782   return cc_matProj * (cc_matView * matWorld) * In.position;783 }784 785 786 void main() { gl_Position = vert(); }787 
2024-4-3 16:04:01-debug: refresh db assets success
2024-4-3 16:04:01-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:04:01-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:04:01-debug: asset-db:refresh-all-database (400ms)
2024-4-3 16:04:01-debug: asset-db:worker-effect-data-processing (6ms)
2024-4-3 16:04:01-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-3 16:04:01-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:04:08-debug: refresh db internal success
2024-4-3 16:04:08-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:04:08-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:748: 'step' : built-in functions cannot be redefinedERROR: 0:749: '?:' : mismatching ternary operator operand types 'const int and 'const float'ERROR: 0:762: 'step' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 float step(float a, float b){749   return b < a ? 0 : 1.0;750 }751 752 vec4 vert () {753   StandardVertInput In;754   CCVertInput(In);755 756   mat4 matWorld, matWorldIT;757   CCGetWorldMatrixFull(matWorld, matWorldIT);758 759   vec3 dir = normalize(In.position.xyz);760   float f = 5.0;761   float delay = length(In.position) * f;762   float time = mod(step(0, cc_time.x - delay), 5.0);763   float r = rand(In.position.xy);764   In.position.xyz = dir * time * r;765 766   vec4 pos = matWorld * In.position;767 768   v_position = pos.xyz;769   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);770   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);771   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;772 773   v_uv = a_texCoord;774   #if HAS_SECOND_UV775     v_uv1 = a_texCoord1;776   #endif777   v_color = a_color;778 779   CC_TRANSFER_FOG(pos);780   v_shadowPos = cc_matLightViewProj * pos;781   gl_PointSize = 1.0;782   return cc_matProj * (cc_matView * matWorld) * In.position;783 }784 785 786 void main() { gl_Position = vert(); }787 
2024-4-3 16:04:08-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:04:08-debug: refresh db assets success
2024-4-3 16:04:08-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:04:08-debug: asset-db:refresh-all-database (385ms)
2024-4-3 16:04:08-debug: asset-db:worker-effect-data-processing (10ms)
2024-4-3 16:04:08-debug: asset-db-hook-engine-extends-afterRefresh (11ms)
2024-4-3 16:04:08-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:04:54-debug: refresh db internal success
2024-4-3 16:04:54-debug: refresh db assets success
2024-4-3 16:04:54-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:04:54-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:04:54-debug: asset-db:refresh-all-database (252ms)
2024-4-3 16:04:54-debug: asset-db:worker-effect-data-processing (6ms)
2024-4-3 16:04:54-debug: asset-db-hook-engine-extends-afterRefresh (8ms)
2024-4-3 16:05:28-debug: refresh db internal success
2024-4-3 16:05:28-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:05:28-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:748: 'step' : built-in functions cannot be redefinedERROR: 0:762: 'step' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 float step(float a, float b){749   return b < a ? 0.0 : 1.0;750 }751 752 vec4 vert () {753   StandardVertInput In;754   CCVertInput(In);755 756   mat4 matWorld, matWorldIT;757   CCGetWorldMatrixFull(matWorld, matWorldIT);758 759   vec3 dir = normalize(In.position.xyz);760   float f = 5.0;761   float delay = length(In.position) * f;762   float time = mod(step(0, cc_time.x - delay), 5.0);763   float r = rand(In.position.xy);764   In.position.xyz = dir * time * r;765 766   vec4 pos = matWorld * In.position;767 768   v_position = pos.xyz;769   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);770   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);771   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;772 773   v_uv = a_texCoord;774   #if HAS_SECOND_UV775     v_uv1 = a_texCoord1;776   #endif777   v_color = a_color;778 779   CC_TRANSFER_FOG(pos);780   v_shadowPos = cc_matLightViewProj * pos;781   gl_PointSize = 1.0;782   return cc_matProj * (cc_matView * matWorld) * In.position;783 }784 785 786 void main() { gl_Position = vert(); }787 
2024-4-3 16:05:28-debug: refresh db assets success
2024-4-3 16:05:28-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:05:28-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:05:28-debug: asset-db:refresh-all-database (415ms)
2024-4-3 16:05:28-debug: asset-db:worker-effect-data-processing (26ms)
2024-4-3 16:05:28-debug: asset-db-hook-engine-extends-afterRefresh (27ms)
2024-4-3 16:05:28-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:05:34-debug: refresh db internal success
2024-4-3 16:05:34-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:05:34-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:748: 'step' : built-in functions cannot be redefinedERROR: 0:762: 'step' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 float step(float a, float b){749   return b < a ? 0.0 : 1.0;750 }751 752 vec4 vert () {753   StandardVertInput In;754   CCVertInput(In);755 756   mat4 matWorld, matWorldIT;757   CCGetWorldMatrixFull(matWorld, matWorldIT);758 759   vec3 dir = normalize(In.position.xyz);760   float f = 5.0;761   float delay = length(In.position) * f;762   float time = mod(step(0, cc_time.x - delay), 5.0);763   float r = rand(In.position.xy);764   In.position.xyz = dir * time * r;765 766   vec4 pos = matWorld * In.position;767 768   v_position = pos.xyz;769   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);770   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);771   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;772 773   v_uv = a_texCoord;774   #if HAS_SECOND_UV775     v_uv1 = a_texCoord1;776   #endif777   v_color = a_color;778 779   CC_TRANSFER_FOG(pos);780   v_shadowPos = cc_matLightViewProj * pos;781   gl_PointSize = 1.0;782   return cc_matProj * (cc_matView * matWorld) * In.position;783 }784 785 786 void main() { gl_Position = vert(); }787 
2024-4-3 16:05:34-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:05:34-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:05:34-debug: refresh db assets success
2024-4-3 16:05:34-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:05:34-debug: asset-db:refresh-all-database (462ms)
2024-4-3 16:05:34-debug: asset-db:worker-effect-data-processing (7ms)
2024-4-3 16:05:34-debug: asset-db-hook-engine-extends-afterRefresh (7ms)
2024-4-3 16:05:56-debug: refresh db internal success
2024-4-3 16:05:56-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:05:56-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:758: 'step' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float f = 5.0;757   float delay = length(In.position) * f;758   float time = mod(step(0, cc_time.x - delay), 5.0);759   float r = rand(In.position.xy);760   In.position.xyz = dir * time * r;761 762   vec4 pos = matWorld * In.position;763 764   v_position = pos.xyz;765   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);766   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);767   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;768 769   v_uv = a_texCoord;770   #if HAS_SECOND_UV771     v_uv1 = a_texCoord1;772   #endif773   v_color = a_color;774 775   CC_TRANSFER_FOG(pos);776   v_shadowPos = cc_matLightViewProj * pos;777   gl_PointSize = 1.0;778   return cc_matProj * (cc_matView * matWorld) * In.position;779 }780 781 782 void main() { gl_Position = vert(); }783 
2024-4-3 16:05:56-debug: refresh db assets success
2024-4-3 16:05:56-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:05:56-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:05:56-debug: asset-db:refresh-all-database (158ms)
2024-4-3 16:05:56-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 16:05:56-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 16:05:56-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:06:09-debug: refresh db internal success
2024-4-3 16:06:09-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:06:09-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:758: 'step' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float f = 5.0;757   float delay = length(In.position) * f;758   float time = mod(step(0, cc_time.x - delay), 5.0);759   float r = rand(In.position.xy);760   In.position.xyz = dir * time * r;761 762   vec4 pos = matWorld * In.position;763 764   v_position = pos.xyz;765   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);766   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);767   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;768 769   v_uv = a_texCoord;770   #if HAS_SECOND_UV771     v_uv1 = a_texCoord1;772   #endif773   v_color = a_color;774 775   CC_TRANSFER_FOG(pos);776   v_shadowPos = cc_matLightViewProj * pos;777   gl_PointSize = 1.0;778   return cc_matProj * (cc_matView * matWorld) * In.position;779 }780 781 782 void main() { gl_Position = vert(); }783 
2024-4-3 16:06:09-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:06:09-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:06:09-debug: refresh db assets success
2024-4-3 16:06:09-debug: asset-db:refresh-all-database (384ms)
2024-4-3 16:06:09-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 16:06:09-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-3 16:06:09-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:06:14-debug: refresh db internal success
2024-4-3 16:06:14-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:06:14-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:758: 'step' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float f = 5.0;757   float delay = length(In.position) * f;758   float time = mod(step(0, cc_time.x - delay), 5.0);759   float r = rand(In.position.xy);760   In.position.xyz = dir * time * r;761 762   vec4 pos = matWorld * In.position;763 764   v_position = pos.xyz;765   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);766   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);767   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;768 769   v_uv = a_texCoord;770   #if HAS_SECOND_UV771     v_uv1 = a_texCoord1;772   #endif773   v_color = a_color;774 775   CC_TRANSFER_FOG(pos);776   v_shadowPos = cc_matLightViewProj * pos;777   gl_PointSize = 1.0;778   return cc_matProj * (cc_matView * matWorld) * In.position;779 }780 781 782 void main() { gl_Position = vert(); }783 
2024-4-3 16:06:14-debug: refresh db assets success
2024-4-3 16:06:14-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:06:14-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:06:14-debug: asset-db:refresh-all-database (355ms)
2024-4-3 16:06:14-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 16:06:14-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 16:06:14-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:10:27-debug: refresh db internal success
2024-4-3 16:10:27-debug: refresh db assets success
2024-4-3 16:10:27-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:10:27-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:10:27-debug: asset-db:refresh-all-database (278ms)
2024-4-3 16:10:27-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 16:10:27-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 16:11:27-debug: refresh db internal success
2024-4-3 16:11:27-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:11:27-debug: refresh db assets success
2024-4-3 16:11:27-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:11:27-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:11:27-debug: asset-db:refresh-all-database (222ms)
2024-4-3 16:11:27-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-3 16:11:27-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 16:11:27-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:11:29-debug: recompile effect.bin success
2024-4-3 16:11:38-debug: refresh db internal success
2024-4-3 16:11:39-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:11:39-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:758: 'step' : no matching overloaded function found 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float f = 5.0;757   float delay = length(In.position) * f;758   float time = mod(step(0, cc_time.x - delay), 5.0);759   float r = rand(In.position.xy);760   In.position.xyz = dir * time * r;761 762   vec4 pos = matWorld * In.position;763 764   v_position = pos.xyz;765   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);766   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);767   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;768 769   v_uv = a_texCoord;770   #if HAS_SECOND_UV771     v_uv1 = a_texCoord1;772   #endif773   v_color = a_color;774 775   CC_TRANSFER_FOG(pos);776   v_shadowPos = cc_matLightViewProj * pos;777   gl_PointSize = 1.0;778   return cc_matProj * (cc_matView * matWorld) * In.position;779 }780 781 782 void main() { gl_Position = vert(); }783 
2024-4-3 16:11:39-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:11:39-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:11:39-debug: refresh db assets success
2024-4-3 16:11:39-debug: asset-db:refresh-all-database (461ms)
2024-4-3 16:11:39-debug: asset-db:worker-effect-data-processing (7ms)
2024-4-3 16:11:39-debug: asset-db-hook-engine-extends-afterRefresh (8ms)
2024-4-3 16:11:39-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:11:55-debug: refresh db internal success
2024-4-3 16:11:55-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:11:55-debug: refresh db assets success
2024-4-3 16:11:55-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:11:55-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:11:55-debug: asset-db:refresh-all-database (430ms)
2024-4-3 16:11:55-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 16:11:55-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 16:11:55-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:11:57-debug: recompile effect.bin success
2024-4-3 16:11:58-debug: Query all assets info in project
2024-4-3 16:11:58-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 16:11:58-debug:   Number of all scenes: 1
2024-4-3 16:11:58-debug:   Number of all scripts: 3
2024-4-3 16:11:58-debug:   Number of other assets: 328
2024-4-3 16:11:58-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 16:11:58-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:11:58-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 16:11:58-debug: // ---- build task 查询 Asset Bundle ---- (30ms)
2024-4-3 16:11:58-debug: run build task 查询 Asset Bundle success in 30 ms√, progress: 5%
2024-4-3 16:11:58-debug: [Build Memory track]: 查询 Asset Bundle start:205.65MB, end 207.52MB, increase: 1.87MB
2024-4-3 16:11:58-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 16:11:58-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:11:58-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 16:11:58-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 16:11:58-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 16:11:58-debug: [Build Memory track]: 查询 Asset Bundle start:207.53MB, end 207.55MB, increase: 16.08KB
2024-4-3 16:11:58-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:11:58-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-3 16:11:58-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.56MB, end 207.58MB, increase: 18.81KB
2024-4-3 16:11:58-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-3 16:11:58-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 16:11:58-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 16:11:58-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 16:11:58-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 16:11:58-debug: [Build Memory track]: 填充脚本数据到 settings.json start:207.60MB, end 207.61MB, increase: 17.48KB
2024-4-3 16:11:58-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 16:11:58-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:11:58-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (26ms)
2024-4-3 16:11:58-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.63MB, end 207.75MB, increase: 125.37KB
2024-4-3 16:11:58-debug: run build task 整理部分构建选项内数据到 settings.json success in 26 ms√, progress: 15%
2024-4-3 16:14:16-debug: refresh db internal success
2024-4-3 16:14:16-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:14:17-debug: refresh db assets success
2024-4-3 16:14:17-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:14:17-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:14:17-debug: asset-db:refresh-all-database (393ms)
2024-4-3 16:14:17-debug: asset-db:worker-effect-data-processing (6ms)
2024-4-3 16:14:17-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-3 16:14:17-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:14:18-debug: recompile effect.bin success
2024-4-3 16:14:20-debug: Query all assets info in project
2024-4-3 16:14:20-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 16:14:20-debug:   Number of all scripts: 3
2024-4-3 16:14:20-debug:   Number of all scenes: 1
2024-4-3 16:14:20-debug:   Number of other assets: 328
2024-4-3 16:14:20-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 16:14:20-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:14:20-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 16:14:20-debug: run build task 查询 Asset Bundle success in 44 ms√, progress: 5%
2024-4-3 16:14:20-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 16:14:20-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:14:20-debug: // ---- build task 查询 Asset Bundle ---- (8ms)
2024-4-3 16:14:20-debug: run build task 查询 Asset Bundle success in 8 ms√, progress: 10%
2024-4-3 16:14:20-debug: [Build Memory track]: 查询 Asset Bundle start:207.67MB, end 207.69MB, increase: 13.72KB
2024-4-3 16:14:20-debug: // ---- build task 查询 Asset Bundle ---- (44ms)
2024-4-3 16:14:20-debug: [Build Memory track]: 查询 Asset Bundle start:205.79MB, end 207.66MB, increase: 1.87MB
2024-4-3 16:14:20-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 16:14:20-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:14:20-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (5ms)
2024-4-3 16:14:20-debug: run build task 整理部分构建选项内数据到 settings.json success in 5 ms√, progress: 12%
2024-4-3 16:14:20-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 16:14:20-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.70MB, end 207.72MB, increase: 17.20KB
2024-4-3 16:14:20-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 16:14:20-debug: // ---- build task 填充脚本数据到 settings.json ---- (9ms)
2024-4-3 16:14:20-debug: run build task 填充脚本数据到 settings.json success in 9 ms√, progress: 13%
2024-4-3 16:14:20-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:14:20-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 16:14:20-debug: [Build Memory track]: 填充脚本数据到 settings.json start:207.73MB, end 207.75MB, increase: 17.28KB
2024-4-3 16:14:20-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (32ms)
2024-4-3 16:14:20-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.77MB, end 207.91MB, increase: 150.47KB
2024-4-3 16:14:20-debug: run build task 整理部分构建选项内数据到 settings.json success in 32 ms√, progress: 15%
2024-4-3 16:18:35-debug: refresh db internal success
2024-4-3 16:18:35-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:18:35-debug: refresh db assets success
2024-4-3 16:18:35-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:18:35-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:18:35-debug: asset-db:refresh-all-database (380ms)
2024-4-3 16:18:35-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 16:18:35-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 16:18:35-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:18:35-debug: Query all assets info in project
2024-4-3 16:18:36-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 16:18:36-debug:   Number of all scenes: 1
2024-4-3 16:18:36-debug:   Number of all scripts: 3
2024-4-3 16:18:36-debug:   Number of other assets: 328
2024-4-3 16:18:36-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 16:18:36-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:18:36-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 16:18:36-debug: // ---- build task 查询 Asset Bundle ---- (28ms)
2024-4-3 16:18:36-debug: run build task 查询 Asset Bundle success in 28 ms√, progress: 5%
2024-4-3 16:18:36-debug: [Build Memory track]: 查询 Asset Bundle start:216.32MB, end 218.16MB, increase: 1.84MB
2024-4-3 16:18:36-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 16:18:36-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:18:36-debug: // ---- build task 查询 Asset Bundle ---- (30ms)
2024-4-3 16:18:36-debug: run build task 查询 Asset Bundle success in 30 ms√, progress: 10%
2024-4-3 16:18:36-debug: [Build Memory track]: 查询 Asset Bundle start:218.18MB, end 211.10MB, increase: -7242.11KB
2024-4-3 16:18:36-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 16:18:36-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:18:36-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 16:18:36-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 16:18:36-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.12MB, end 211.14MB, increase: 18.77KB
2024-4-3 16:18:36-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 16:18:36-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 16:18:36-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 16:18:36-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 16:18:36-debug: [Build Memory track]: 填充脚本数据到 settings.json start:211.15MB, end 211.17MB, increase: 16.95KB
2024-4-3 16:18:36-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 16:18:36-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:18:36-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (40ms)
2024-4-3 16:18:36-debug: run build task 整理部分构建选项内数据到 settings.json success in 40 ms√, progress: 15%
2024-4-3 16:18:36-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.18MB, end 216.03MB, increase: 4.85MB
2024-4-3 16:18:38-debug: recompile effect.bin success
2024-4-3 16:19:18-debug: refresh db internal success
2024-4-3 16:19:18-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:19:19-debug: Query all assets info in project
2024-4-3 16:19:19-debug: refresh db assets success
2024-4-3 16:19:19-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:19:19-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:19:19-debug: asset-db:refresh-all-database (1353ms)
2024-4-3 16:19:19-debug: asset-db:worker-effect-data-processing (29ms)
2024-4-3 16:19:19-debug: asset-db-hook-engine-extends-afterRefresh (33ms)
2024-4-3 16:19:19-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:19:19-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 16:19:19-debug:   Number of all scenes: 1
2024-4-3 16:19:19-debug:   Number of all scripts: 3
2024-4-3 16:19:19-debug:   Number of other assets: 328
2024-4-3 16:19:19-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 16:19:19-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:19:19-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 16:19:19-debug: // ---- build task 查询 Asset Bundle ---- (32ms)
2024-4-3 16:19:19-debug: run build task 查询 Asset Bundle success in 32 ms√, progress: 5%
2024-4-3 16:19:19-debug: [Build Memory track]: 查询 Asset Bundle start:211.70MB, end 210.34MB, increase: -1394.10KB
2024-4-3 16:19:19-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 16:19:19-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:19:19-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 16:19:19-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 16:19:19-debug: [Build Memory track]: 查询 Asset Bundle start:210.35MB, end 210.37MB, increase: 15.00KB
2024-4-3 16:19:19-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 16:19:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:19:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-3 16:19:19-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-3 16:19:19-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.38MB, end 210.40MB, increase: 17.62KB
2024-4-3 16:19:19-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 16:19:19-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 16:19:19-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 16:19:19-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 16:19:19-debug: [Build Memory track]: 填充脚本数据到 settings.json start:210.41MB, end 210.43MB, increase: 17.20KB
2024-4-3 16:19:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:19:19-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 16:19:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (82ms)
2024-4-3 16:19:19-debug: run build task 整理部分构建选项内数据到 settings.json success in 82 ms√, progress: 15%
2024-4-3 16:19:19-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.45MB, end 210.58MB, increase: 137.29KB
2024-4-3 16:19:21-debug: recompile effect.bin success
2024-4-3 16:25:24-debug: refresh db internal success
2024-4-3 16:25:24-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:25:25-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:759: '>' : wrong operand types - no operation '>' exists that takes a left-hand operand of type 'highp float' and a right operand of type 'const int' (or there is no acceptable conversion)ERROR: 0:759: '?:' : mismatching ternary operator operand types 'highp float and 'const int'ERROR: 0:759: 'assign' : cannot convert from 'const int' to 'highp float' 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float f = 5.0;757   float delay = length(In.position) * f;758   float time = mod(cc_time.x, f);759   time = step(0.0, time - delay) > 0 ? time - delay : 0;760   float r = rand(In.position.xy);761   In.position.xyz = dir * r * time;762 763   vec4 pos = matWorld * In.position;764 765   v_position = pos.xyz;766   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);767   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);768   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;769 770   v_uv = a_texCoord;771   #if HAS_SECOND_UV772     v_uv1 = a_texCoord1;773   #endif774   v_color = a_color;775 776   CC_TRANSFER_FOG(pos);777   v_shadowPos = cc_matLightViewProj * pos;778   gl_PointSize = 1.0;779   return cc_matProj * (cc_matView * matWorld) * In.position;780 }781 782 783 void main() { gl_Position = vert(); }784 
2024-4-3 16:25:25-debug: refresh db assets success
2024-4-3 16:25:25-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:25:25-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:25:25-debug: asset-db:worker-effect-data-processing (10ms)
2024-4-3 16:25:25-debug: asset-db:refresh-all-database (719ms)
2024-4-3 16:25:25-debug: asset-db-hook-engine-extends-afterRefresh (13ms)
2024-4-3 16:25:25-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:25:36-debug: refresh db internal success
2024-4-3 16:25:36-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:25:37-debug: refresh db assets success
2024-4-3 16:25:37-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:25:37-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:25:37-debug: asset-db:refresh-all-database (955ms)
2024-4-3 16:25:37-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:25:37-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 16:25:37-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-3 16:25:39-debug: recompile effect.bin success
2024-4-3 16:25:39-debug: Query all assets info in project
2024-4-3 16:25:40-debug:   Number of all scenes: 1
2024-4-3 16:25:40-debug:   Number of all scripts: 3
2024-4-3 16:25:40-debug:   Number of other assets: 328
2024-4-3 16:25:39-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 16:25:40-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 16:25:40-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:25:40-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 16:25:40-debug: run build task 查询 Asset Bundle success in 56 ms√, progress: 5%
2024-4-3 16:25:40-debug: // ---- build task 查询 Asset Bundle ---- (56ms)
2024-4-3 16:25:40-debug: [Build Memory track]: 查询 Asset Bundle start:212.54MB, end 214.43MB, increase: 1.89MB
2024-4-3 16:25:40-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 16:25:40-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:25:40-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 10%
2024-4-3 16:25:40-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-4-3 16:25:40-debug: [Build Memory track]: 查询 Asset Bundle start:214.44MB, end 214.46MB, increase: 15.16KB
2024-4-3 16:25:40-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:25:40-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 16:25:40-debug: run build task 整理部分构建选项内数据到 settings.json success in 23 ms√, progress: 12%
2024-4-3 16:25:40-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (23ms)
2024-4-3 16:25:40-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:214.47MB, end 214.49MB, increase: 17.93KB
2024-4-3 16:25:40-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 16:25:40-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 16:25:40-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 16:25:40-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 16:25:40-debug: [Build Memory track]: 填充脚本数据到 settings.json start:214.50MB, end 214.52MB, increase: 17.11KB
2024-4-3 16:25:40-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:25:40-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 16:25:40-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (19ms)
2024-4-3 16:25:40-debug: run build task 整理部分构建选项内数据到 settings.json success in 19 ms√, progress: 15%
2024-4-3 16:25:40-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:214.54MB, end 214.66MB, increase: 127.63KB
2024-4-3 16:26:33-debug: refresh db internal success
2024-4-3 16:26:33-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:26:33-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:759: '?:' : mismatching ternary operator operand types 'const int and 'const float' 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float f = 5.0;757   float delay = length(In.position) * f;758   float time = mod(cc_time.x, f);759   time = step(0.0, time - delay) > 0.0 ? 1 : 0.0;760   float r = rand(In.position.xy);761   In.position.xyz = dir * r * time;762 763   vec4 pos = matWorld * In.position;764 765   v_position = pos.xyz;766   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);767   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);768   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;769 770   v_uv = a_texCoord;771   #if HAS_SECOND_UV772     v_uv1 = a_texCoord1;773   #endif774   v_color = a_color;775 776   CC_TRANSFER_FOG(pos);777   v_shadowPos = cc_matLightViewProj * pos;778   gl_PointSize = 1.0;779   return cc_matProj * (cc_matView * matWorld) * In.position;780 }781 782 783 void main() { gl_Position = vert(); }784 
2024-4-3 16:26:33-debug: refresh db assets success
2024-4-3 16:26:33-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:26:33-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:26:33-debug: asset-db:refresh-all-database (235ms)
2024-4-3 16:26:33-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 16:26:33-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 16:26:33-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:26:39-debug: refresh db internal success
2024-4-3 16:26:39-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:26:40-debug: refresh db assets success
2024-4-3 16:26:40-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:26:40-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:26:40-debug: asset-db:refresh-all-database (915ms)
2024-4-3 16:26:40-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 16:26:40-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 16:26:40-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:26:42-debug: recompile effect.bin success
2024-4-3 16:26:42-debug: Query all assets info in project
2024-4-3 16:26:42-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 16:26:42-debug:   Number of all scripts: 3
2024-4-3 16:26:42-debug:   Number of all scenes: 1
2024-4-3 16:26:42-debug:   Number of other assets: 328
2024-4-3 16:26:42-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 16:26:42-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:26:42-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 16:26:42-debug: // ---- build task 查询 Asset Bundle ---- (47ms)
2024-4-3 16:26:42-debug: run build task 查询 Asset Bundle success in 47 ms√, progress: 5%
2024-4-3 16:26:42-debug: [Build Memory track]: 查询 Asset Bundle start:209.24MB, end 211.10MB, increase: 1.86MB
2024-4-3 16:26:42-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:26:42-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 16:26:42-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 16:26:42-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 16:26:42-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 16:26:42-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:26:42-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-3 16:26:42-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.15MB, end 211.17MB, increase: 17.85KB
2024-4-3 16:26:42-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 16:26:42-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-3 16:26:42-debug: [Build Memory track]: 查询 Asset Bundle start:211.12MB, end 211.13MB, increase: 15.95KB
2024-4-3 16:26:42-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 16:26:42-debug: // ---- build task 填充脚本数据到 settings.json ---- (7ms)
2024-4-3 16:26:42-debug: [Build Memory track]: 填充脚本数据到 settings.json start:211.18MB, end 211.20MB, increase: 17.95KB
2024-4-3 16:26:42-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 16:26:42-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:26:42-debug: run build task 填充脚本数据到 settings.json success in 7 ms√, progress: 13%
2024-4-3 16:26:42-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (31ms)
2024-4-3 16:26:42-debug: run build task 整理部分构建选项内数据到 settings.json success in 31 ms√, progress: 15%
2024-4-3 16:26:42-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.21MB, end 211.34MB, increase: 127.55KB
2024-4-3 16:27:22-debug: Query all assets info in project
2024-4-3 16:27:22-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 16:27:22-debug:   Number of all scenes: 1
2024-4-3 16:27:22-debug:   Number of all scripts: 3
2024-4-3 16:27:22-debug:   Number of other assets: 328
2024-4-3 16:27:22-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 16:27:22-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:27:22-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 16:27:22-debug: // ---- build task 查询 Asset Bundle ---- (20ms)
2024-4-3 16:27:22-debug: run build task 查询 Asset Bundle success in 20 ms√, progress: 5%
2024-4-3 16:27:22-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:27:22-debug: [Build Memory track]: 查询 Asset Bundle start:207.73MB, end 208.14MB, increase: 425.89KB
2024-4-3 16:27:22-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 16:27:22-debug: // ---- build task 查询 Asset Bundle ---- (1ms)
2024-4-3 16:27:22-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 16:27:22-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:27:22-debug: [Build Memory track]: 查询 Asset Bundle start:208.16MB, end 208.17MB, increase: 14.98KB
2024-4-3 16:27:22-debug: run build task 查询 Asset Bundle success in 1 ms√, progress: 10%
2024-4-3 16:27:22-debug: run build task 整理部分构建选项内数据到 settings.json success in √, progress: 12%
2024-4-3 16:27:22-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:208.19MB, end 208.20MB, increase: 12.98KB
2024-4-3 16:27:22-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 16:27:22-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 16:27:22-debug: // ---- build task 填充脚本数据到 settings.json ---- (1ms)
2024-4-3 16:27:22-debug: [Build Memory track]: 填充脚本数据到 settings.json start:208.22MB, end 208.23MB, increase: 16.84KB
2024-4-3 16:27:22-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:27:22-debug: run build task 填充脚本数据到 settings.json success in 1 ms√, progress: 13%
2024-4-3 16:27:22-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 16:27:22-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (16ms)
2024-4-3 16:27:22-debug: run build task 整理部分构建选项内数据到 settings.json success in 16 ms√, progress: 15%
2024-4-3 16:27:22-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:208.25MB, end 207.66MB, increase: -607.98KB
2024-4-3 16:28:31-debug: refresh db internal success
2024-4-3 16:28:31-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:28:32-debug: refresh db assets success
2024-4-3 16:28:32-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:28:32-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:28:32-debug: asset-db:refresh-all-database (1104ms)
2024-4-3 16:28:32-debug: asset-db:worker-effect-data-processing (7ms)
2024-4-3 16:28:32-debug: asset-db-hook-engine-extends-afterRefresh (8ms)
2024-4-3 16:28:32-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:28:32-debug: Query all assets info in project
2024-4-3 16:28:33-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 16:28:33-debug:   Number of all scripts: 3
2024-4-3 16:28:33-debug:   Number of other assets: 328
2024-4-3 16:28:33-debug:   Number of all scenes: 1
2024-4-3 16:28:33-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 16:28:33-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:28:33-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 16:28:33-debug: // ---- build task 查询 Asset Bundle ---- (89ms)
2024-4-3 16:28:33-debug: run build task 查询 Asset Bundle success in 89 ms√, progress: 5%
2024-4-3 16:28:33-debug: [Build Memory track]: 查询 Asset Bundle start:204.96MB, end 200.84MB, increase: -4221.66KB
2024-4-3 16:28:33-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 16:28:33-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:28:33-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 16:28:33-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 16:28:33-debug: [Build Memory track]: 查询 Asset Bundle start:200.85MB, end 201.14MB, increase: 294.60KB
2024-4-3 16:28:33-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:28:33-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 16:28:33-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-3 16:28:33-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-3 16:28:33-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:201.15MB, end 201.17MB, increase: 18.64KB
2024-4-3 16:28:33-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 16:28:33-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 16:28:33-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 16:28:33-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 16:28:33-debug: [Build Memory track]: 填充脚本数据到 settings.json start:201.19MB, end 201.21MB, increase: 24.77KB
2024-4-3 16:28:33-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:28:33-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 16:28:33-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (33ms)
2024-4-3 16:28:33-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:201.23MB, end 204.31MB, increase: 3.08MB
2024-4-3 16:28:33-debug: run build task 整理部分构建选项内数据到 settings.json success in 33 ms√, progress: 15%
2024-4-3 16:28:34-debug: recompile effect.bin success
2024-4-3 16:30:09-debug: refresh db internal success
2024-4-3 16:30:09-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:30:10-debug: refresh db assets success
2024-4-3 16:30:10-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:30:10-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:30:10-debug: asset-db:refresh-all-database (441ms)
2024-4-3 16:30:10-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 16:30:10-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 16:30:10-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 16:30:10-debug: Query all assets info in project
2024-4-3 16:30:10-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 16:30:10-debug:   Number of all scenes: 1
2024-4-3 16:30:10-debug:   Number of all scripts: 3
2024-4-3 16:30:10-debug:   Number of other assets: 328
2024-4-3 16:30:10-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 16:30:10-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:30:11-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 16:30:11-debug: // ---- build task 查询 Asset Bundle ---- (54ms)
2024-4-3 16:30:11-debug: run build task 查询 Asset Bundle success in 54 ms√, progress: 5%
2024-4-3 16:30:11-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 16:30:11-debug: [Build Memory track]: 查询 Asset Bundle start:203.27MB, end 199.91MB, increase: -3444.01KB
2024-4-3 16:30:11-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 16:30:11-debug: // ---- build task 查询 Asset Bundle ---- (7ms)
2024-4-3 16:30:11-debug: run build task 查询 Asset Bundle success in 7 ms√, progress: 10%
2024-4-3 16:30:11-debug: [Build Memory track]: 查询 Asset Bundle start:199.92MB, end 199.98MB, increase: 59.91KB
2024-4-3 16:30:11-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 16:30:11-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:30:11-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 16:30:11-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:200.00MB, end 200.01MB, increase: 17.57KB
2024-4-3 16:30:11-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 16:30:11-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 16:30:11-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 16:30:11-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 16:30:11-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 16:30:11-debug: [Build Memory track]: 填充脚本数据到 settings.json start:200.03MB, end 200.05MB, increase: 16.82KB
2024-4-3 16:30:11-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 16:30:11-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 16:30:11-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (18ms)
2024-4-3 16:30:11-debug: run build task 整理部分构建选项内数据到 settings.json success in 18 ms√, progress: 15%
2024-4-3 16:30:11-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:200.06MB, end 200.23MB, increase: 168.39KB
2024-4-3 16:30:12-debug: refresh db internal success
2024-4-3 16:30:12-debug: refresh db assets success
2024-4-3 16:30:12-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:30:12-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:30:12-debug: asset-db:refresh-all-database (630ms)
2024-4-3 16:30:12-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 16:30:12-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 16:30:13-debug: recompile effect.bin success
2024-4-3 16:31:00-debug: refresh db internal success
2024-4-3 16:31:00-debug: refresh db assets success
2024-4-3 16:31:00-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 16:31:00-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 16:31:00-debug: asset-db:refresh-all-database (138ms)
2024-4-3 16:31:00-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-3 16:31:00-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-4-3 17:10:06-debug: refresh db internal success
2024-4-3 17:10:06-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:10:06-debug: refresh db assets success
2024-4-3 17:10:06-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:10:06-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:10:06-debug: asset-db:refresh-all-database (480ms)
2024-4-3 17:10:06-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 17:10:06-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 17:10:06-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:10:08-debug: recompile effect.bin success
2024-4-3 17:10:08-debug: Query all assets info in project
2024-4-3 17:10:08-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:10:08-debug:   Number of all scenes: 1
2024-4-3 17:10:08-debug:   Number of all scripts: 3
2024-4-3 17:10:08-debug:   Number of other assets: 328
2024-4-3 17:10:08-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:10:08-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:10:08-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:10:08-debug: // ---- build task 查询 Asset Bundle ---- (32ms)
2024-4-3 17:10:08-debug: [Build Memory track]: 查询 Asset Bundle start:207.32MB, end 209.18MB, increase: 1.86MB
2024-4-3 17:10:08-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:10:08-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:10:08-debug: run build task 查询 Asset Bundle success in 32 ms√, progress: 5%
2024-4-3 17:10:08-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 17:10:08-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 17:10:08-debug: [Build Memory track]: 查询 Asset Bundle start:209.20MB, end 209.21MB, increase: 15.13KB
2024-4-3 17:10:08-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:10:08-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:10:08-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (6ms)
2024-4-3 17:10:08-debug: run build task 整理部分构建选项内数据到 settings.json success in 6 ms√, progress: 12%
2024-4-3 17:10:08-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:209.23MB, end 209.26MB, increase: 34.70KB
2024-4-3 17:10:08-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:10:08-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:10:08-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 17:10:08-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 17:10:08-debug: [Build Memory track]: 填充脚本数据到 settings.json start:209.27MB, end 209.29MB, increase: 17.70KB
2024-4-3 17:10:08-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:10:08-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:10:08-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (15ms)
2024-4-3 17:10:08-debug: run build task 整理部分构建选项内数据到 settings.json success in 15 ms√, progress: 15%
2024-4-3 17:10:08-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:209.31MB, end 209.44MB, increase: 132.86KB
2024-4-3 17:11:04-debug: refresh db internal success
2024-4-3 17:11:04-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:11:04-debug: refresh db assets success
2024-4-3 17:11:04-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:11:04-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:11:04-debug: asset-db:refresh-all-database (614ms)
2024-4-3 17:11:04-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 17:11:04-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:11:04-debug: asset-db-hook-engine-extends-afterRefresh (8ms)
2024-4-3 17:11:05-debug: Query all assets info in project
2024-4-3 17:11:05-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:11:05-debug:   Number of all scenes: 1
2024-4-3 17:11:05-debug:   Number of all scripts: 3
2024-4-3 17:11:05-debug:   Number of other assets: 328
2024-4-3 17:11:06-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:11:06-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:11:06-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:11:06-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:11:06-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:11:06-debug: run build task 查询 Asset Bundle success in 69 ms√, progress: 5%
2024-4-3 17:11:06-debug: // ---- build task 查询 Asset Bundle ---- (69ms)
2024-4-3 17:11:06-debug: [Build Memory track]: 查询 Asset Bundle start:215.47MB, end 217.37MB, increase: 1.91MB
2024-4-3 17:11:06-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-4-3 17:11:06-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 10%
2024-4-3 17:11:06-debug: [Build Memory track]: 查询 Asset Bundle start:217.39MB, end 217.40MB, increase: 14.55KB
2024-4-3 17:11:06-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:11:06-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:11:06-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (10ms)
2024-4-3 17:11:06-debug: run build task 整理部分构建选项内数据到 settings.json success in 10 ms√, progress: 12%
2024-4-3 17:11:06-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:217.42MB, end 217.59MB, increase: 179.44KB
2024-4-3 17:11:06-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:11:06-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:11:06-debug: // ---- build task 填充脚本数据到 settings.json ---- (9ms)
2024-4-3 17:11:06-debug: run build task 填充脚本数据到 settings.json success in 9 ms√, progress: 13%
2024-4-3 17:11:06-debug: [Build Memory track]: 填充脚本数据到 settings.json start:217.61MB, end 217.63MB, increase: 17.52KB
2024-4-3 17:11:06-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:11:06-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:11:06-debug: run build task 整理部分构建选项内数据到 settings.json success in 19 ms√, progress: 15%
2024-4-3 17:11:06-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:217.64MB, end 218.00MB, increase: 365.37KB
2024-4-3 17:11:06-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (19ms)
2024-4-3 17:11:07-debug: recompile effect.bin success
2024-4-3 17:12:58-debug: refresh db internal success
2024-4-3 17:12:58-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:12:59-debug: refresh db assets success
2024-4-3 17:12:59-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:12:59-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:12:59-debug: asset-db:refresh-all-database (634ms)
2024-4-3 17:12:59-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 17:12:59-debug: asset-db-hook-engine-extends-afterRefresh (7ms)
2024-4-3 17:12:59-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:12:59-debug: Query all assets info in project
2024-4-3 17:13:00-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:13:00-debug:   Number of all scenes: 1
2024-4-3 17:13:00-debug:   Number of other assets: 328
2024-4-3 17:13:00-debug:   Number of all scripts: 3
2024-4-3 17:13:00-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:13:00-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:13:00-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:13:00-debug: // ---- build task 查询 Asset Bundle ---- (68ms)
2024-4-3 17:13:00-debug: [Build Memory track]: 查询 Asset Bundle start:223.10MB, end 220.70MB, increase: -2465.67KB
2024-4-3 17:13:00-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:13:00-debug: run build task 查询 Asset Bundle success in 68 ms√, progress: 5%
2024-4-3 17:13:00-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:13:00-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 17:13:00-debug: [Build Memory track]: 查询 Asset Bundle start:220.71MB, end 220.73MB, increase: 15.16KB
2024-4-3 17:13:00-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:13:00-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:13:00-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 17:13:00-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-3 17:13:00-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:13:00-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:13:00-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:220.74MB, end 220.76MB, increase: 17.46KB
2024-4-3 17:13:00-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-3 17:13:00-debug: // ---- build task 填充脚本数据到 settings.json ---- (12ms)
2024-4-3 17:13:00-debug: run build task 填充脚本数据到 settings.json success in 12 ms√, progress: 13%
2024-4-3 17:13:00-debug: [Build Memory track]: 填充脚本数据到 settings.json start:220.77MB, end 224.00MB, increase: 3.23MB
2024-4-3 17:13:00-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:13:00-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:13:00-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (19ms)
2024-4-3 17:13:00-debug: run build task 整理部分构建选项内数据到 settings.json success in 19 ms√, progress: 15%
2024-4-3 17:13:00-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:224.01MB, end 224.15MB, increase: 135.83KB
2024-4-3 17:13:02-debug: recompile effect.bin success
2024-4-3 17:16:11-debug: refresh db internal success
2024-4-3 17:16:11-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:16:11-debug: refresh db assets success
2024-4-3 17:16:11-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:16:11-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:16:11-debug: asset-db:refresh-all-database (370ms)
2024-4-3 17:16:11-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 17:16:11-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 17:16:11-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:16:13-debug: Query all assets info in project
2024-4-3 17:16:13-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:16:13-debug:   Number of all scenes: 1
2024-4-3 17:16:13-debug:   Number of all scripts: 3
2024-4-3 17:16:13-debug:   Number of other assets: 328
2024-4-3 17:16:13-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:16:13-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:16:13-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:16:13-debug: // ---- build task 查询 Asset Bundle ---- (70ms)
2024-4-3 17:16:13-debug: run build task 查询 Asset Bundle success in 70 ms√, progress: 5%
2024-4-3 17:16:13-debug: [Build Memory track]: 查询 Asset Bundle start:205.14MB, end 210.08MB, increase: 4.95MB
2024-4-3 17:16:13-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:16:13-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:16:13-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 17:16:13-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 17:16:13-debug: [Build Memory track]: 查询 Asset Bundle start:210.10MB, end 210.55MB, increase: 464.74KB
2024-4-3 17:16:13-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:16:13-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:16:13-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 17:16:13-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.57MB, end 210.58MB, increase: 17.14KB
2024-4-3 17:16:13-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:16:13-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 17:16:13-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:16:13-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 17:16:13-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 17:16:13-debug: [Build Memory track]: 填充脚本数据到 settings.json start:210.60MB, end 210.62MB, increase: 17.14KB
2024-4-3 17:16:13-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:16:13-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:16:13-debug: recompile effect.bin success
2024-4-3 17:16:13-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (55ms)
2024-4-3 17:16:13-debug: run build task 整理部分构建选项内数据到 settings.json success in 55 ms√, progress: 15%
2024-4-3 17:16:13-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.63MB, end 212.02MB, increase: 1.39MB
2024-4-3 17:21:26-debug: refresh db internal success
2024-4-3 17:21:26-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:21:26-debug: refresh db assets success
2024-4-3 17:21:26-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:21:26-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:21:26-debug: asset-db:refresh-all-database (784ms)
2024-4-3 17:21:26-debug: asset-db:worker-effect-data-processing (7ms)
2024-4-3 17:21:26-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:21:26-debug: asset-db-hook-engine-extends-afterRefresh (9ms)
2024-4-3 17:21:28-debug: Query all assets info in project
2024-4-3 17:21:28-debug: recompile effect.bin success
2024-4-3 17:21:28-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:21:28-debug:   Number of all scenes: 1
2024-4-3 17:21:28-debug:   Number of all scripts: 3
2024-4-3 17:21:28-debug:   Number of other assets: 328
2024-4-3 17:21:29-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:21:29-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:21:29-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:21:29-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:21:29-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:21:29-debug: [Build Memory track]: 查询 Asset Bundle start:209.16MB, end 211.12MB, increase: 1.96MB
2024-4-3 17:21:29-debug: // ---- build task 查询 Asset Bundle ---- (55ms)
2024-4-3 17:21:29-debug: run build task 查询 Asset Bundle success in 55 ms√, progress: 5%
2024-4-3 17:21:29-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 17:21:29-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 17:21:29-debug: [Build Memory track]: 查询 Asset Bundle start:211.14MB, end 211.15MB, increase: 14.51KB
2024-4-3 17:21:29-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:21:29-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:21:29-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (6ms)
2024-4-3 17:21:29-debug: run build task 整理部分构建选项内数据到 settings.json success in 6 ms√, progress: 12%
2024-4-3 17:21:29-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:21:29-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.17MB, end 211.18MB, increase: 17.51KB
2024-4-3 17:21:29-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:21:29-debug: run build task 填充脚本数据到 settings.json success in 6 ms√, progress: 13%
2024-4-3 17:21:29-debug: // ---- build task 填充脚本数据到 settings.json ---- (6ms)
2024-4-3 17:21:29-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:21:29-debug: [Build Memory track]: 填充脚本数据到 settings.json start:211.20MB, end 211.22MB, increase: 17.39KB
2024-4-3 17:21:29-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:21:29-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (25ms)
2024-4-3 17:21:29-debug: run build task 整理部分构建选项内数据到 settings.json success in 25 ms√, progress: 15%
2024-4-3 17:21:29-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.23MB, end 211.36MB, increase: 127.19KB
2024-4-3 17:22:37-debug: refresh db internal success
2024-4-3 17:22:37-debug: refresh db assets success
2024-4-3 17:22:37-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:22:37-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:22:37-debug: asset-db:refresh-all-database (421ms)
2024-4-3 17:22:37-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 17:22:37-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 17:28:51-debug: refresh db internal success
2024-4-3 17:28:51-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:28:51-debug: refresh db assets success
2024-4-3 17:28:51-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:28:51-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:28:51-debug: asset-db:refresh-all-database (132ms)
2024-4-3 17:28:51-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-3 17:28:51-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 17:28:53-debug: Query all assets info in project
2024-4-3 17:28:53-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:28:54-debug:   Number of all scenes: 1
2024-4-3 17:28:54-debug:   Number of all scripts: 3
2024-4-3 17:28:54-debug:   Number of other assets: 328
2024-4-3 17:28:54-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:28:54-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:28:54-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:28:54-debug: // ---- build task 查询 Asset Bundle ---- (45ms)
2024-4-3 17:28:54-debug: run build task 查询 Asset Bundle success in 45 ms√, progress: 5%
2024-4-3 17:28:54-debug: [Build Memory track]: 查询 Asset Bundle start:209.90MB, end 210.09MB, increase: 195.06KB
2024-4-3 17:28:54-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:28:54-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:28:54-debug: // ---- build task 查询 Asset Bundle ---- (6ms)
2024-4-3 17:28:54-debug: [Build Memory track]: 查询 Asset Bundle start:210.11MB, end 210.12MB, increase: 15.91KB
2024-4-3 17:28:54-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:28:54-debug: run build task 查询 Asset Bundle success in 6 ms√, progress: 10%
2024-4-3 17:28:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:28:54-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 17:28:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 17:28:54-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.14MB, end 210.15MB, increase: 17.77KB
2024-4-3 17:28:54-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:28:54-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:28:54-debug: // ---- build task 填充脚本数据到 settings.json ---- (6ms)
2024-4-3 17:28:54-debug: run build task 填充脚本数据到 settings.json success in 6 ms√, progress: 13%
2024-4-3 17:28:54-debug: [Build Memory track]: 填充脚本数据到 settings.json start:210.17MB, end 210.18MB, increase: 15.88KB
2024-4-3 17:28:54-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:28:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:28:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (27ms)
2024-4-3 17:28:54-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.20MB, end 210.33MB, increase: 136.42KB
2024-4-3 17:28:54-debug: run build task 整理部分构建选项内数据到 settings.json success in 27 ms√, progress: 15%
2024-4-3 17:36:47-debug: refresh db internal success
2024-4-3 17:36:47-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:36:47-debug: refresh db assets success
2024-4-3 17:36:47-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:36:47-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:36:47-debug: asset-db:refresh-all-database (529ms)
2024-4-3 17:36:47-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 17:36:47-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 17:36:47-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:36:48-debug: Query all assets info in project
2024-4-3 17:36:48-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:36:48-debug:   Number of all scenes: 1
2024-4-3 17:36:48-debug:   Number of all scripts: 3
2024-4-3 17:36:48-debug:   Number of other assets: 328
2024-4-3 17:36:48-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:36:48-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:36:48-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:36:48-debug: run build task 查询 Asset Bundle success in 84 ms√, progress: 5%
2024-4-3 17:36:48-debug: [Build Memory track]: 查询 Asset Bundle start:220.49MB, end 218.45MB, increase: -2093.59KB
2024-4-3 17:36:48-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:36:48-debug: // ---- build task 查询 Asset Bundle ---- (84ms)
2024-4-3 17:36:48-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:36:48-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-4-3 17:36:48-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 10%
2024-4-3 17:36:48-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:36:48-debug: [Build Memory track]: 查询 Asset Bundle start:218.46MB, end 220.33MB, increase: 1.87MB
2024-4-3 17:36:48-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:36:48-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-3 17:36:48-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:220.35MB, end 220.37MB, increase: 17.00KB
2024-4-3 17:36:48-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-3 17:36:48-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:36:48-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:36:48-debug: run build task 填充脚本数据到 settings.json success in 4 ms√, progress: 13%
2024-4-3 17:36:48-debug: // ---- build task 填充脚本数据到 settings.json ---- (4ms)
2024-4-3 17:36:48-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:36:48-debug: [Build Memory track]: 填充脚本数据到 settings.json start:220.38MB, end 220.40MB, increase: 18.41KB
2024-4-3 17:36:48-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:36:48-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (50ms)
2024-4-3 17:36:48-debug: run build task 整理部分构建选项内数据到 settings.json success in 50 ms√, progress: 15%
2024-4-3 17:36:48-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:220.42MB, end 223.74MB, increase: 3.32MB
2024-4-3 17:36:50-debug: recompile effect.bin success
2024-4-3 17:36:51-debug: refresh db internal success
2024-4-3 17:36:51-debug: refresh db assets success
2024-4-3 17:36:51-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:36:51-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:36:51-debug: asset-db:refresh-all-database (388ms)
2024-4-3 17:36:51-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 17:36:51-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 17:37:07-debug: refresh db internal success
2024-4-3 17:37:07-debug: refresh db assets success
2024-4-3 17:37:07-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:37:07-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:37:07-debug: asset-db:refresh-all-database (162ms)
2024-4-3 17:37:07-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 17:37:07-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 17:37:24-debug: refresh db internal success
2024-4-3 17:37:24-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:37:24-debug: refresh db assets success
2024-4-3 17:37:24-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:37:24-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:37:24-debug: asset-db:refresh-all-database (394ms)
2024-4-3 17:37:24-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 17:37:24-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-3 17:37:26-debug: Query all assets info in project
2024-4-3 17:37:26-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:37:26-debug:   Number of all scenes: 1
2024-4-3 17:37:26-debug:   Number of all scripts: 3
2024-4-3 17:37:26-debug:   Number of other assets: 328
2024-4-3 17:37:26-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:37:26-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:37:26-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:37:26-debug: run build task 查询 Asset Bundle success in 46 ms√, progress: 5%
2024-4-3 17:37:26-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:37:26-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:37:26-debug: // ---- build task 查询 Asset Bundle ---- (46ms)
2024-4-3 17:37:26-debug: [Build Memory track]: 查询 Asset Bundle start:208.58MB, end 208.73MB, increase: 153.30KB
2024-4-3 17:37:26-debug: // ---- build task 查询 Asset Bundle ---- (8ms)
2024-4-3 17:37:26-debug: run build task 查询 Asset Bundle success in 8 ms√, progress: 10%
2024-4-3 17:37:26-debug: [Build Memory track]: 查询 Asset Bundle start:206.88MB, end 206.91MB, increase: 27.09KB
2024-4-3 17:37:27-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:37:27-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:37:27-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 17:37:27-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 17:37:27-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:206.92MB, end 206.94MB, increase: 18.30KB
2024-4-3 17:37:27-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:37:27-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:37:27-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 17:37:27-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 17:37:27-debug: [Build Memory track]: 填充脚本数据到 settings.json start:206.96MB, end 206.97MB, increase: 16.25KB
2024-4-3 17:37:27-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:37:27-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:37:27-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (16ms)
2024-4-3 17:37:27-debug: run build task 整理部分构建选项内数据到 settings.json success in 16 ms√, progress: 15%
2024-4-3 17:37:27-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:206.99MB, end 207.11MB, increase: 128.59KB
2024-4-3 17:38:06-debug: refresh db internal success
2024-4-3 17:38:06-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:38:07-debug: refresh db assets success
2024-4-3 17:38:07-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:38:07-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:38:07-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 17:38:07-debug: asset-db:refresh-all-database (486ms)
2024-4-3 17:38:07-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-3 17:38:07-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:38:09-debug: recompile effect.bin success
2024-4-3 17:38:10-debug: Query all assets info in project
2024-4-3 17:38:10-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:38:10-debug:   Number of all scenes: 1
2024-4-3 17:38:10-debug:   Number of all scripts: 3
2024-4-3 17:38:10-debug:   Number of other assets: 328
2024-4-3 17:38:10-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:38:10-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:38:10-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:38:10-debug: // ---- build task 查询 Asset Bundle ---- (52ms)
2024-4-3 17:38:10-debug: run build task 查询 Asset Bundle success in 52 ms√, progress: 5%
2024-4-3 17:38:10-debug: [Build Memory track]: 查询 Asset Bundle start:206.91MB, end 208.78MB, increase: 1.87MB
2024-4-3 17:38:10-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:38:10-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 17:38:10-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:38:10-debug: [Build Memory track]: 查询 Asset Bundle start:208.79MB, end 208.81MB, increase: 14.52KB
2024-4-3 17:38:10-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:38:10-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 17:38:10-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:38:10-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (6ms)
2024-4-3 17:38:10-debug: run build task 整理部分构建选项内数据到 settings.json success in 6 ms√, progress: 12%
2024-4-3 17:38:10-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:38:10-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:38:10-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:208.82MB, end 208.84MB, increase: 16.63KB
2024-4-3 17:38:10-debug: // ---- build task 填充脚本数据到 settings.json ---- (4ms)
2024-4-3 17:38:10-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:38:10-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:38:10-debug: run build task 填充脚本数据到 settings.json success in 4 ms√, progress: 13%
2024-4-3 17:38:10-debug: [Build Memory track]: 填充脚本数据到 settings.json start:208.85MB, end 208.87MB, increase: 17.81KB
2024-4-3 17:38:10-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (23ms)
2024-4-3 17:38:10-debug: run build task 整理部分构建选项内数据到 settings.json success in 23 ms√, progress: 15%
2024-4-3 17:38:10-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:208.89MB, end 209.02MB, increase: 133.39KB
2024-4-3 17:39:33-debug: refresh db internal success
2024-4-3 17:39:33-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:39:33-debug: refresh db assets success
2024-4-3 17:39:33-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:39:33-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:39:33-debug: asset-db:refresh-all-database (482ms)
2024-4-3 17:39:33-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 17:39:33-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-3 17:39:36-debug: Query all assets info in project
2024-4-3 17:39:36-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:39:36-debug:   Number of all scenes: 1
2024-4-3 17:39:36-debug:   Number of other assets: 328
2024-4-3 17:39:36-debug:   Number of all scripts: 3
2024-4-3 17:39:36-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:39:36-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:39:36-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:39:36-debug: // ---- build task 查询 Asset Bundle ---- (48ms)
2024-4-3 17:39:36-debug: run build task 查询 Asset Bundle success in 48 ms√, progress: 5%
2024-4-3 17:39:36-debug: [Build Memory track]: 查询 Asset Bundle start:206.55MB, end 206.94MB, increase: 408.34KB
2024-4-3 17:39:36-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:39:36-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:39:36-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 17:39:36-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 17:39:36-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:39:36-debug: [Build Memory track]: 查询 Asset Bundle start:206.96MB, end 206.98MB, increase: 20.55KB
2024-4-3 17:39:36-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:39:36-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 17:39:36-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:206.99MB, end 207.01MB, increase: 17.27KB
2024-4-3 17:39:36-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:39:36-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:39:36-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 17:39:36-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 17:39:36-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 17:39:36-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:39:36-debug: [Build Memory track]: 填充脚本数据到 settings.json start:207.03MB, end 207.04MB, increase: 17.31KB
2024-4-3 17:39:36-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:39:36-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (61ms)
2024-4-3 17:39:36-debug: run build task 整理部分构建选项内数据到 settings.json success in 61 ms√, progress: 15%
2024-4-3 17:39:36-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.06MB, end 208.34MB, increase: 1.28MB
2024-4-3 17:44:33-debug: refresh db internal success
2024-4-3 17:44:33-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:44:33-debug: refresh db assets success
2024-4-3 17:44:33-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:44:33-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:44:33-debug: asset-db:refresh-all-database (152ms)
2024-4-3 17:44:33-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 17:44:33-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 17:44:35-debug: Query all assets info in project
2024-4-3 17:44:35-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:44:35-debug:   Number of all scenes: 1
2024-4-3 17:44:35-debug:   Number of all scripts: 3
2024-4-3 17:44:35-debug:   Number of other assets: 328
2024-4-3 17:44:35-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:44:35-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:44:35-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:44:35-debug: // ---- build task 查询 Asset Bundle ---- (48ms)
2024-4-3 17:44:35-debug: run build task 查询 Asset Bundle success in 48 ms√, progress: 5%
2024-4-3 17:44:35-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:44:35-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:44:35-debug: [Build Memory track]: 查询 Asset Bundle start:209.96MB, end 208.53MB, increase: -1460.96KB
2024-4-3 17:44:35-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 17:44:35-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 17:44:35-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:44:35-debug: [Build Memory track]: 查询 Asset Bundle start:208.55MB, end 208.56MB, increase: 14.50KB
2024-4-3 17:44:35-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:44:35-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-3 17:44:35-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-3 17:44:35-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:44:35-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:44:35-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:208.58MB, end 208.60MB, increase: 17.61KB
2024-4-3 17:44:35-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 17:44:35-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 17:44:35-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:44:35-debug: [Build Memory track]: 填充脚本数据到 settings.json start:208.61MB, end 208.63MB, increase: 17.32KB
2024-4-3 17:44:35-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:44:35-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (19ms)
2024-4-3 17:44:35-debug: run build task 整理部分构建选项内数据到 settings.json success in 19 ms√, progress: 15%
2024-4-3 17:44:35-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:208.64MB, end 208.77MB, increase: 130.74KB
2024-4-3 17:45:30-debug: refresh db internal success
2024-4-3 17:45:30-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:45:30-debug: refresh db assets success
2024-4-3 17:45:30-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:45:30-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:45:30-debug: asset-db:refresh-all-database (435ms)
2024-4-3 17:45:30-debug: asset-db:worker-effect-data-processing (6ms)
2024-4-3 17:45:30-debug: asset-db-hook-engine-extends-afterRefresh (7ms)
2024-4-3 17:45:32-debug: Query all assets info in project
2024-4-3 17:45:32-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:45:32-debug:   Number of all scenes: 1
2024-4-3 17:45:32-debug:   Number of all scripts: 3
2024-4-3 17:45:32-debug:   Number of other assets: 328
2024-4-3 17:45:32-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:45:32-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:45:32-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:45:32-debug: // ---- build task 查询 Asset Bundle ---- (40ms)
2024-4-3 17:45:32-debug: run build task 查询 Asset Bundle success in 40 ms√, progress: 5%
2024-4-3 17:45:32-debug: [Build Memory track]: 查询 Asset Bundle start:210.94MB, end 210.53MB, increase: -420.27KB
2024-4-3 17:45:32-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:45:32-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:45:32-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:45:32-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:45:32-debug: // ---- build task 查询 Asset Bundle ---- (6ms)
2024-4-3 17:45:32-debug: run build task 查询 Asset Bundle success in 6 ms√, progress: 10%
2024-4-3 17:45:32-debug: [Build Memory track]: 查询 Asset Bundle start:210.55MB, end 210.56MB, increase: 15.36KB
2024-4-3 17:45:32-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-3 17:45:32-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-3 17:45:32-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.58MB, end 210.59MB, increase: 17.98KB
2024-4-3 17:45:32-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:45:32-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:45:32-debug: // ---- build task 填充脚本数据到 settings.json ---- (6ms)
2024-4-3 17:45:32-debug: [Build Memory track]: 填充脚本数据到 settings.json start:210.61MB, end 210.63MB, increase: 16.16KB
2024-4-3 17:45:32-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:45:32-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:45:32-debug: run build task 填充脚本数据到 settings.json success in 6 ms√, progress: 13%
2024-4-3 17:45:32-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (18ms)
2024-4-3 17:45:32-debug: run build task 整理部分构建选项内数据到 settings.json success in 18 ms√, progress: 15%
2024-4-3 17:45:32-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.64MB, end 210.77MB, increase: 131.13KB
2024-4-3 17:47:17-debug: refresh db internal success
2024-4-3 17:47:17-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:47:19-debug: Query all assets info in project
2024-4-3 17:47:19-debug: refresh db assets success
2024-4-3 17:47:19-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:47:19-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:47:19-debug: asset-db:refresh-all-database (2117ms)
2024-4-3 17:47:19-debug: asset-db:worker-effect-data-processing (8ms)
2024-4-3 17:47:19-debug: asset-db-hook-engine-extends-afterRefresh (10ms)
2024-4-3 17:47:19-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:47:19-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:47:19-debug:   Number of all scenes: 1
2024-4-3 17:47:19-debug:   Number of all scripts: 3
2024-4-3 17:47:19-debug:   Number of other assets: 328
2024-4-3 17:47:19-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:47:19-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:47:19-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:47:19-debug: // ---- build task 查询 Asset Bundle ---- (76ms)
2024-4-3 17:47:19-debug: run build task 查询 Asset Bundle success in 76 ms√, progress: 5%
2024-4-3 17:47:19-debug: [Build Memory track]: 查询 Asset Bundle start:218.25MB, end 216.79MB, increase: -1501.78KB
2024-4-3 17:47:19-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:47:19-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:47:19-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 17:47:19-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 17:47:19-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:47:19-debug: [Build Memory track]: 查询 Asset Bundle start:216.80MB, end 216.82MB, increase: 15.95KB
2024-4-3 17:47:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:47:19-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:216.83MB, end 216.85MB, increase: 18.37KB
2024-4-3 17:47:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-3 17:47:19-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-3 17:47:19-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:47:19-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:47:19-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 17:47:19-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:47:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:47:19-debug: [Build Memory track]: 填充脚本数据到 settings.json start:216.87MB, end 217.09MB, increase: 233.34KB
2024-4-3 17:47:19-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 17:47:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (20ms)
2024-4-3 17:47:19-debug: run build task 整理部分构建选项内数据到 settings.json success in 20 ms√, progress: 15%
2024-4-3 17:47:19-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:217.11MB, end 217.23MB, increase: 128.26KB
2024-4-3 17:47:22-debug: recompile effect.bin success
2024-4-3 17:54:33-debug: refresh db internal success
2024-4-3 17:54:33-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:54:33-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:54:34-debug: refresh db assets success
2024-4-3 17:54:34-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:54:34-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:54:34-debug: asset-db:refresh-all-database (2104ms)
2024-4-3 17:54:34-debug: asset-db:worker-effect-data-processing (9ms)
2024-4-3 17:54:35-debug: asset-db-hook-engine-extends-afterRefresh (12ms)
2024-4-3 17:54:34-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:54:38-debug: Query all assets info in project
2024-4-3 17:54:38-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:54:38-debug:   Number of all scenes: 1
2024-4-3 17:54:38-debug:   Number of all scripts: 3
2024-4-3 17:54:38-debug:   Number of other assets: 328
2024-4-3 17:54:39-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:54:39-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:54:39-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:54:39-debug: // ---- build task 查询 Asset Bundle ---- (73ms)
2024-4-3 17:54:39-debug: run build task 查询 Asset Bundle success in 73 ms√, progress: 5%
2024-4-3 17:54:39-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:54:39-debug: [Build Memory track]: 查询 Asset Bundle start:209.93MB, end 215.07MB, increase: 5.13MB
2024-4-3 17:54:39-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:54:39-debug: // ---- build task 查询 Asset Bundle ---- (5ms)
2024-4-3 17:54:39-debug: run build task 查询 Asset Bundle success in 5 ms√, progress: 10%
2024-4-3 17:54:39-debug: [Build Memory track]: 查询 Asset Bundle start:215.08MB, end 215.10MB, increase: 14.91KB
2024-4-3 17:54:39-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:54:39-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:54:39-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (6ms)
2024-4-3 17:54:39-debug: run build task 整理部分构建选项内数据到 settings.json success in 6 ms√, progress: 12%
2024-4-3 17:54:39-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:54:39-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:215.11MB, end 215.13MB, increase: 17.48KB
2024-4-3 17:54:39-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:54:39-debug: // ---- build task 填充脚本数据到 settings.json ---- (4ms)
2024-4-3 17:54:39-debug: run build task 填充脚本数据到 settings.json success in 4 ms√, progress: 13%
2024-4-3 17:54:39-debug: [Build Memory track]: 填充脚本数据到 settings.json start:215.14MB, end 206.19MB, increase: -9170.69KB
2024-4-3 17:54:39-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:54:39-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:54:39-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (75ms)
2024-4-3 17:54:39-debug: run build task 整理部分构建选项内数据到 settings.json success in 75 ms√, progress: 15%
2024-4-3 17:54:39-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:206.20MB, end 209.44MB, increase: 3.24MB
2024-4-3 17:54:39-debug: recompile effect.bin success
2024-4-3 17:54:41-debug: Query all assets info in project
2024-4-3 17:54:41-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:54:41-debug:   Number of all scenes: 1
2024-4-3 17:54:41-debug:   Number of all scripts: 3
2024-4-3 17:54:41-debug:   Number of other assets: 328
2024-4-3 17:54:41-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:54:41-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:54:41-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:54:41-debug: // ---- build task 查询 Asset Bundle ---- (54ms)
2024-4-3 17:54:41-debug: run build task 查询 Asset Bundle success in 54 ms√, progress: 5%
2024-4-3 17:54:41-debug: [Build Memory track]: 查询 Asset Bundle start:208.70MB, end 210.54MB, increase: 1.84MB
2024-4-3 17:54:41-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:54:41-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:54:41-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 17:54:41-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 17:54:41-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:54:41-debug: [Build Memory track]: 查询 Asset Bundle start:210.56MB, end 210.57MB, increase: 14.41KB
2024-4-3 17:54:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:54:41-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.59MB, end 210.60MB, increase: 17.01KB
2024-4-3 17:54:41-debug: run build task 整理部分构建选项内数据到 settings.json success in 6 ms√, progress: 12%
2024-4-3 17:54:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (6ms)
2024-4-3 17:54:41-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:54:41-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:54:41-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 17:54:41-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 17:54:41-debug: [Build Memory track]: 填充脚本数据到 settings.json start:210.62MB, end 210.63MB, increase: 17.02KB
2024-4-3 17:54:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:54:41-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:54:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (33ms)
2024-4-3 17:54:41-debug: run build task 整理部分构建选项内数据到 settings.json success in 33 ms√, progress: 15%
2024-4-3 17:54:41-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.65MB, end 210.77MB, increase: 124.02KB
2024-4-3 17:57:52-debug: refresh db internal success
2024-4-3 17:57:52-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:57:52-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:57:52-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:57:52-debug: refresh db assets success
2024-4-3 17:57:52-debug: asset-db:refresh-all-database (220ms)
2024-4-3 17:57:52-debug: asset-db:worker-effect-data-processing (6ms)
2024-4-3 17:57:52-debug: asset-db-hook-engine-extends-afterRefresh (8ms)
2024-4-3 17:57:54-debug: Query all assets info in project
2024-4-3 17:57:54-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:57:54-debug:   Number of all scenes: 1
2024-4-3 17:57:54-debug:   Number of all scripts: 3
2024-4-3 17:57:54-debug:   Number of other assets: 328
2024-4-3 17:57:55-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:57:55-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:57:55-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:57:55-debug: // ---- build task 查询 Asset Bundle ---- (154ms)
2024-4-3 17:57:55-debug: run build task 查询 Asset Bundle success in 154 ms√, progress: 5%
2024-4-3 17:57:55-debug: [Build Memory track]: 查询 Asset Bundle start:207.95MB, end 208.32MB, increase: 380.92KB
2024-4-3 17:57:55-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:57:55-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:57:55-debug: run build task 查询 Asset Bundle success in 6 ms√, progress: 10%
2024-4-3 17:57:55-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:57:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:57:55-debug: [Build Memory track]: 查询 Asset Bundle start:208.34MB, end 208.35MB, increase: 13.53KB
2024-4-3 17:57:55-debug: // ---- build task 查询 Asset Bundle ---- (6ms)
2024-4-3 17:57:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (11ms)
2024-4-3 17:57:55-debug: run build task 整理部分构建选项内数据到 settings.json success in 11 ms√, progress: 12%
2024-4-3 17:57:55-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:208.37MB, end 208.39MB, increase: 19.06KB
2024-4-3 17:57:55-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:57:55-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:57:55-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:57:55-debug: [Build Memory track]: 填充脚本数据到 settings.json start:208.40MB, end 208.42MB, increase: 17.20KB
2024-4-3 17:57:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:57:55-debug: run build task 填充脚本数据到 settings.json success in 6 ms√, progress: 13%
2024-4-3 17:57:55-debug: // ---- build task 填充脚本数据到 settings.json ---- (6ms)
2024-4-3 17:57:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (41ms)
2024-4-3 17:57:55-debug: run build task 整理部分构建选项内数据到 settings.json success in 41 ms√, progress: 15%
2024-4-3 17:57:55-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:208.43MB, end 208.55MB, increase: 122.15KB
2024-4-3 17:58:51-debug: refresh db internal success
2024-4-3 17:58:51-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:58:51-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:58:52-debug: refresh db assets success
2024-4-3 17:58:52-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 17:58:52-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 17:58:52-debug: asset-db:refresh-all-database (1057ms)
2024-4-3 17:58:52-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 17:58:52-debug: asset-db-hook-engine-extends-afterRefresh (15ms)
2024-4-3 17:58:52-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 17:58:54-debug: Query all assets info in project
2024-4-3 17:58:54-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 17:58:54-debug:   Number of all scenes: 1
2024-4-3 17:58:54-debug:   Number of other assets: 328
2024-4-3 17:58:54-debug:   Number of all scripts: 3
2024-4-3 17:58:54-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 17:58:54-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:58:54-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 17:58:54-debug: // ---- build task 查询 Asset Bundle ---- (46ms)
2024-4-3 17:58:54-debug: run build task 查询 Asset Bundle success in 46 ms√, progress: 5%
2024-4-3 17:58:54-debug: [Build Memory track]: 查询 Asset Bundle start:199.01MB, end 201.61MB, increase: 2.60MB
2024-4-3 17:58:54-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 17:58:54-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 17:58:54-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 17:58:54-debug: [Build Memory track]: 查询 Asset Bundle start:201.63MB, end 201.64MB, increase: 14.39KB
2024-4-3 17:58:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:58:54-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 17:58:54-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 17:58:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (1ms)
2024-4-3 17:58:54-debug: run build task 整理部分构建选项内数据到 settings.json success in 1 ms√, progress: 12%
2024-4-3 17:58:54-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:201.66MB, end 201.67MB, increase: 16.72KB
2024-4-3 17:58:54-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 17:58:54-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 17:58:54-debug: [Build Memory track]: 填充脚本数据到 settings.json start:201.69MB, end 201.70MB, increase: 17.27KB
2024-4-3 17:58:54-debug: // ---- build task 填充脚本数据到 settings.json ---- (1ms)
2024-4-3 17:58:54-debug: run build task 填充脚本数据到 settings.json success in 1 ms√, progress: 13%
2024-4-3 17:58:54-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 17:58:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 17:58:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (109ms)
2024-4-3 17:58:54-debug: run build task 整理部分构建选项内数据到 settings.json success in 109 ms√, progress: 15%
2024-4-3 17:58:54-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:201.72MB, end 199.04MB, increase: -2746.32KB
2024-4-3 17:58:55-debug: recompile effect.bin success
2024-4-3 18:07:09-debug: refresh db internal success
2024-4-3 18:07:09-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:07:10-debug: refresh db assets success
2024-4-3 18:07:10-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:07:10-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:07:10-debug: asset-db:refresh-all-database (680ms)
2024-4-3 18:07:10-debug: asset-db:worker-effect-data-processing (10ms)
2024-4-3 18:07:10-debug: asset-db-hook-engine-extends-afterRefresh (12ms)
2024-4-3 18:07:10-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:07:11-debug: Query all assets info in project
2024-4-3 18:07:11-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:07:11-debug:   Number of other assets: 328
2024-4-3 18:07:11-debug:   Number of all scenes: 1
2024-4-3 18:07:11-debug:   Number of all scripts: 3
2024-4-3 18:07:11-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:07:11-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:07:11-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:07:11-debug: // ---- build task 查询 Asset Bundle ---- (72ms)
2024-4-3 18:07:11-debug: run build task 查询 Asset Bundle success in 72 ms√, progress: 5%
2024-4-3 18:07:11-debug: [Build Memory track]: 查询 Asset Bundle start:213.08MB, end 218.31MB, increase: 5.24MB
2024-4-3 18:07:11-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:07:11-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:07:11-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 18:07:11-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 18:07:11-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:07:11-debug: [Build Memory track]: 查询 Asset Bundle start:218.33MB, end 218.34MB, increase: 15.07KB
2024-4-3 18:07:11-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:07:11-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-3 18:07:11-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-3 18:07:11-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:218.36MB, end 218.38MB, increase: 17.24KB
2024-4-3 18:07:11-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:07:11-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:07:11-debug: // ---- build task 填充脚本数据到 settings.json ---- (4ms)
2024-4-3 18:07:11-debug: run build task 填充脚本数据到 settings.json success in 4 ms√, progress: 13%
2024-4-3 18:07:11-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:07:11-debug: [Build Memory track]: 填充脚本数据到 settings.json start:218.39MB, end 218.41MB, increase: 16.26KB
2024-4-3 18:07:11-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:07:11-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (83ms)
2024-4-3 18:07:11-debug: run build task 整理部分构建选项内数据到 settings.json success in 83 ms√, progress: 15%
2024-4-3 18:07:11-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:218.42MB, end 213.36MB, increase: -5186.61KB
2024-4-3 18:07:12-debug: recompile effect.bin success
2024-4-3 18:08:32-debug: refresh db internal success
2024-4-3 18:08:32-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:08:32-debug: refresh db assets success
2024-4-3 18:08:32-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:08:32-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:08:32-debug: asset-db:refresh-all-database (346ms)
2024-4-3 18:08:32-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-3 18:08:32-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 18:08:32-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:08:34-debug: recompile effect.bin success
2024-4-3 18:08:36-debug: Query all assets info in project
2024-4-3 18:08:36-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:08:36-debug:   Number of all scripts: 3
2024-4-3 18:08:36-debug:   Number of all scenes: 1
2024-4-3 18:08:36-debug:   Number of other assets: 328
2024-4-3 18:08:36-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:08:36-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:08:36-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:08:36-debug: // ---- build task 查询 Asset Bundle ---- (56ms)
2024-4-3 18:08:36-debug: run build task 查询 Asset Bundle success in 56 ms√, progress: 5%
2024-4-3 18:08:36-debug: [Build Memory track]: 查询 Asset Bundle start:199.47MB, end 201.34MB, increase: 1.87MB
2024-4-3 18:08:36-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:08:36-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:08:37-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 18:08:37-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 18:08:37-debug: [Build Memory track]: 查询 Asset Bundle start:201.35MB, end 201.37MB, increase: 15.68KB
2024-4-3 18:08:37-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:08:37-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:08:37-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (5ms)
2024-4-3 18:08:37-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:08:37-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:201.38MB, end 201.40MB, increase: 18.38KB
2024-4-3 18:08:37-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:08:37-debug: run build task 整理部分构建选项内数据到 settings.json success in 5 ms√, progress: 12%
2024-4-3 18:08:37-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 18:08:37-debug: [Build Memory track]: 填充脚本数据到 settings.json start:201.42MB, end 201.43MB, increase: 17.41KB
2024-4-3 18:08:37-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 18:08:37-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:08:37-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:08:37-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (12ms)
2024-4-3 18:08:37-debug: run build task 整理部分构建选项内数据到 settings.json success in 12 ms√, progress: 15%
2024-4-3 18:08:37-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:201.45MB, end 201.57MB, increase: 129.84KB
2024-4-3 18:22:29-debug: refresh db internal success
2024-4-3 18:22:29-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:22:30-debug: refresh db assets success
2024-4-3 18:22:30-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:22:30-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:22:30-debug: asset-db:refresh-all-database (926ms)
2024-4-3 18:22:30-debug: asset-db:worker-effect-data-processing (6ms)
2024-4-3 18:22:30-debug: asset-db-hook-engine-extends-afterRefresh (7ms)
2024-4-3 18:22:30-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:22:30-debug: Query all assets info in project
2024-4-3 18:22:30-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:22:30-debug:   Number of all scripts: 3
2024-4-3 18:22:30-debug:   Number of other assets: 328
2024-4-3 18:22:30-debug:   Number of all scenes: 1
2024-4-3 18:22:30-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:22:30-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:22:30-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:22:30-debug: // ---- build task 查询 Asset Bundle ---- (93ms)
2024-4-3 18:22:30-debug: run build task 查询 Asset Bundle success in 93 ms√, progress: 5%
2024-4-3 18:22:30-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:22:30-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 18:22:30-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 18:22:30-debug: [Build Memory track]: 查询 Asset Bundle start:202.21MB, end 202.22MB, increase: 13.55KB
2024-4-3 18:22:30-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:22:30-debug: [Build Memory track]: 查询 Asset Bundle start:203.37MB, end 202.20MB, increase: -1204.24KB
2024-4-3 18:22:30-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:22:30-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:22:30-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-3 18:22:30-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-3 18:22:30-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:202.24MB, end 202.27MB, increase: 31.23KB
2024-4-3 18:22:30-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:22:30-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:22:30-debug: run build task 填充脚本数据到 settings.json success in 10 ms√, progress: 13%
2024-4-3 18:22:30-debug: [Build Memory track]: 填充脚本数据到 settings.json start:202.29MB, end 202.30MB, increase: 19.22KB
2024-4-3 18:22:30-debug: // ---- build task 填充脚本数据到 settings.json ---- (10ms)
2024-4-3 18:22:30-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:22:30-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:22:30-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (35ms)
2024-4-3 18:22:30-debug: run build task 整理部分构建选项内数据到 settings.json success in 35 ms√, progress: 15%
2024-4-3 18:22:30-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:202.32MB, end 202.66MB, increase: 345.66KB
2024-4-3 18:22:32-debug: recompile effect.bin success
2024-4-3 18:23:05-debug: Query all assets info in project
2024-4-3 18:23:05-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:23:05-debug:   Number of all scenes: 1
2024-4-3 18:23:05-debug:   Number of all scripts: 3
2024-4-3 18:23:05-debug:   Number of other assets: 328
2024-4-3 18:23:05-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:23:05-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:23:05-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:23:05-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:23:05-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:23:05-debug: // ---- build task 查询 Asset Bundle ---- (43ms)
2024-4-3 18:23:05-debug: [Build Memory track]: 查询 Asset Bundle start:197.22MB, end 197.67MB, increase: 467.28KB
2024-4-3 18:23:05-debug: run build task 查询 Asset Bundle success in 43 ms√, progress: 5%
2024-4-3 18:23:05-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 18:23:05-debug: [Build Memory track]: 查询 Asset Bundle start:197.69MB, end 197.70MB, increase: 14.45KB
2024-4-3 18:23:05-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:23:05-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:23:05-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 18:23:06-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:197.72MB, end 197.74MB, increase: 20.67KB
2024-4-3 18:23:05-debug: run build task 整理部分构建选项内数据到 settings.json success in 13 ms√, progress: 12%
2024-4-3 18:23:06-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:23:06-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:23:06-debug: run build task 填充脚本数据到 settings.json success in 6 ms√, progress: 13%
2024-4-3 18:23:06-debug: [Build Memory track]: 填充脚本数据到 settings.json start:197.75MB, end 197.77MB, increase: 13.87KB
2024-4-3 18:23:06-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:23:06-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:23:05-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (13ms)
2024-4-3 18:23:06-debug: // ---- build task 填充脚本数据到 settings.json ---- (6ms)
2024-4-3 18:23:06-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (31ms)
2024-4-3 18:23:06-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:197.78MB, end 197.91MB, increase: 128.32KB
2024-4-3 18:23:06-debug: run build task 整理部分构建选项内数据到 settings.json success in 31 ms√, progress: 15%
2024-4-3 18:24:20-debug: refresh db internal success
2024-4-3 18:24:20-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:24:21-debug: refresh db assets success
2024-4-3 18:24:21-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:24:21-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:24:21-debug: asset-db:refresh-all-database (329ms)
2024-4-3 18:24:21-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 18:24:21-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-3 18:24:21-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:24:22-debug: Query all assets info in project
2024-4-3 18:24:23-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:24:23-debug:   Number of all scenes: 1
2024-4-3 18:24:23-debug:   Number of all scripts: 3
2024-4-3 18:24:23-debug:   Number of other assets: 328
2024-4-3 18:24:23-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:24:23-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:24:23-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:24:23-debug: // ---- build task 查询 Asset Bundle ---- (92ms)
2024-4-3 18:24:23-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:24:23-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:24:23-debug: run build task 查询 Asset Bundle success in 92 ms√, progress: 5%
2024-4-3 18:24:23-debug: [Build Memory track]: 查询 Asset Bundle start:201.13MB, end 196.01MB, increase: -5238.49KB
2024-4-3 18:24:23-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 18:24:23-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 18:24:23-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:24:23-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:24:23-debug: [Build Memory track]: 查询 Asset Bundle start:196.03MB, end 196.04MB, increase: 14.95KB
2024-4-3 18:24:23-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (6ms)
2024-4-3 18:24:23-debug: run build task 整理部分构建选项内数据到 settings.json success in 6 ms√, progress: 12%
2024-4-3 18:24:23-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:196.06MB, end 196.36MB, increase: 311.13KB
2024-4-3 18:24:23-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:24:23-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:24:23-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 18:24:23-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 18:24:23-debug: [Build Memory track]: 填充脚本数据到 settings.json start:196.38MB, end 196.39MB, increase: 17.28KB
2024-4-3 18:24:23-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:24:23-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:24:23-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (38ms)
2024-4-3 18:24:23-debug: run build task 整理部分构建选项内数据到 settings.json success in 38 ms√, progress: 15%
2024-4-3 18:24:23-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:196.41MB, end 197.13MB, increase: 737.82KB
2024-4-3 18:24:23-debug: recompile effect.bin success
2024-4-3 18:24:25-debug: refresh db internal success
2024-4-3 18:24:25-debug: refresh db assets success
2024-4-3 18:24:25-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:24:25-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:24:25-debug: asset-db:refresh-all-database (489ms)
2024-4-3 18:24:25-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 18:24:25-debug: asset-db-hook-engine-extends-afterRefresh (8ms)
2024-4-3 18:24:48-debug: refresh db internal success
2024-4-3 18:24:48-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:24:48-debug: refresh db assets success
2024-4-3 18:24:48-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:24:48-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:24:48-debug: asset-db:refresh-all-database (1007ms)
2024-4-3 18:24:48-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 18:24:48-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-3 18:24:48-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:24:49-debug: Query all assets info in project
2024-4-3 18:24:50-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:24:50-debug:   Number of all scripts: 3
2024-4-3 18:24:50-debug:   Number of other assets: 328
2024-4-3 18:24:50-debug:   Number of all scenes: 1
2024-4-3 18:24:50-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:24:50-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:24:50-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:24:50-debug: // ---- build task 查询 Asset Bundle ---- (62ms)
2024-4-3 18:24:50-debug: run build task 查询 Asset Bundle success in 62 ms√, progress: 5%
2024-4-3 18:24:50-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:24:50-debug: [Build Memory track]: 查询 Asset Bundle start:203.26MB, end 195.24MB, increase: -8207.57KB
2024-4-3 18:24:50-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:24:50-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 18:24:50-debug: [Build Memory track]: 查询 Asset Bundle start:195.26MB, end 195.29MB, increase: 30.31KB
2024-4-3 18:24:50-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 18:24:50-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:24:50-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:24:50-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-3 18:24:50-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:195.30MB, end 195.32MB, increase: 17.91KB
2024-4-3 18:24:50-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-3 18:24:50-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:24:50-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:24:50-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 18:24:50-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 18:24:50-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:24:50-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:24:50-debug: [Build Memory track]: 填充脚本数据到 settings.json start:195.33MB, end 195.35MB, increase: 16.25KB
2024-4-3 18:24:50-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (16ms)
2024-4-3 18:24:50-debug: run build task 整理部分构建选项内数据到 settings.json success in 16 ms√, progress: 15%
2024-4-3 18:24:50-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:195.37MB, end 195.85MB, increase: 497.45KB
2024-4-3 18:24:51-debug: recompile effect.bin success
2024-4-3 18:28:07-debug: refresh db internal success
2024-4-3 18:28:07-debug: refresh db assets success
2024-4-3 18:28:07-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:28:07-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:28:07-debug: asset-db:refresh-all-database (153ms)
2024-4-3 18:28:07-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-3 18:28:07-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 18:30:09-debug: start refresh asset from E:\cary\git\cocos-creator\3d\firework\assets\main.scene...
2024-4-3 18:30:09-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\main.scenebackground: #aaff85; color: #000;color: #000;
2024-4-3 18:30:09-debug: refresh asset E:\cary\git\cocos-creator\3d\firework\assets success
2024-4-3 18:30:10-debug: Query all assets info in project
2024-4-3 18:30:10-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:30:10-debug:   Number of all scenes: 1
2024-4-3 18:30:10-debug:   Number of all scripts: 3
2024-4-3 18:30:10-debug:   Number of other assets: 328
2024-4-3 18:30:10-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:30:10-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:30:10-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:30:10-debug: [Build Memory track]: 查询 Asset Bundle start:204.26MB, end 204.55MB, increase: 298.84KB
2024-4-3 18:30:10-debug: run build task 查询 Asset Bundle success in 30 ms√, progress: 5%
2024-4-3 18:30:10-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:30:10-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:30:10-debug: // ---- build task 查询 Asset Bundle ---- (30ms)
2024-4-3 18:30:10-debug: // ---- build task 查询 Asset Bundle ---- (7ms)
2024-4-3 18:30:10-debug: run build task 查询 Asset Bundle success in 7 ms√, progress: 10%
2024-4-3 18:30:10-debug: [Build Memory track]: 查询 Asset Bundle start:204.57MB, end 204.58MB, increase: 15.76KB
2024-4-3 18:30:10-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:30:10-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:30:10-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (6ms)
2024-4-3 18:30:10-debug: run build task 整理部分构建选项内数据到 settings.json success in 6 ms√, progress: 12%
2024-4-3 18:30:10-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:204.60MB, end 204.61MB, increase: 17.91KB
2024-4-3 18:30:10-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:30:10-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:30:10-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-3 18:30:10-debug: [Build Memory track]: 填充脚本数据到 settings.json start:204.63MB, end 204.64MB, increase: 16.20KB
2024-4-3 18:30:10-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:30:10-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:30:10-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-3 18:30:10-debug: run build task 整理部分构建选项内数据到 settings.json success in 9 ms√, progress: 15%
2024-4-3 18:30:10-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:204.66MB, end 204.78MB, increase: 122.40KB
2024-4-3 18:30:10-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (9ms)
2024-4-3 18:36:05-debug: refresh db internal success
2024-4-3 18:36:05-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:36:05-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:36:07-debug: refresh db assets success
2024-4-3 18:36:07-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:36:07-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:36:07-debug: asset-db:refresh-all-database (1721ms)
2024-4-3 18:36:07-debug: asset-db:worker-effect-data-processing (16ms)
2024-4-3 18:36:07-debug: asset-db-hook-engine-extends-afterRefresh (34ms)
2024-4-3 18:36:07-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:36:09-debug: Query all assets info in project
2024-4-3 18:36:09-debug:   Number of all scenes: 1
2024-4-3 18:36:09-debug:   Number of all scripts: 3
2024-4-3 18:36:09-debug:   Number of other assets: 328
2024-4-3 18:36:09-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:36:09-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:36:09-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:36:09-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:36:09-debug: // ---- build task 查询 Asset Bundle ---- (101ms)
2024-4-3 18:36:09-debug: run build task 查询 Asset Bundle success in 101 ms√, progress: 5%
2024-4-3 18:36:09-debug: [Build Memory track]: 查询 Asset Bundle start:203.04MB, end 199.44MB, increase: -3691.85KB
2024-4-3 18:36:09-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:36:09-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:36:09-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-4-3 18:36:09-debug: [Build Memory track]: 查询 Asset Bundle start:199.45MB, end 199.47MB, increase: 15.20KB
2024-4-3 18:36:09-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:36:09-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:36:09-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 10%
2024-4-3 18:36:09-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-3 18:36:09-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:199.48MB, end 199.50MB, increase: 16.90KB
2024-4-3 18:36:09-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-3 18:36:09-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:36:09-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:36:09-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 18:36:09-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 18:36:09-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:36:09-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:36:09-debug: [Build Memory track]: 填充脚本数据到 settings.json start:199.51MB, end 202.72MB, increase: 3.21MB
2024-4-3 18:36:09-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (80ms)
2024-4-3 18:36:09-debug: run build task 整理部分构建选项内数据到 settings.json success in 80 ms√, progress: 15%
2024-4-3 18:36:09-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:202.73MB, end 196.03MB, increase: -6860.15KB
2024-4-3 18:36:10-debug: recompile effect.bin success
2024-4-3 18:37:43-debug: refresh db internal success
2024-4-3 18:37:43-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:37:43-debug: refresh db assets success
2024-4-3 18:37:43-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:37:43-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:37:43-debug: asset-db:refresh-all-database (348ms)
2024-4-3 18:37:43-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-3 18:37:43-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:37:43-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 18:37:44-debug: Query all assets info in project
2024-4-3 18:37:44-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:37:44-debug:   Number of all scenes: 1
2024-4-3 18:37:44-debug:   Number of all scripts: 3
2024-4-3 18:37:44-debug:   Number of other assets: 328
2024-4-3 18:37:44-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:37:44-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:37:44-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:37:44-debug: run build task 查询 Asset Bundle success in 97 ms√, progress: 5%
2024-4-3 18:37:44-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:37:44-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:37:44-debug: // ---- build task 查询 Asset Bundle ---- (97ms)
2024-4-3 18:37:44-debug: [Build Memory track]: 查询 Asset Bundle start:203.24MB, end 201.88MB, increase: -1385.91KB
2024-4-3 18:37:44-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-4-3 18:37:44-debug: [Build Memory track]: 查询 Asset Bundle start:201.90MB, end 201.91MB, increase: 15.95KB
2024-4-3 18:37:44-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 10%
2024-4-3 18:37:44-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:37:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:37:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (5ms)
2024-4-3 18:37:44-debug: run build task 整理部分构建选项内数据到 settings.json success in 5 ms√, progress: 12%
2024-4-3 18:37:44-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:201.93MB, end 202.00MB, increase: 70.63KB
2024-4-3 18:37:44-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:37:44-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:37:44-debug: // ---- build task 填充脚本数据到 settings.json ---- (6ms)
2024-4-3 18:37:44-debug: run build task 填充脚本数据到 settings.json success in 6 ms√, progress: 13%
2024-4-3 18:37:44-debug: [Build Memory track]: 填充脚本数据到 settings.json start:202.01MB, end 202.03MB, increase: 15.94KB
2024-4-3 18:37:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:37:44-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:37:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (23ms)
2024-4-3 18:37:44-debug: run build task 整理部分构建选项内数据到 settings.json success in 23 ms√, progress: 15%
2024-4-3 18:37:44-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:202.04MB, end 202.42MB, increase: 385.90KB
2024-4-3 18:37:46-debug: recompile effect.bin success
2024-4-3 18:39:41-debug: refresh db internal success
2024-4-3 18:39:41-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:39:41-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:39:42-debug: refresh db assets success
2024-4-3 18:39:42-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:39:42-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:39:42-debug: asset-db:refresh-all-database (1247ms)
2024-4-3 18:39:42-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:39:42-debug: asset-db-hook-engine-extends-afterRefresh (9ms)
2024-4-3 18:39:42-debug: asset-db:worker-effect-data-processing (9ms)
2024-4-3 18:39:42-debug: Query all assets info in project
2024-4-3 18:39:42-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:39:42-debug:   Number of all scenes: 1
2024-4-3 18:39:42-debug:   Number of all scripts: 3
2024-4-3 18:39:42-debug:   Number of other assets: 328
2024-4-3 18:39:43-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:39:43-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:39:43-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:39:43-debug: // ---- build task 查询 Asset Bundle ---- (64ms)
2024-4-3 18:39:43-debug: run build task 查询 Asset Bundle success in 64 ms√, progress: 5%
2024-4-3 18:39:43-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:39:43-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-4-3 18:39:43-debug: [Build Memory track]: 查询 Asset Bundle start:200.97MB, end 203.05MB, increase: 2.08MB
2024-4-3 18:39:43-debug: [Build Memory track]: 查询 Asset Bundle start:203.06MB, end 203.07MB, increase: 12.83KB
2024-4-3 18:39:43-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 10%
2024-4-3 18:39:43-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:39:43-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:39:43-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:39:43-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (5ms)
2024-4-3 18:39:43-debug: run build task 整理部分构建选项内数据到 settings.json success in 5 ms√, progress: 12%
2024-4-3 18:39:43-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:203.09MB, end 206.35MB, increase: 3.26MB
2024-4-3 18:39:43-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:39:43-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:39:43-debug: // ---- build task 填充脚本数据到 settings.json ---- (5ms)
2024-4-3 18:39:43-debug: run build task 填充脚本数据到 settings.json success in 5 ms√, progress: 13%
2024-4-3 18:39:43-debug: [Build Memory track]: 填充脚本数据到 settings.json start:206.36MB, end 200.64MB, increase: -5855.75KB
2024-4-3 18:39:43-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:39:43-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:39:43-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (77ms)
2024-4-3 18:39:43-debug: run build task 整理部分构建选项内数据到 settings.json success in 77 ms√, progress: 15%
2024-4-3 18:39:43-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:200.66MB, end 203.58MB, increase: 2.92MB
2024-4-3 18:39:46-debug: recompile effect.bin success
2024-4-3 18:39:47-debug: Query all assets info in project
2024-4-3 18:39:47-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:39:47-debug:   Number of all scenes: 1
2024-4-3 18:39:47-debug:   Number of all scripts: 3
2024-4-3 18:39:47-debug:   Number of other assets: 328
2024-4-3 18:39:47-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:39:47-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:39:47-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:39:47-debug: // ---- build task 查询 Asset Bundle ---- (43ms)
2024-4-3 18:39:47-debug: run build task 查询 Asset Bundle success in 43 ms√, progress: 5%
2024-4-3 18:39:47-debug: [Build Memory track]: 查询 Asset Bundle start:203.84MB, end 205.71MB, increase: 1.87MB
2024-4-3 18:39:47-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:39:47-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:39:47-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 18:39:47-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 18:39:47-debug: [Build Memory track]: 查询 Asset Bundle start:205.72MB, end 205.73MB, increase: 14.05KB
2024-4-3 18:39:47-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:39:47-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:39:47-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 18:39:47-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 18:39:47-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:205.75MB, end 205.78MB, increase: 29.80KB
2024-4-3 18:39:47-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:39:47-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:39:47-debug: // ---- build task 填充脚本数据到 settings.json ---- (6ms)
2024-4-3 18:39:47-debug: run build task 填充脚本数据到 settings.json success in 6 ms√, progress: 13%
2024-4-3 18:39:47-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:39:47-debug: [Build Memory track]: 填充脚本数据到 settings.json start:205.79MB, end 205.81MB, increase: 16.88KB
2024-4-3 18:39:47-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:39:47-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (18ms)
2024-4-3 18:39:47-debug: run build task 整理部分构建选项内数据到 settings.json success in 18 ms√, progress: 15%
2024-4-3 18:39:47-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:205.82MB, end 205.95MB, increase: 128.08KB
2024-4-3 18:40:12-debug: refresh db internal success
2024-4-3 18:40:12-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:40:12-debug: refresh db assets success
2024-4-3 18:40:12-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:40:12-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:40:12-debug: asset-db:refresh-all-database (338ms)
2024-4-3 18:40:12-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 18:40:12-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 18:40:14-debug: Query all assets info in project
2024-4-3 18:40:14-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:40:14-debug:   Number of all scripts: 3
2024-4-3 18:40:14-debug:   Number of other assets: 328
2024-4-3 18:40:14-debug:   Number of all scenes: 1
2024-4-3 18:40:15-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:40:15-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:40:15-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:40:15-debug: // ---- build task 查询 Asset Bundle ---- (44ms)
2024-4-3 18:40:15-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:40:15-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:40:15-debug: [Build Memory track]: 查询 Asset Bundle start:202.00MB, end 202.40MB, increase: 415.23KB
2024-4-3 18:40:15-debug: run build task 查询 Asset Bundle success in 44 ms√, progress: 5%
2024-4-3 18:40:15-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 18:40:15-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 18:40:15-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:40:15-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:40:15-debug: [Build Memory track]: 查询 Asset Bundle start:202.42MB, end 202.43MB, increase: 14.05KB
2024-4-3 18:40:15-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:202.45MB, end 202.46MB, increase: 17.00KB
2024-4-3 18:40:15-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:40:15-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:40:15-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-3 18:40:15-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-3 18:40:15-debug: // ---- build task 填充脚本数据到 settings.json ---- (6ms)
2024-4-3 18:40:15-debug: run build task 填充脚本数据到 settings.json success in 6 ms√, progress: 13%
2024-4-3 18:40:15-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:40:15-debug: [Build Memory track]: 填充脚本数据到 settings.json start:202.48MB, end 202.49MB, increase: 17.27KB
2024-4-3 18:40:15-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:40:15-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (31ms)
2024-4-3 18:40:15-debug: run build task 整理部分构建选项内数据到 settings.json success in 31 ms√, progress: 15%
2024-4-3 18:40:15-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:202.51MB, end 202.64MB, increase: 131.55KB
2024-4-3 18:42:43-debug: refresh db internal success
2024-4-3 18:42:43-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:42:44-debug: refresh db assets success
2024-4-3 18:42:44-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:42:44-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:42:44-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:42:44-debug: asset-db:refresh-all-database (712ms)
2024-4-3 18:42:44-debug: asset-db:worker-effect-data-processing (13ms)
2024-4-3 18:42:44-debug: asset-db-hook-engine-extends-afterRefresh (15ms)
2024-4-3 18:42:45-debug: Query all assets info in project
2024-4-3 18:42:45-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:42:46-debug:   Number of all scenes: 1
2024-4-3 18:42:46-debug:   Number of all scripts: 3
2024-4-3 18:42:46-debug:   Number of other assets: 328
2024-4-3 18:42:46-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:42:46-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:42:46-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:42:46-debug: // ---- build task 查询 Asset Bundle ---- (295ms)
2024-4-3 18:42:46-debug: run build task 查询 Asset Bundle success in 295 ms√, progress: 5%
2024-4-3 18:42:46-debug: [Build Memory track]: 查询 Asset Bundle start:220.12MB, end 196.26MB, increase: -24431.38KB
2024-4-3 18:42:46-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:42:46-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:42:46-debug: // ---- build task 查询 Asset Bundle ---- (9ms)
2024-4-3 18:42:46-debug: run build task 查询 Asset Bundle success in 9 ms√, progress: 10%
2024-4-3 18:42:46-debug: [Build Memory track]: 查询 Asset Bundle start:196.27MB, end 196.29MB, increase: 15.54KB
2024-4-3 18:42:46-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:42:46-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:42:46-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-3 18:42:46-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-3 18:42:46-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:196.30MB, end 199.70MB, increase: 3.40MB
2024-4-3 18:42:46-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:42:46-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:42:46-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 18:42:46-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 18:42:46-debug: [Build Memory track]: 填充脚本数据到 settings.json start:199.72MB, end 199.73MB, increase: 17.11KB
2024-4-3 18:42:46-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:42:46-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:42:46-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (56ms)
2024-4-3 18:42:46-debug: run build task 整理部分构建选项内数据到 settings.json success in 56 ms√, progress: 15%
2024-4-3 18:42:46-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:199.75MB, end 203.05MB, increase: 3.31MB
2024-4-3 18:42:47-debug: recompile effect.bin success
2024-4-3 18:46:08-debug: refresh db internal success
2024-4-3 18:46:08-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:46:08-debug: refresh db assets success
2024-4-3 18:46:08-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:46:08-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:46:08-debug: asset-db:refresh-all-database (998ms)
2024-4-3 18:46:08-debug: asset-db:worker-effect-data-processing (7ms)
2024-4-3 18:46:08-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:46:08-debug: asset-db-hook-engine-extends-afterRefresh (8ms)
2024-4-3 18:46:09-debug: Query all assets info in project
2024-4-3 18:46:09-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 18:46:09-debug:   Number of all scenes: 1
2024-4-3 18:46:09-debug:   Number of all scripts: 3
2024-4-3 18:46:09-debug:   Number of other assets: 328
2024-4-3 18:46:10-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:46:10-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 18:46:10-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 18:46:10-debug: [Build Memory track]: 查询 Asset Bundle start:205.25MB, end 200.05MB, increase: -5318.27KB
2024-4-3 18:46:10-debug: // ---- build task 查询 Asset Bundle ---- (118ms)
2024-4-3 18:46:10-debug: run build task 查询 Asset Bundle success in 118 ms√, progress: 5%
2024-4-3 18:46:10-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 18:46:10-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 18:46:10-debug: // ---- build task 查询 Asset Bundle ---- (10ms)
2024-4-3 18:46:10-debug: run build task 查询 Asset Bundle success in 10 ms√, progress: 10%
2024-4-3 18:46:10-debug: [Build Memory track]: 查询 Asset Bundle start:200.07MB, end 200.09MB, increase: 21.52KB
2024-4-3 18:46:10-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 18:46:10-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:46:10-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (9ms)
2024-4-3 18:46:10-debug: run build task 整理部分构建选项内数据到 settings.json success in 9 ms√, progress: 12%
2024-4-3 18:46:10-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:200.10MB, end 200.12MB, increase: 16.56KB
2024-4-3 18:46:10-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 18:46:10-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 18:46:10-debug: // ---- build task 填充脚本数据到 settings.json ---- (6ms)
2024-4-3 18:46:10-debug: run build task 填充脚本数据到 settings.json success in 6 ms√, progress: 13%
2024-4-3 18:46:10-debug: [Build Memory track]: 填充脚本数据到 settings.json start:200.13MB, end 200.15MB, increase: 16.42KB
2024-4-3 18:46:10-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 18:46:10-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 18:46:10-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (76ms)
2024-4-3 18:46:10-debug: run build task 整理部分构建选项内数据到 settings.json success in 76 ms√, progress: 15%
2024-4-3 18:46:10-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:200.16MB, end 205.01MB, increase: 4.85MB
2024-4-3 18:46:11-debug: recompile effect.bin success
2024-4-3 18:54:12-debug: refresh db internal success
2024-4-3 18:54:12-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:54:12-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:757: 'varying' : only allowed at global scopeERROR: 0:757: 'varying' : Local variables can only use the const storage qualifier.ERROR: 0:757: 'varying' : invalid qualifier combination 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 float rand(vec2 seeds_zero_to_one) {745   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);746 }747 748 vec4 vert () {749   StandardVertInput In;750   CCVertInput(In);751 752   mat4 matWorld, matWorldIT;753   CCGetWorldMatrixFull(matWorld, matWorldIT);754 755   vec3 dir = normalize(In.position.xyz);756   float f = 5.0;757   varying float len = length(In.position);758   float delay = len * f / 2.0;759   float time = cc_time.x - delay;760   time = step(0.0, time) * time;761   time = mod(time, f);762   float r = rand(In.position.xy);763   In.position.xyz = dir * r  * time;764 765   vec4 pos = matWorld * In.position;766 767   v_position = pos.xyz;768   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);769   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);770   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;771 772   v_uv = a_texCoord;773   #if HAS_SECOND_UV774     v_uv1 = a_texCoord1;775   #endif776   v_color = a_color;777 778   CC_TRANSFER_FOG(pos);779   v_shadowPos = cc_matLightViewProj * pos;780   gl_PointSize = 1.0;781   return cc_matProj * (cc_matView * matWorld) * In.position;782 }783 784 785 void main() { gl_Position = vert(); }786 
2024-4-3 18:54:12-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:54:12-debug: refresh db assets success
2024-4-3 18:54:12-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:54:12-debug: asset-db:refresh-all-database (586ms)
2024-4-3 18:54:12-debug: asset-db:worker-effect-data-processing (13ms)
2024-4-3 18:54:12-debug: asset-db-hook-engine-extends-afterRefresh (13ms)
2024-4-3 18:54:12-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:54:28-debug: refresh db internal success
2024-4-3 18:54:28-debug: refresh db assets success
2024-4-3 18:54:28-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:54:28-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:54:28-debug: asset-db:refresh-all-database (446ms)
2024-4-3 18:54:28-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 18:54:28-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 18:57:13-debug: refresh db internal success
2024-4-3 18:57:13-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:57:13-error: ../shader/particle.effect - linking: Error EFX2407: link failed: FRAGMENT varying len does not match any VERTEX varying 
2024-4-3 18:57:13-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:57:13-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:57:13-debug: refresh db assets success
2024-4-3 18:57:13-debug: asset-db:refresh-all-database (374ms)
2024-4-3 18:57:13-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 18:57:13-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 18:57:13-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:57:20-debug: refresh db internal success
2024-4-3 18:57:20-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 18:57:20-debug: refresh db assets success
2024-4-3 18:57:20-error: ../shader/particle.effect - linking: Error EFX2407: link failed: FRAGMENT varying len does not match any VERTEX varying 
2024-4-3 18:57:20-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 18:57:20-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 18:57:20-debug: asset-db:refresh-all-database (488ms)
2024-4-3 18:57:20-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 18:57:20-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-3 18:57:20-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:00:56-debug: refresh db internal success
2024-4-3 19:00:57-debug: refresh db assets success
2024-4-3 19:00:57-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:00:57-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:00:57-debug: asset-db:refresh-all-database (152ms)
2024-4-3 19:00:57-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-4-3 19:01:21-debug: refresh db internal success
2024-4-3 19:01:21-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:01:21-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:767: 'len' : undeclared identifierERROR: 0:767: 'assign' : l-value required (can't modify a const) 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 varying float vlen;745 746 float rand(vec2 seeds_zero_to_one) {747   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);748 }749 750 vec4 vert () {751   StandardVertInput In;752   CCVertInput(In);753 754   mat4 matWorld, matWorldIT;755   CCGetWorldMatrixFull(matWorld, matWorldIT);756 757   vec3 dir = normalize(In.position.xyz);758   float f = 5.0;759   float len0 = length(In.position);760   float delay = len0 * f / 2.0;761   float time = cc_time.x - delay;762   time = step(0.0, time) * time;763   time = mod(time, f);764   float r = rand(In.position.xy);765   In.position.xyz = dir * r  * time;766 767   len = length(In.position);768 769   vec4 pos = matWorld * In.position;770 771   v_position = pos.xyz;772   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);773   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);774   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;775 776   v_uv = a_texCoord;777   #if HAS_SECOND_UV778     v_uv1 = a_texCoord1;779   #endif780   v_color = a_color;781 782   CC_TRANSFER_FOG(pos);783   v_shadowPos = cc_matLightViewProj * pos;784   gl_PointSize = 1.0;785   return cc_matProj * (cc_matView * matWorld) * In.position;786 }787 788 789 void main() { gl_Position = vert(); }790 
2024-4-3 19:01:21-debug: refresh db assets success
2024-4-3 19:01:21-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:01:21-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:01:21-debug: asset-db:refresh-all-database (543ms)
2024-4-3 19:01:21-debug: asset-db:worker-effect-data-processing (10ms)
2024-4-3 19:01:21-debug: asset-db-hook-engine-extends-afterRefresh (11ms)
2024-4-3 19:01:21-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:01:36-debug: refresh db internal success
2024-4-3 19:01:36-debug: refresh db assets success
2024-4-3 19:01:36-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:01:36-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:01:36-debug: asset-db:refresh-all-database (496ms)
2024-4-3 19:01:36-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 19:01:36-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-3 19:01:55-debug: refresh db internal success
2024-4-3 19:01:55-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:01:55-error: ../shader/particle.effect - linking: Error EFX2407: link failed: FRAGMENT varying vlen does not match any VERTEX varying 
2024-4-3 19:01:55-debug: refresh db assets success
2024-4-3 19:01:55-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:01:55-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:01:55-debug: asset-db:refresh-all-database (614ms)
2024-4-3 19:01:55-debug: asset-db-hook-engine-extends-afterRefresh (9ms)
2024-4-3 19:01:55-debug: asset-db:worker-effect-data-processing (8ms)
2024-4-3 19:01:56-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:02:06-debug: refresh db internal success
2024-4-3 19:02:06-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:02:06-debug: refresh db assets success
2024-4-3 19:02:06-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:02:06-debug: asset-db:refresh-all-database (328ms)
2024-4-3 19:02:06-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 19:02:06-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 19:02:20-debug: refresh db internal success
2024-4-3 19:02:20-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:02:21-error: ../shader/particle.effect - linking: Error EFX2407: link failed: FRAGMENT varying vlen does not match any VERTEX varying 
2024-4-3 19:02:21-debug: refresh db assets success
2024-4-3 19:02:21-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:02:21-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:02:21-debug: asset-db:refresh-all-database (680ms)
2024-4-3 19:02:21-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 19:02:21-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-3 19:02:21-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:02:31-debug: refresh db internal success
2024-4-3 19:02:31-debug: refresh db assets success
2024-4-3 19:02:31-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:02:31-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:02:31-debug: asset-db:refresh-all-database (471ms)
2024-4-3 19:02:31-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 19:02:31-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-3 19:03:03-debug: refresh db internal success
2024-4-3 19:03:03-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:03:03-debug: refresh db assets success
2024-4-3 19:03:03-error: ../shader/particle.effect - linking: Error EFX2407: link failed: FRAGMENT varying vlen does not match any VERTEX varying 
2024-4-3 19:03:03-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:03:03-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:03:03-debug: asset-db:refresh-all-database (177ms)
2024-4-3 19:03:03-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-3 19:03:03-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-4-3 19:03:03-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:06:12-debug: refresh db internal success
2024-4-3 19:06:12-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:06:12-error: ../shader/particle.effect - linking: Error EFX2407: link failed: FRAGMENT varying vlen does not match any VERTEX varying 
2024-4-3 19:06:12-debug: refresh db assets success
2024-4-3 19:06:12-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:06:12-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:06:12-debug: asset-db:refresh-all-database (256ms)
2024-4-3 19:06:12-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 19:06:12-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 19:06:12-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:06:17-debug: refresh db internal success
2024-4-3 19:06:17-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:06:18-error: ../shader/particle.effect - linking: Error EFX2407: link failed: FRAGMENT varying vlen does not match any VERTEX varying 
2024-4-3 19:06:18-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:06:18-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:06:18-debug: refresh db assets success
2024-4-3 19:06:18-debug: asset-db:refresh-all-database (604ms)
2024-4-3 19:06:18-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 19:06:18-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-3 19:06:18-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:06:33-debug: refresh db internal success
2024-4-3 19:06:33-error: ../shader/particle.effect - linking: Error EFX2407: link failed: FRAGMENT varying vlen does not match any VERTEX varying 
2024-4-3 19:06:33-debug: refresh db assets success
2024-4-3 19:06:33-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:06:33-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:06:33-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:06:33-debug: asset-db:refresh-all-database (538ms)
2024-4-3 19:06:33-debug: asset-db:worker-effect-data-processing (9ms)
2024-4-3 19:06:33-debug: asset-db-hook-engine-extends-afterRefresh (9ms)
2024-4-3 19:06:33-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:07:59-debug: refresh db internal success
2024-4-3 19:07:59-debug: refresh db assets success
2024-4-3 19:07:59-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:07:59-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:07:59-debug: asset-db:refresh-all-database (123ms)
2024-4-3 19:07:59-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 19:07:59-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 19:08:10-debug: refresh db internal success
2024-4-3 19:08:10-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:08:10-error: ../shader/particle.effect - linking: Error EFX2407: link failed: FRAGMENT varying vlen does not match any VERTEX varying 
2024-4-3 19:08:10-debug: refresh db assets success
2024-4-3 19:08:10-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:08:10-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:08:10-debug: asset-db:refresh-all-database (633ms)
2024-4-3 19:08:10-debug: asset-db:worker-effect-data-processing (15ms)
2024-4-3 19:08:10-debug: asset-db-hook-engine-extends-afterRefresh (16ms)
2024-4-3 19:08:10-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:08:30-debug: refresh db internal success
2024-4-3 19:08:30-debug: refresh db assets success
2024-4-3 19:08:30-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:08:30-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:08:30-debug: asset-db:refresh-all-database (130ms)
2024-4-3 19:08:30-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-3 19:08:30-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 19:08:55-debug: refresh db internal success
2024-4-3 19:08:55-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:08:55-error: ../shader/particle.effect - linking: Error EFX2407: link failed: FRAGMENT varying v_len does not match any VERTEX varying 
2024-4-3 19:08:55-debug: refresh db assets success
2024-4-3 19:08:55-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:08:55-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:08:55-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 19:08:55-debug: asset-db:refresh-all-database (286ms)
2024-4-3 19:08:55-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 19:08:55-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:09:30-debug: refresh db internal success
2024-4-3 19:09:30-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:744: 'qualifier sequence' : varying specified multiple times 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 varying varying float v_len;745 746 float rand(vec2 seeds_zero_to_one) {747   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);748 }749 750 vec4 vert () {751   StandardVertInput In;752   CCVertInput(In);753 754   mat4 matWorld, matWorldIT;755   CCGetWorldMatrixFull(matWorld, matWorldIT);756 757   vec3 dir = normalize(In.position.xyz);758   float f = 5.0;759   float len0 = length(In.position);760   float delay = len0 * f / 2.0;761   float time = cc_time.x - delay;762   time = step(0.0, time) * time;763   time = mod(time, f);764   float r = rand(In.position.xy);765   In.position.xyz = dir * r  * time;766 767   v_len = length(In.position);768 769   vec4 pos = matWorld * In.position;770 771   v_position = pos.xyz;772   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);773   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);774   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;775 776   v_uv = a_texCoord;777   #if HAS_SECOND_UV778     v_uv1 = a_texCoord1;779   #endif780   v_color = a_color;781 782   CC_TRANSFER_FOG(pos);783   v_shadowPos = cc_matLightViewProj * pos;784   gl_PointSize = 1.0;785   return cc_matProj * (cc_matView * matWorld) * In.position;786 }787 788 789 void main() { gl_Position = vert(); }790 
2024-4-3 19:09:30-debug: refresh db assets success
2024-4-3 19:09:30-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:09:30-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:09:30-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:09:30-debug: asset-db:refresh-all-database (139ms)
2024-4-3 19:09:30-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-3 19:09:30-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-3 19:09:30-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:09:53-debug: refresh db internal success
2024-4-3 19:09:53-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:09:53-error: ../shader/particle.effect - linking: Error EFX2407: link failed: FRAGMENT varying v_len does not match any VERTEX varying 
2024-4-3 19:09:53-debug: refresh db assets success
2024-4-3 19:09:53-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:09:53-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:09:53-debug: asset-db:refresh-all-database (678ms)
2024-4-3 19:09:53-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:09:53-debug: asset-db:worker-effect-data-processing (16ms)
2024-4-3 19:09:53-debug: asset-db-hook-engine-extends-afterRefresh (17ms)
2024-4-3 19:11:08-debug: refresh db internal success
2024-4-3 19:11:08-debug: refresh db assets success
2024-4-3 19:11:08-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:11:08-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:11:08-debug: asset-db:refresh-all-database (472ms)
2024-4-3 19:11:08-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 19:11:08-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-3 19:11:41-debug: refresh db internal success
2024-4-3 19:11:41-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:11:41-error: ../shader/particle.effect - linking: Error EFX2407: link failed: FRAGMENT varying v_len does not match any VERTEX varying 
2024-4-3 19:11:41-debug: refresh db assets success
2024-4-3 19:11:41-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:11:41-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:11:41-debug: asset-db:refresh-all-database (600ms)
2024-4-3 19:11:41-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 19:11:41-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 19:11:41-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:12:25-debug: refresh db internal success
2024-4-3 19:12:25-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:12:25-debug: refresh db assets success
2024-4-3 19:12:25-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:12:25-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:12:25-debug: asset-db:refresh-all-database (279ms)
2024-4-3 19:12:25-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-3 19:12:25-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:12:25-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-4-3 19:12:27-debug: recompile effect.bin success
2024-4-3 19:12:31-debug: Query all assets info in project
2024-4-3 19:12:31-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 19:12:31-debug:   Number of all scenes: 1
2024-4-3 19:12:31-debug:   Number of other assets: 328
2024-4-3 19:12:31-debug:   Number of all scripts: 3
2024-4-3 19:12:31-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 19:12:31-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 19:12:31-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 19:12:31-debug: // ---- build task 查询 Asset Bundle ---- (42ms)
2024-4-3 19:12:31-debug: run build task 查询 Asset Bundle success in 42 ms√, progress: 5%
2024-4-3 19:12:31-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 19:12:31-debug: [Build Memory track]: 查询 Asset Bundle start:204.15MB, end 206.01MB, increase: 1.86MB
2024-4-3 19:12:31-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 19:12:31-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-3 19:12:31-debug: [Build Memory track]: 查询 Asset Bundle start:206.03MB, end 206.04MB, increase: 12.55KB
2024-4-3 19:12:31-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-3 19:12:31-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 19:12:31-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 19:12:31-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 19:12:31-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 19:12:31-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 19:12:31-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:206.05MB, end 206.07MB, increase: 16.35KB
2024-4-3 19:12:31-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 19:12:31-debug: // ---- build task 填充脚本数据到 settings.json ---- (4ms)
2024-4-3 19:12:31-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 19:12:31-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 19:12:31-debug: run build task 填充脚本数据到 settings.json success in 4 ms√, progress: 13%
2024-4-3 19:12:31-debug: [Build Memory track]: 填充脚本数据到 settings.json start:206.08MB, end 206.10MB, increase: 16.20KB
2024-4-3 19:12:31-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (23ms)
2024-4-3 19:12:31-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:206.11MB, end 206.26MB, increase: 148.80KB
2024-4-3 19:12:31-debug: run build task 整理部分构建选项内数据到 settings.json success in 23 ms√, progress: 15%
2024-4-3 19:13:23-debug: refresh db internal success
2024-4-3 19:13:23-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:13:23-debug: refresh db assets success
2024-4-3 19:13:23-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:13:23-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:13:23-debug: asset-db:refresh-all-database (413ms)
2024-4-3 19:13:23-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-3 19:13:23-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-3 19:13:23-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:13:25-debug: recompile effect.bin success
2024-4-3 19:13:26-debug: Query all assets info in project
2024-4-3 19:13:26-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 19:13:26-debug:   Number of all scenes: 1
2024-4-3 19:13:26-debug:   Number of all scripts: 3
2024-4-3 19:13:26-debug:   Number of other assets: 328
2024-4-3 19:13:26-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 19:13:26-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 19:13:26-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 19:13:26-debug: // ---- build task 查询 Asset Bundle ---- (33ms)
2024-4-3 19:13:26-debug: run build task 查询 Asset Bundle success in 33 ms√, progress: 5%
2024-4-3 19:13:26-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 19:13:26-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 19:13:26-debug: [Build Memory track]: 查询 Asset Bundle start:209.61MB, end 211.45MB, increase: 1.84MB
2024-4-3 19:13:26-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 19:13:26-debug: [Build Memory track]: 查询 Asset Bundle start:211.46MB, end 211.48MB, increase: 15.30KB
2024-4-3 19:13:26-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 19:13:26-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 19:13:26-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 19:13:26-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-3 19:13:26-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-3 19:13:26-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.49MB, end 211.51MB, increase: 18.01KB
2024-4-3 19:13:26-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 19:13:26-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 19:13:26-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-3 19:13:26-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-3 19:13:26-debug: [Build Memory track]: 填充脚本数据到 settings.json start:211.52MB, end 211.54MB, increase: 16.94KB
2024-4-3 19:13:26-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 19:13:26-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 19:13:26-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (15ms)
2024-4-3 19:13:26-debug: run build task 整理部分构建选项内数据到 settings.json success in 15 ms√, progress: 15%
2024-4-3 19:13:26-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.56MB, end 211.67MB, increase: 120.70KB
2024-4-3 19:14:23-debug: refresh db internal success
2024-4-3 19:14:23-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:14:24-debug: refresh db assets success
2024-4-3 19:14:24-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:14:24-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:14:24-debug: asset-db:refresh-all-database (922ms)
2024-4-3 19:14:24-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-3 19:14:24-debug: asset-db-hook-engine-extends-afterRefresh (7ms)
2024-4-3 19:14:24-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:14:26-debug: recompile effect.bin success
2024-4-3 19:14:26-debug: Query all assets info in project
2024-4-3 19:14:26-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-3 19:14:27-debug:   Number of other assets: 328
2024-4-3 19:14:27-debug:   Number of all scripts: 3
2024-4-3 19:14:27-debug:   Number of all scenes: 1
2024-4-3 19:14:27-debug: 查询 Asset Bundle start, progress: 0%
2024-4-3 19:14:27-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 19:14:27-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-3 19:14:27-debug: // ---- build task 查询 Asset Bundle ---- (52ms)
2024-4-3 19:14:27-debug: run build task 查询 Asset Bundle success in 52 ms√, progress: 5%
2024-4-3 19:14:27-debug: [Build Memory track]: 查询 Asset Bundle start:203.92MB, end 197.48MB, increase: -6587.73KB
2024-4-3 19:14:27-debug: 查询 Asset Bundle start, progress: 5%
2024-4-3 19:14:27-debug: // ---- build task 查询 Asset Bundle ----
2024-4-3 19:14:27-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-3 19:14:27-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-3 19:14:27-debug: [Build Memory track]: 查询 Asset Bundle start:197.50MB, end 197.51MB, increase: 13.84KB
2024-4-3 19:14:27-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-3 19:14:27-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 19:14:27-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-3 19:14:27-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-3 19:14:27-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-3 19:14:27-debug: // ---- build task 填充脚本数据到 settings.json ---- (5ms)
2024-4-3 19:14:27-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:197.53MB, end 197.54MB, increase: 16.17KB
2024-4-3 19:14:27-debug: run build task 填充脚本数据到 settings.json success in 5 ms√, progress: 13%
2024-4-3 19:14:27-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-3 19:14:27-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-3 19:14:27-debug: [Build Memory track]: 填充脚本数据到 settings.json start:197.56MB, end 197.57MB, increase: 13.12KB
2024-4-3 19:14:27-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-3 19:14:27-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (17ms)
2024-4-3 19:14:27-debug: run build task 整理部分构建选项内数据到 settings.json success in 17 ms√, progress: 15%
2024-4-3 19:14:27-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:197.58MB, end 197.71MB, increase: 131.88KB
2024-4-3 19:18:56-debug: refresh db internal success
2024-4-3 19:18:56-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:18:57-debug: refresh db assets success
2024-4-3 19:18:57-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-3 19:18:57-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-3 19:18:57-debug: asset-db:refresh-all-database (1269ms)
2024-4-3 19:18:57-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-3 19:18:57-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-3 19:18:57-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-3 19:18:59-debug: recompile effect.bin success
2024-4-7 09:44:06-debug: refresh db internal success
2024-4-7 09:44:06-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 09:44:06-debug: refresh db assets success
2024-4-7 09:44:06-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 09:44:06-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 09:44:06-debug: asset-db:refresh-all-database (333ms)
2024-4-7 09:44:06-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-7 09:44:06-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-7 09:44:08-debug: Query all assets info in project
2024-4-7 09:44:08-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 09:44:08-debug:   Number of all scenes: 1
2024-4-7 09:44:08-debug:   Number of all scripts: 3
2024-4-7 09:44:08-debug:   Number of other assets: 328
2024-4-7 09:44:08-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 09:44:08-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 09:44:08-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 09:44:08-debug: [Build Memory track]: 查询 Asset Bundle start:196.56MB, end 196.96MB, increase: 407.22KB
2024-4-7 09:44:08-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 09:44:08-debug: // ---- build task 查询 Asset Bundle ---- (125ms)
2024-4-7 09:44:08-debug: run build task 查询 Asset Bundle success in 125 ms√, progress: 5%
2024-4-7 09:44:08-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 09:44:09-debug: // ---- build task 查询 Asset Bundle ---- (5ms)
2024-4-7 09:44:09-debug: run build task 查询 Asset Bundle success in 5 ms√, progress: 10%
2024-4-7 09:44:09-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 09:44:09-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 09:44:09-debug: [Build Memory track]: 查询 Asset Bundle start:196.97MB, end 196.99MB, increase: 16.58KB
2024-4-7 09:44:09-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-7 09:44:09-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-7 09:44:09-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:197.00MB, end 197.02MB, increase: 16.46KB
2024-4-7 09:44:09-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 09:44:09-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 09:44:09-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-7 09:44:09-debug: [Build Memory track]: 填充脚本数据到 settings.json start:197.03MB, end 197.05MB, increase: 16.75KB
2024-4-7 09:44:09-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 09:44:09-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 09:44:09-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-7 09:44:09-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (62ms)
2024-4-7 09:44:09-debug: run build task 整理部分构建选项内数据到 settings.json success in 62 ms√, progress: 15%
2024-4-7 09:44:09-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:197.06MB, end 196.47MB, increase: -611.67KB
2024-4-7 09:57:43-debug: refresh db internal success
2024-4-7 09:57:43-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 09:57:43-debug: refresh db assets success
2024-4-7 09:57:43-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 09:57:43-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 09:57:43-debug: asset-db:refresh-all-database (397ms)
2024-4-7 09:57:43-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-7 09:57:43-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-7 09:57:46-debug: Query all assets info in project
2024-4-7 09:57:46-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 09:57:46-debug:   Number of all scenes: 1
2024-4-7 09:57:46-debug:   Number of all scripts: 3
2024-4-7 09:57:46-debug:   Number of other assets: 328
2024-4-7 09:57:46-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 09:57:46-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 09:57:46-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 09:57:46-debug: // ---- build task 查询 Asset Bundle ---- (106ms)
2024-4-7 09:57:46-debug: run build task 查询 Asset Bundle success in 106 ms√, progress: 5%
2024-4-7 09:57:46-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 09:57:46-debug: [Build Memory track]: 查询 Asset Bundle start:198.52MB, end 198.83MB, increase: 321.30KB
2024-4-7 09:57:46-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 09:57:46-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-7 09:57:46-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-7 09:57:46-debug: [Build Memory track]: 查询 Asset Bundle start:198.84MB, end 198.86MB, increase: 14.91KB
2024-4-7 09:57:46-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 09:57:46-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 09:57:46-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-7 09:57:46-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-7 09:57:46-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 09:57:46-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:198.87MB, end 198.89MB, increase: 17.63KB
2024-4-7 09:57:46-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 09:57:46-debug: run build task 填充脚本数据到 settings.json success in 4 ms√, progress: 13%
2024-4-7 09:57:46-debug: // ---- build task 填充脚本数据到 settings.json ---- (4ms)
2024-4-7 09:57:46-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 09:57:46-debug: [Build Memory track]: 填充脚本数据到 settings.json start:198.90MB, end 198.92MB, increase: 15.54KB
2024-4-7 09:57:46-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 09:57:46-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (19ms)
2024-4-7 09:57:46-debug: run build task 整理部分构建选项内数据到 settings.json success in 19 ms√, progress: 15%
2024-4-7 09:57:46-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:198.93MB, end 199.05MB, increase: 121.34KB
2024-4-7 10:01:29-debug: refresh db internal success
2024-4-7 10:01:29-debug: refresh db assets success
2024-4-7 10:01:29-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:01:29-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:01:29-debug: asset-db:refresh-all-database (272ms)
2024-4-7 10:01:29-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-7 10:01:29-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-7 10:04:22-debug: refresh db internal success
2024-4-7 10:04:22-debug: refresh db assets success
2024-4-7 10:04:22-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:04:22-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:04:22-debug: asset-db:refresh-all-database (127ms)
2024-4-7 10:04:22-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-4-7 10:04:22-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-7 10:08:16-debug: refresh db internal success
2024-4-7 10:08:16-debug: refresh db assets success
2024-4-7 10:08:16-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:08:16-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:08:16-debug: asset-db:refresh-all-database (80ms)
2024-4-7 10:08:19-debug: refresh db internal success
2024-4-7 10:08:19-debug: refresh db assets success
2024-4-7 10:08:19-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:08:19-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:08:19-debug: asset-db:refresh-all-database (210ms)
2024-4-7 10:08:19-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-7 10:08:19-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-4-7 10:09:43-debug: refresh db internal success
2024-4-7 10:09:43-debug: refresh db assets success
2024-4-7 10:09:43-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:09:43-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:09:43-debug: asset-db:refresh-all-database (82ms)
2024-4-7 10:09:43-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-7 10:09:43-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-4-7 10:12:42-debug: refresh db internal success
2024-4-7 10:12:42-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:12:42-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:12:42-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:12:42-debug: refresh db assets success
2024-4-7 10:12:42-debug: asset-db:refresh-all-database (174ms)
2024-4-7 10:12:42-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-7 10:12:42-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-7 10:12:44-debug: Query all assets info in project
2024-4-7 10:12:44-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:12:44-debug:   Number of all scenes: 1
2024-4-7 10:12:44-debug:   Number of all scripts: 3
2024-4-7 10:12:44-debug:   Number of other assets: 328
2024-4-7 10:12:44-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:12:44-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:12:44-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:12:44-debug: // ---- build task 查询 Asset Bundle ---- (31ms)
2024-4-7 10:12:44-debug: run build task 查询 Asset Bundle success in 31 ms√, progress: 5%
2024-4-7 10:12:44-debug: [Build Memory track]: 查询 Asset Bundle start:206.18MB, end 206.38MB, increase: 205.69KB
2024-4-7 10:12:44-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:12:44-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:12:44-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-7 10:12:44-debug: [Build Memory track]: 查询 Asset Bundle start:206.40MB, end 206.41MB, increase: 14.93KB
2024-4-7 10:12:44-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:12:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:12:44-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-7 10:12:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-7 10:12:44-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-7 10:12:44-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:206.43MB, end 206.44MB, increase: 17.01KB
2024-4-7 10:12:44-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:12:44-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:12:44-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-7 10:12:44-debug: [Build Memory track]: 填充脚本数据到 settings.json start:206.46MB, end 206.47MB, increase: 15.30KB
2024-4-7 10:12:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:12:44-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:12:44-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-7 10:12:44-debug: run build task 整理部分构建选项内数据到 settings.json success in 25 ms√, progress: 15%
2024-4-7 10:12:44-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:206.49MB, end 206.60MB, increase: 122.16KB
2024-4-7 10:12:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (25ms)
2024-4-7 10:34:21-debug: refresh db internal success
2024-4-7 10:34:21-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:34:21-debug: refresh db assets success
2024-4-7 10:34:21-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:34:21-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:34:21-debug: asset-db:refresh-all-database (239ms)
2024-4-7 10:34:21-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-7 10:34:21-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-7 10:34:24-debug: Query all assets info in project
2024-4-7 10:34:24-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:34:24-debug:   Number of all scenes: 1
2024-4-7 10:34:24-debug:   Number of all scripts: 3
2024-4-7 10:34:24-debug:   Number of other assets: 328
2024-4-7 10:34:24-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:34:24-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:34:24-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:34:24-debug: // ---- build task 查询 Asset Bundle ---- (36ms)
2024-4-7 10:34:24-debug: [Build Memory track]: 查询 Asset Bundle start:207.57MB, end 207.03MB, increase: -547.40KB
2024-4-7 10:34:24-debug: run build task 查询 Asset Bundle success in 36 ms√, progress: 5%
2024-4-7 10:34:24-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:34:24-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:34:24-debug: // ---- build task 查询 Asset Bundle ---- (1ms)
2024-4-7 10:34:24-debug: [Build Memory track]: 查询 Asset Bundle start:207.05MB, end 207.06MB, increase: 14.93KB
2024-4-7 10:34:24-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:34:24-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:34:24-debug: run build task 查询 Asset Bundle success in 1 ms√, progress: 10%
2024-4-7 10:34:24-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (5ms)
2024-4-7 10:34:24-debug: run build task 整理部分构建选项内数据到 settings.json success in 5 ms√, progress: 12%
2024-4-7 10:34:24-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.08MB, end 207.09MB, increase: 17.66KB
2024-4-7 10:34:24-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:34:24-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:34:24-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-7 10:34:24-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-7 10:34:24-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:34:24-debug: [Build Memory track]: 填充脚本数据到 settings.json start:207.11MB, end 207.12MB, increase: 16.60KB
2024-4-7 10:34:24-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:34:24-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (26ms)
2024-4-7 10:34:24-debug: run build task 整理部分构建选项内数据到 settings.json success in 26 ms√, progress: 15%
2024-4-7 10:34:24-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.14MB, end 207.26MB, increase: 120.96KB
2024-4-7 10:34:56-debug: refresh db internal success
2024-4-7 10:34:56-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:34:56-debug: refresh db assets success
2024-4-7 10:34:56-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:34:56-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:34:56-debug: asset-db:refresh-all-database (283ms)
2024-4-7 10:34:56-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-7 10:34:56-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-7 10:34:58-debug: Query all assets info in project
2024-4-7 10:34:58-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:34:59-debug:   Number of all scenes: 1
2024-4-7 10:34:59-debug:   Number of all scripts: 3
2024-4-7 10:34:59-debug:   Number of other assets: 328
2024-4-7 10:34:59-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:34:59-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:34:59-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:34:59-debug: run build task 查询 Asset Bundle success in 71 ms√, progress: 5%
2024-4-7 10:34:59-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:34:59-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:34:59-debug: [Build Memory track]: 查询 Asset Bundle start:208.92MB, end 209.11MB, increase: 192.82KB
2024-4-7 10:34:59-debug: // ---- build task 查询 Asset Bundle ---- (71ms)
2024-4-7 10:34:59-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-7 10:34:59-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-7 10:34:59-debug: [Build Memory track]: 查询 Asset Bundle start:209.13MB, end 209.14MB, increase: 14.34KB
2024-4-7 10:34:59-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:34:59-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:34:59-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:209.15MB, end 209.17MB, increase: 14.11KB
2024-4-7 10:34:59-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:34:59-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-7 10:34:59-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:34:59-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-7 10:34:59-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-7 10:34:59-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:34:59-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-7 10:34:59-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:34:59-debug: [Build Memory track]: 填充脚本数据到 settings.json start:209.18MB, end 209.20MB, increase: 16.35KB
2024-4-7 10:34:59-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (19ms)
2024-4-7 10:34:59-debug: run build task 整理部分构建选项内数据到 settings.json success in 19 ms√, progress: 15%
2024-4-7 10:34:59-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:209.21MB, end 209.33MB, increase: 121.29KB
2024-4-7 10:36:48-debug: refresh db internal success
2024-4-7 10:36:48-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:36:49-debug: refresh db assets success
2024-4-7 10:36:49-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:36:49-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:36:49-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:36:50-debug: asset-db:refresh-all-database (1067ms)
2024-4-7 10:36:50-debug: asset-db:worker-effect-data-processing (54ms)
2024-4-7 10:36:50-debug: asset-db-hook-engine-extends-afterRefresh (56ms)
2024-4-7 10:36:50-debug: Query all assets info in project
2024-4-7 10:36:50-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:36:50-debug:   Number of all scenes: 1
2024-4-7 10:36:50-debug:   Number of all scripts: 3
2024-4-7 10:36:50-debug:   Number of other assets: 328
2024-4-7 10:36:50-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:36:50-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:36:50-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:36:50-debug: // ---- build task 查询 Asset Bundle ---- (56ms)
2024-4-7 10:36:50-debug: run build task 查询 Asset Bundle success in 56 ms√, progress: 5%
2024-4-7 10:36:50-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:36:50-debug: [Build Memory track]: 查询 Asset Bundle start:196.99MB, end 197.93MB, increase: 960.21KB
2024-4-7 10:36:50-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:36:50-debug: // ---- build task 查询 Asset Bundle ---- (1ms)
2024-4-7 10:36:50-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:36:50-debug: run build task 查询 Asset Bundle success in 1 ms√, progress: 10%
2024-4-7 10:36:50-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:36:50-debug: [Build Memory track]: 查询 Asset Bundle start:197.94MB, end 197.95MB, increase: 14.20KB
2024-4-7 10:36:50-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-7 10:36:50-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-7 10:36:50-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:197.97MB, end 197.98MB, increase: 16.62KB
2024-4-7 10:36:50-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:36:50-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:36:50-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-7 10:36:50-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-7 10:36:50-debug: [Build Memory track]: 填充脚本数据到 settings.json start:198.00MB, end 198.01MB, increase: 16.07KB
2024-4-7 10:36:50-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:36:50-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:36:50-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (19ms)
2024-4-7 10:36:50-debug: run build task 整理部分构建选项内数据到 settings.json success in 19 ms√, progress: 15%
2024-4-7 10:36:50-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:198.03MB, end 198.55MB, increase: 535.37KB
2024-4-7 10:36:54-debug: recompile effect.bin success
2024-4-7 10:37:38-debug: refresh db internal success
2024-4-7 10:37:38-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:37:38-debug: refresh db assets success
2024-4-7 10:37:38-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:37:38-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:37:38-debug: asset-db:refresh-all-database (449ms)
2024-4-7 10:37:38-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-7 10:37:38-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-7 10:37:41-debug: Query all assets info in project
2024-4-7 10:37:41-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:37:41-debug:   Number of all scenes: 1
2024-4-7 10:37:41-debug:   Number of all scripts: 3
2024-4-7 10:37:41-debug:   Number of other assets: 328
2024-4-7 10:37:41-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:37:41-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:37:41-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:37:41-debug: // ---- build task 查询 Asset Bundle ---- (59ms)
2024-4-7 10:37:41-debug: run build task 查询 Asset Bundle success in 59 ms√, progress: 5%
2024-4-7 10:37:41-debug: [Build Memory track]: 查询 Asset Bundle start:193.85MB, end 194.36MB, increase: 523.54KB
2024-4-7 10:37:41-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:37:41-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:37:41-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-7 10:37:41-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-7 10:37:41-debug: [Build Memory track]: 查询 Asset Bundle start:194.37MB, end 194.39MB, increase: 15.60KB
2024-4-7 10:37:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:37:41-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:37:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-7 10:37:41-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-7 10:37:41-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:194.40MB, end 194.42MB, increase: 18.35KB
2024-4-7 10:37:41-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:37:41-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:37:41-debug: // ---- build task 填充脚本数据到 settings.json ---- (4ms)
2024-4-7 10:37:41-debug: [Build Memory track]: 填充脚本数据到 settings.json start:194.43MB, end 194.45MB, increase: 19.36KB
2024-4-7 10:37:41-debug: run build task 填充脚本数据到 settings.json success in 4 ms√, progress: 13%
2024-4-7 10:37:41-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:37:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:37:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (16ms)
2024-4-7 10:37:41-debug: run build task 整理部分构建选项内数据到 settings.json success in 16 ms√, progress: 15%
2024-4-7 10:37:41-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:194.47MB, end 194.59MB, increase: 121.37KB
2024-4-7 10:38:10-debug: refresh db internal success
2024-4-7 10:38:10-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:38:11-debug: refresh db assets success
2024-4-7 10:38:11-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:38:11-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:38:11-debug: asset-db:refresh-all-database (898ms)
2024-4-7 10:38:11-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-7 10:38:11-debug: asset-db-hook-engine-extends-afterRefresh (10ms)
2024-4-7 10:38:11-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:38:11-debug: Query all assets info in project
2024-4-7 10:38:11-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:38:11-debug:   Number of all scenes: 1
2024-4-7 10:38:11-debug:   Number of all scripts: 3
2024-4-7 10:38:11-debug:   Number of other assets: 328
2024-4-7 10:38:11-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:38:11-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:38:11-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:38:12-debug: // ---- build task 查询 Asset Bundle ---- (66ms)
2024-4-7 10:38:12-debug: run build task 查询 Asset Bundle success in 66 ms√, progress: 5%
2024-4-7 10:38:12-debug: [Build Memory track]: 查询 Asset Bundle start:201.33MB, end 206.19MB, increase: 4.86MB
2024-4-7 10:38:12-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:38:12-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:38:12-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-7 10:38:12-debug: [Build Memory track]: 查询 Asset Bundle start:206.21MB, end 206.22MB, increase: 13.20KB
2024-4-7 10:38:12-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-7 10:38:12-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:38:12-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:38:12-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-7 10:38:12-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-7 10:38:12-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:206.23MB, end 206.25MB, increase: 19.25KB
2024-4-7 10:38:12-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:38:12-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:38:12-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-7 10:38:12-debug: [Build Memory track]: 填充脚本数据到 settings.json start:206.27MB, end 209.55MB, increase: 3.28MB
2024-4-7 10:38:12-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:38:12-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-7 10:38:12-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:38:12-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (16ms)
2024-4-7 10:38:12-debug: run build task 整理部分构建选项内数据到 settings.json success in 16 ms√, progress: 15%
2024-4-7 10:38:12-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:209.56MB, end 209.69MB, increase: 128.63KB
2024-4-7 10:38:13-debug: recompile effect.bin success
2024-4-7 10:38:35-debug: refresh db internal success
2024-4-7 10:38:35-debug: refresh db assets success
2024-4-7 10:38:35-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:38:35-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:38:35-debug: asset-db:refresh-all-database (324ms)
2024-4-7 10:38:35-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-7 10:38:35-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-7 10:39:21-debug: refresh db internal success
2024-4-7 10:39:21-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:39:21-debug: refresh db assets success
2024-4-7 10:39:21-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:39:21-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:39:21-debug: asset-db:refresh-all-database (952ms)
2024-4-7 10:39:21-debug: asset-db:worker-effect-data-processing (6ms)
2024-4-7 10:39:21-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:39:21-debug: asset-db-hook-engine-extends-afterRefresh (9ms)
2024-4-7 10:39:22-debug: Query all assets info in project
2024-4-7 10:39:22-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:39:22-debug:   Number of all scenes: 1
2024-4-7 10:39:22-debug:   Number of all scripts: 3
2024-4-7 10:39:22-debug:   Number of other assets: 328
2024-4-7 10:39:23-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:39:23-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:39:23-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:39:23-debug: // ---- build task 查询 Asset Bundle ---- (56ms)
2024-4-7 10:39:23-debug: [Build Memory track]: 查询 Asset Bundle start:217.56MB, end 220.17MB, increase: 2.61MB
2024-4-7 10:39:23-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:39:23-debug: run build task 查询 Asset Bundle success in 56 ms√, progress: 5%
2024-4-7 10:39:23-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:39:23-debug: // ---- build task 查询 Asset Bundle ---- (7ms)
2024-4-7 10:39:23-debug: run build task 查询 Asset Bundle success in 7 ms√, progress: 10%
2024-4-7 10:39:23-debug: [Build Memory track]: 查询 Asset Bundle start:220.18MB, end 220.20MB, increase: 15.92KB
2024-4-7 10:39:23-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:39:23-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:39:23-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-7 10:39:23-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-7 10:39:23-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:220.22MB, end 220.39MB, increase: 175.37KB
2024-4-7 10:39:23-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:39:23-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:39:23-debug: // ---- build task 填充脚本数据到 settings.json ---- (5ms)
2024-4-7 10:39:23-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:39:23-debug: [Build Memory track]: 填充脚本数据到 settings.json start:220.40MB, end 220.42MB, increase: 16.21KB
2024-4-7 10:39:23-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:39:23-debug: run build task 填充脚本数据到 settings.json success in 5 ms√, progress: 13%
2024-4-7 10:39:23-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (15ms)
2024-4-7 10:39:23-debug: run build task 整理部分构建选项内数据到 settings.json success in 15 ms√, progress: 15%
2024-4-7 10:39:23-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:220.43MB, end 220.70MB, increase: 276.52KB
2024-4-7 10:39:24-debug: recompile effect.bin success
2024-4-7 10:40:43-debug: refresh db internal success
2024-4-7 10:40:43-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:40:43-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:40:44-debug: refresh db assets success
2024-4-7 10:40:44-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:40:44-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:40:44-debug: asset-db:refresh-all-database (1440ms)
2024-4-7 10:40:44-debug: asset-db:worker-effect-data-processing (13ms)
2024-4-7 10:40:44-debug: asset-db-hook-engine-extends-afterRefresh (16ms)
2024-4-7 10:40:44-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:40:46-debug: Query all assets info in project
2024-4-7 10:40:46-debug:   Number of all scenes: 1
2024-4-7 10:40:46-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:40:46-debug:   Number of all scripts: 3
2024-4-7 10:40:46-debug:   Number of other assets: 328
2024-4-7 10:40:46-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:40:46-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:40:46-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:40:46-debug: run build task 查询 Asset Bundle success in 60 ms√, progress: 5%
2024-4-7 10:40:46-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:40:47-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:40:46-debug: // ---- build task 查询 Asset Bundle ---- (60ms)
2024-4-7 10:40:46-debug: [Build Memory track]: 查询 Asset Bundle start:204.51MB, end 208.23MB, increase: 3.72MB
2024-4-7 10:40:47-debug: run build task 查询 Asset Bundle success in 6 ms√, progress: 10%
2024-4-7 10:40:47-debug: // ---- build task 查询 Asset Bundle ---- (6ms)
2024-4-7 10:40:47-debug: [Build Memory track]: 查询 Asset Bundle start:208.25MB, end 210.14MB, increase: 1.90MB
2024-4-7 10:40:47-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:40:47-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:40:47-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-7 10:40:47-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-7 10:40:47-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:40:47-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:40:47-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.16MB, end 210.18MB, increase: 17.47KB
2024-4-7 10:40:47-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-7 10:40:47-debug: [Build Memory track]: 填充脚本数据到 settings.json start:210.19MB, end 210.21MB, increase: 17.81KB
2024-4-7 10:40:47-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:40:47-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:40:47-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-7 10:40:47-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (15ms)
2024-4-7 10:40:47-debug: run build task 整理部分构建选项内数据到 settings.json success in 15 ms√, progress: 15%
2024-4-7 10:40:47-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.22MB, end 210.35MB, increase: 125.15KB
2024-4-7 10:40:47-debug: recompile effect.bin success
2024-4-7 10:41:30-debug: refresh db internal success
2024-4-7 10:41:30-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:41:30-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:41:30-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:41:30-debug: refresh db assets success
2024-4-7 10:41:30-debug: asset-db:refresh-all-database (653ms)
2024-4-7 10:41:30-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-7 10:41:30-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-7 10:41:33-debug: Query all assets info in project
2024-4-7 10:41:33-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:41:34-debug:   Number of all scenes: 1
2024-4-7 10:41:34-debug:   Number of other assets: 328
2024-4-7 10:41:34-debug:   Number of all scripts: 3
2024-4-7 10:41:34-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:41:34-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:41:34-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:41:34-debug: // ---- build task 查询 Asset Bundle ---- (57ms)
2024-4-7 10:41:34-debug: run build task 查询 Asset Bundle success in 57 ms√, progress: 5%
2024-4-7 10:41:34-debug: [Build Memory track]: 查询 Asset Bundle start:205.89MB, end 207.00MB, increase: 1.10MB
2024-4-7 10:41:34-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:41:34-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:41:34-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-7 10:41:34-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-7 10:41:34-debug: [Build Memory track]: 查询 Asset Bundle start:207.01MB, end 207.04MB, increase: 25.97KB
2024-4-7 10:41:34-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:41:34-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:41:34-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.05MB, end 207.07MB, increase: 17.20KB
2024-4-7 10:41:34-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-7 10:41:34-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-7 10:41:34-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:41:34-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:41:34-debug: // ---- build task 填充脚本数据到 settings.json ---- (9ms)
2024-4-7 10:41:34-debug: run build task 填充脚本数据到 settings.json success in 9 ms√, progress: 13%
2024-4-7 10:41:34-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:41:34-debug: [Build Memory track]: 填充脚本数据到 settings.json start:207.08MB, end 207.10MB, increase: 17.16KB
2024-4-7 10:41:34-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:41:34-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (19ms)
2024-4-7 10:41:34-debug: run build task 整理部分构建选项内数据到 settings.json success in 19 ms√, progress: 15%
2024-4-7 10:41:34-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.11MB, end 207.23MB, increase: 122.71KB
2024-4-7 10:42:51-debug: refresh db internal success
2024-4-7 10:42:51-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:42:51-debug: refresh db assets success
2024-4-7 10:42:51-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:42:51-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:42:51-debug: asset-db:refresh-all-database (427ms)
2024-4-7 10:42:51-debug: asset-db-hook-engine-extends-afterRefresh (9ms)
2024-4-7 10:42:51-debug: asset-db:worker-effect-data-processing (6ms)
2024-4-7 10:42:55-debug: Query all assets info in project
2024-4-7 10:42:55-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:42:55-debug:   Number of all scenes: 1
2024-4-7 10:42:55-debug:   Number of all scripts: 3
2024-4-7 10:42:55-debug:   Number of other assets: 328
2024-4-7 10:42:55-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:42:55-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:42:55-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:42:55-debug: // ---- build task 查询 Asset Bundle ---- (57ms)
2024-4-7 10:42:55-debug: run build task 查询 Asset Bundle success in 57 ms√, progress: 5%
2024-4-7 10:42:55-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:42:55-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:42:55-debug: [Build Memory track]: 查询 Asset Bundle start:208.82MB, end 209.03MB, increase: 218.38KB
2024-4-7 10:42:55-debug: // ---- build task 查询 Asset Bundle ---- (1ms)
2024-4-7 10:42:55-debug: run build task 查询 Asset Bundle success in 1 ms√, progress: 10%
2024-4-7 10:42:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:42:55-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:42:55-debug: [Build Memory track]: 查询 Asset Bundle start:209.04MB, end 209.06MB, increase: 14.91KB
2024-4-7 10:42:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-7 10:42:55-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-7 10:42:55-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:209.07MB, end 209.09MB, increase: 17.46KB
2024-4-7 10:42:55-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:42:55-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:42:55-debug: // ---- build task 填充脚本数据到 settings.json ---- (13ms)
2024-4-7 10:42:55-debug: [Build Memory track]: 填充脚本数据到 settings.json start:209.11MB, end 209.12MB, increase: 16.89KB
2024-4-7 10:42:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:42:55-debug: run build task 填充脚本数据到 settings.json success in 13 ms√, progress: 13%
2024-4-7 10:42:55-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:42:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (19ms)
2024-4-7 10:42:55-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:209.14MB, end 209.26MB, increase: 120.41KB
2024-4-7 10:42:55-debug: run build task 整理部分构建选项内数据到 settings.json success in 19 ms√, progress: 15%
2024-4-7 10:43:50-debug: refresh db internal success
2024-4-7 10:43:50-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:43:50-debug: refresh db assets success
2024-4-7 10:43:50-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:43:50-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:43:50-debug: asset-db:refresh-all-database (369ms)
2024-4-7 10:43:50-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-7 10:43:50-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-7 10:43:53-debug: Query all assets info in project
2024-4-7 10:43:53-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:43:53-debug:   Number of all scenes: 1
2024-4-7 10:43:53-debug:   Number of all scripts: 3
2024-4-7 10:43:53-debug:   Number of other assets: 328
2024-4-7 10:43:53-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:43:53-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:43:53-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:43:53-debug: run build task 查询 Asset Bundle success in 91 ms√, progress: 5%
2024-4-7 10:43:53-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:43:53-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:43:53-debug: // ---- build task 查询 Asset Bundle ---- (91ms)
2024-4-7 10:43:53-debug: [Build Memory track]: 查询 Asset Bundle start:211.04MB, end 209.41MB, increase: -1659.92KB
2024-4-7 10:43:53-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-7 10:43:53-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-7 10:43:53-debug: [Build Memory track]: 查询 Asset Bundle start:209.43MB, end 209.44MB, increase: 14.33KB
2024-4-7 10:43:53-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:43:53-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:43:53-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-7 10:43:53-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-7 10:43:53-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:43:53-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:43:53-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:209.46MB, end 209.48MB, increase: 17.28KB
2024-4-7 10:43:53-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-7 10:43:53-debug: [Build Memory track]: 填充脚本数据到 settings.json start:209.49MB, end 209.51MB, increase: 17.50KB
2024-4-7 10:43:53-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:43:53-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:43:53-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-7 10:43:53-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (13ms)
2024-4-7 10:43:53-debug: run build task 整理部分构建选项内数据到 settings.json success in 13 ms√, progress: 15%
2024-4-7 10:43:53-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:209.52MB, end 209.64MB, increase: 122.43KB
2024-4-7 10:44:30-debug: refresh db internal success
2024-4-7 10:44:30-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:44:30-debug: refresh db assets success
2024-4-7 10:44:30-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:44:30-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:44:30-debug: asset-db:refresh-all-database (370ms)
2024-4-7 10:44:30-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-7 10:44:30-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-7 10:44:33-debug: Query all assets info in project
2024-4-7 10:44:33-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:44:33-debug:   Number of all scenes: 1
2024-4-7 10:44:33-debug:   Number of other assets: 328
2024-4-7 10:44:33-debug:   Number of all scripts: 3
2024-4-7 10:44:33-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:44:33-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:44:33-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:44:33-debug: // ---- build task 查询 Asset Bundle ---- (70ms)
2024-4-7 10:44:33-debug: run build task 查询 Asset Bundle success in 70 ms√, progress: 5%
2024-4-7 10:44:33-debug: [Build Memory track]: 查询 Asset Bundle start:211.58MB, end 211.70MB, increase: 117.23KB
2024-4-7 10:44:33-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:44:33-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:44:33-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-7 10:44:33-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-7 10:44:33-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:44:33-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:44:33-debug: [Build Memory track]: 查询 Asset Bundle start:211.71MB, end 211.73MB, increase: 14.68KB
2024-4-7 10:44:33-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (8ms)
2024-4-7 10:44:33-debug: run build task 整理部分构建选项内数据到 settings.json success in 8 ms√, progress: 12%
2024-4-7 10:44:33-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.74MB, end 211.77MB, increase: 31.47KB
2024-4-7 10:44:33-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:44:33-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:44:33-debug: // ---- build task 填充脚本数据到 settings.json ---- (7ms)
2024-4-7 10:44:33-debug: [Build Memory track]: 填充脚本数据到 settings.json start:211.79MB, end 211.80MB, increase: 17.15KB
2024-4-7 10:44:33-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:44:33-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:44:33-debug: run build task 填充脚本数据到 settings.json success in 7 ms√, progress: 13%
2024-4-7 10:44:33-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (17ms)
2024-4-7 10:44:33-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.82MB, end 211.94MB, increase: 123.15KB
2024-4-7 10:44:33-debug: run build task 整理部分构建选项内数据到 settings.json success in 17 ms√, progress: 15%
2024-4-7 10:45:07-debug: refresh db internal success
2024-4-7 10:45:07-debug: refresh db assets success
2024-4-7 10:45:07-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:45:07-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:45:07-debug: asset-db:refresh-all-database (195ms)
2024-4-7 10:45:07-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-7 10:45:07-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-7 10:51:17-debug: refresh db internal success
2024-4-7 10:51:17-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:51:17-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:51:18-debug: refresh db assets success
2024-4-7 10:51:18-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:51:18-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:51:18-debug: asset-db:refresh-all-database (1221ms)
2024-4-7 10:51:18-debug: asset-db:worker-effect-data-processing (7ms)
2024-4-7 10:51:18-debug: asset-db-hook-engine-extends-afterRefresh (15ms)
2024-4-7 10:51:18-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:51:19-debug: Query all assets info in project
2024-4-7 10:51:19-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:51:19-debug:   Number of all scenes: 1
2024-4-7 10:51:19-debug:   Number of all scripts: 3
2024-4-7 10:51:19-debug:   Number of other assets: 328
2024-4-7 10:51:19-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:51:19-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:51:19-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:51:19-debug: // ---- build task 查询 Asset Bundle ---- (78ms)
2024-4-7 10:51:19-debug: run build task 查询 Asset Bundle success in 78 ms√, progress: 5%
2024-4-7 10:51:19-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:51:19-debug: [Build Memory track]: 查询 Asset Bundle start:203.11MB, end 211.47MB, increase: 8.36MB
2024-4-7 10:51:19-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:51:19-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-7 10:51:19-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-7 10:51:19-debug: [Build Memory track]: 查询 Asset Bundle start:211.49MB, end 211.51MB, increase: 16.30KB
2024-4-7 10:51:19-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:51:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:51:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (8ms)
2024-4-7 10:51:19-debug: run build task 整理部分构建选项内数据到 settings.json success in 8 ms√, progress: 12%
2024-4-7 10:51:19-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.52MB, end 211.54MB, increase: 18.46KB
2024-4-7 10:51:19-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:51:19-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:51:19-debug: // ---- build task 填充脚本数据到 settings.json ---- (14ms)
2024-4-7 10:51:19-debug: run build task 填充脚本数据到 settings.json success in 14 ms√, progress: 13%
2024-4-7 10:51:19-debug: [Build Memory track]: 填充脚本数据到 settings.json start:211.55MB, end 214.98MB, increase: 3.42MB
2024-4-7 10:51:19-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:51:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:51:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (103ms)
2024-4-7 10:51:19-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:214.99MB, end 205.60MB, increase: -9615.41KB
2024-4-7 10:51:19-debug: run build task 整理部分构建选项内数据到 settings.json success in 103 ms√, progress: 15%
2024-4-7 10:51:20-debug: recompile effect.bin success
2024-4-7 10:51:58-debug: refresh db internal success
2024-4-7 10:51:58-debug: refresh db assets success
2024-4-7 10:51:58-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:51:58-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:51:58-debug: asset-db:refresh-all-database (194ms)
2024-4-7 10:51:58-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-7 10:51:58-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-7 10:53:15-debug: refresh db internal success
2024-4-7 10:53:15-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:53:15-debug: refresh db assets success
2024-4-7 10:53:15-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:53:15-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:53:15-debug: asset-db:refresh-all-database (587ms)
2024-4-7 10:53:15-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:53:15-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-7 10:53:15-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-7 10:53:16-debug: recompile effect.bin success
2024-4-7 10:53:17-debug: Query all assets info in project
2024-4-7 10:53:17-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:53:18-debug:   Number of all scenes: 1
2024-4-7 10:53:18-debug:   Number of all scripts: 3
2024-4-7 10:53:18-debug:   Number of other assets: 328
2024-4-7 10:53:18-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:53:18-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:53:18-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:53:18-debug: // ---- build task 查询 Asset Bundle ---- (84ms)
2024-4-7 10:53:18-debug: run build task 查询 Asset Bundle success in 84 ms√, progress: 5%
2024-4-7 10:53:18-debug: [Build Memory track]: 查询 Asset Bundle start:208.41MB, end 210.27MB, increase: 1.87MB
2024-4-7 10:53:18-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:53:18-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:53:18-debug: // ---- build task 查询 Asset Bundle ---- (40ms)
2024-4-7 10:53:18-debug: run build task 查询 Asset Bundle success in 40 ms√, progress: 10%
2024-4-7 10:53:18-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:53:18-debug: [Build Memory track]: 查询 Asset Bundle start:210.29MB, end 210.30MB, increase: 17.16KB
2024-4-7 10:53:18-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:53:18-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (5ms)
2024-4-7 10:53:18-debug: run build task 整理部分构建选项内数据到 settings.json success in 5 ms√, progress: 12%
2024-4-7 10:53:18-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.32MB, end 210.33MB, increase: 16.84KB
2024-4-7 10:53:18-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:53:18-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:53:18-debug: // ---- build task 填充脚本数据到 settings.json ---- (13ms)
2024-4-7 10:53:18-debug: run build task 填充脚本数据到 settings.json success in 13 ms√, progress: 13%
2024-4-7 10:53:18-debug: [Build Memory track]: 填充脚本数据到 settings.json start:210.35MB, end 210.37MB, increase: 17.60KB
2024-4-7 10:53:18-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:53:18-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:53:18-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (21ms)
2024-4-7 10:53:18-debug: run build task 整理部分构建选项内数据到 settings.json success in 21 ms√, progress: 15%
2024-4-7 10:53:18-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.38MB, end 210.50MB, increase: 124.48KB
2024-4-7 10:53:38-debug: refresh db internal success
2024-4-7 10:53:38-debug: refresh db assets success
2024-4-7 10:53:38-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:53:38-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:53:38-debug: asset-db:refresh-all-database (302ms)
2024-4-7 10:53:38-debug: asset-db:worker-effect-data-processing (2ms)
2024-4-7 10:53:38-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-7 10:54:52-debug: refresh db internal success
2024-4-7 10:54:52-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:54:52-debug: refresh db assets success
2024-4-7 10:54:52-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 10:54:52-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 10:54:52-debug: asset-db:refresh-all-database (818ms)
2024-4-7 10:54:52-debug: asset-db:worker-effect-data-processing (8ms)
2024-4-7 10:54:52-debug: asset-db-hook-engine-extends-afterRefresh (10ms)
2024-4-7 10:54:52-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 10:54:53-debug: Query all assets info in project
2024-4-7 10:54:53-debug:   Number of all scenes: 1
2024-4-7 10:54:53-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 10:54:53-debug:   Number of other assets: 328
2024-4-7 10:54:53-debug:   Number of all scripts: 3
2024-4-7 10:54:53-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 10:54:53-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:54:54-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 10:54:54-debug: // ---- build task 查询 Asset Bundle ---- (281ms)
2024-4-7 10:54:54-debug: run build task 查询 Asset Bundle success in 281 ms√, progress: 5%
2024-4-7 10:54:54-debug: [Build Memory track]: 查询 Asset Bundle start:225.25MB, end 198.68MB, increase: -27207.99KB
2024-4-7 10:54:54-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 10:54:54-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 10:54:54-debug: // ---- build task 查询 Asset Bundle ---- (1ms)
2024-4-7 10:54:54-debug: run build task 查询 Asset Bundle success in 1 ms√, progress: 10%
2024-4-7 10:54:54-debug: [Build Memory track]: 查询 Asset Bundle start:198.69MB, end 198.71MB, increase: 15.84KB
2024-4-7 10:54:54-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 10:54:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:54:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (1ms)
2024-4-7 10:54:54-debug: run build task 整理部分构建选项内数据到 settings.json success in 1 ms√, progress: 12%
2024-4-7 10:54:54-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:198.72MB, end 198.74MB, increase: 18.31KB
2024-4-7 10:54:54-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 10:54:54-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 10:54:54-debug: // ---- build task 填充脚本数据到 settings.json ---- (1ms)
2024-4-7 10:54:54-debug: run build task 填充脚本数据到 settings.json success in 1 ms√, progress: 13%
2024-4-7 10:54:54-debug: [Build Memory track]: 填充脚本数据到 settings.json start:198.75MB, end 200.48MB, increase: 1.72MB
2024-4-7 10:54:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 10:54:54-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 10:54:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (16ms)
2024-4-7 10:54:54-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:200.49MB, end 200.61MB, increase: 123.01KB
2024-4-7 10:54:54-debug: run build task 整理部分构建选项内数据到 settings.json success in 16 ms√, progress: 15%
2024-4-7 10:54:55-debug: recompile effect.bin success
2024-4-7 11:05:53-debug: refresh db internal success
2024-4-7 11:05:53-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:05:54-debug: refresh db assets success
2024-4-7 11:05:54-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:05:54-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:05:54-debug: asset-db:refresh-all-database (1001ms)
2024-4-7 11:05:54-debug: asset-db:worker-effect-data-processing (23ms)
2024-4-7 11:05:54-debug: asset-db-hook-engine-extends-afterRefresh (24ms)
2024-4-7 11:05:54-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:05:57-debug: Query all assets info in project
2024-4-7 11:05:57-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 11:05:57-debug:   Number of all scenes: 1
2024-4-7 11:05:57-debug:   Number of all scripts: 3
2024-4-7 11:05:57-debug:   Number of other assets: 328
2024-4-7 11:05:57-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 11:05:57-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:05:57-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 11:05:57-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 11:05:57-debug: // ---- build task 查询 Asset Bundle ---- (89ms)
2024-4-7 11:05:57-debug: run build task 查询 Asset Bundle success in 89 ms√, progress: 5%
2024-4-7 11:05:57-debug: [Build Memory track]: 查询 Asset Bundle start:203.71MB, end 205.92MB, increase: 2.21MB
2024-4-7 11:05:57-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:05:57-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-7 11:05:57-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-7 11:05:57-debug: [Build Memory track]: 查询 Asset Bundle start:205.93MB, end 205.95MB, increase: 14.80KB
2024-4-7 11:05:57-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 11:05:57-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:05:57-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-7 11:05:57-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-7 11:05:57-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:205.96MB, end 205.98MB, increase: 17.58KB
2024-4-7 11:05:57-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 11:05:57-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 11:05:57-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-7 11:05:57-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-7 11:05:57-debug: [Build Memory track]: 填充脚本数据到 settings.json start:206.00MB, end 206.07MB, increase: 75.77KB
2024-4-7 11:05:57-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 11:05:57-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:05:57-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (25ms)
2024-4-7 11:05:57-debug: run build task 整理部分构建选项内数据到 settings.json success in 25 ms√, progress: 15%
2024-4-7 11:05:57-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:206.08MB, end 206.21MB, increase: 128.34KB
2024-4-7 11:05:57-debug: recompile effect.bin success
2024-4-7 11:06:09-debug: refresh db internal success
2024-4-7 11:06:09-debug: refresh db assets success
2024-4-7 11:06:09-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:06:09-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:06:09-debug: asset-db:refresh-all-database (284ms)
2024-4-7 11:06:09-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-7 11:06:09-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-7 11:06:11-debug: refresh db internal success
2024-4-7 11:06:11-debug: refresh db assets success
2024-4-7 11:06:11-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:06:11-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:06:11-debug: asset-db:refresh-all-database (269ms)
2024-4-7 11:06:11-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-7 11:06:11-debug: asset-db-hook-engine-extends-afterRefresh (7ms)
2024-4-7 11:06:28-debug: refresh db internal success
2024-4-7 11:06:28-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:06:29-debug: refresh db assets success
2024-4-7 11:06:29-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:06:29-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:06:29-debug: asset-db:refresh-all-database (852ms)
2024-4-7 11:06:29-debug: asset-db:worker-effect-data-processing (10ms)
2024-4-7 11:06:29-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:06:29-debug: asset-db-hook-engine-extends-afterRefresh (11ms)
2024-4-7 11:06:31-debug: recompile effect.bin success
2024-4-7 11:06:34-debug: Query all assets info in project
2024-4-7 11:06:34-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 11:06:35-debug:   Number of all scenes: 1
2024-4-7 11:06:35-debug:   Number of all scripts: 3
2024-4-7 11:06:35-debug:   Number of other assets: 328
2024-4-7 11:06:35-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 11:06:35-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:06:35-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 11:06:35-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 11:06:35-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:06:35-debug: // ---- build task 查询 Asset Bundle ---- (35ms)
2024-4-7 11:06:35-debug: run build task 查询 Asset Bundle success in 35 ms√, progress: 5%
2024-4-7 11:06:35-debug: [Build Memory track]: 查询 Asset Bundle start:208.01MB, end 209.89MB, increase: 1.88MB
2024-4-7 11:06:35-debug: // ---- build task 查询 Asset Bundle ---- (9ms)
2024-4-7 11:06:35-debug: run build task 查询 Asset Bundle success in 9 ms√, progress: 10%
2024-4-7 11:06:35-debug: [Build Memory track]: 查询 Asset Bundle start:209.91MB, end 209.92MB, increase: 14.34KB
2024-4-7 11:06:35-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 11:06:35-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:06:35-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-7 11:06:35-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-7 11:06:35-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:209.94MB, end 209.95MB, increase: 17.60KB
2024-4-7 11:06:35-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 11:06:35-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 11:06:35-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-7 11:06:35-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-7 11:06:35-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 11:06:35-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:06:35-debug: [Build Memory track]: 填充脚本数据到 settings.json start:209.97MB, end 209.99MB, increase: 17.64KB
2024-4-7 11:06:35-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (18ms)
2024-4-7 11:06:35-debug: run build task 整理部分构建选项内数据到 settings.json success in 18 ms√, progress: 15%
2024-4-7 11:06:35-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:210.00MB, end 210.12MB, increase: 126.55KB
2024-4-7 11:07:10-debug: refresh db internal success
2024-4-7 11:07:10-debug: refresh db assets success
2024-4-7 11:07:10-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:07:10-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:07:10-debug: asset-db:refresh-all-database (160ms)
2024-4-7 11:07:10-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-7 11:07:10-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-4-7 11:12:01-debug: refresh db internal success
2024-4-7 11:12:01-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:12:01-debug: refresh db assets success
2024-4-7 11:12:01-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:12:01-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:12:01-debug: asset-db:refresh-all-database (204ms)
2024-4-7 11:12:01-debug: asset-db:worker-effect-data-processing (3ms)
2024-4-7 11:12:01-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-7 11:12:03-debug: Query all assets info in project
2024-4-7 11:12:03-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 11:12:03-debug:   Number of all scenes: 1
2024-4-7 11:12:03-debug:   Number of all scripts: 3
2024-4-7 11:12:03-debug:   Number of other assets: 328
2024-4-7 11:12:03-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 11:12:03-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:12:03-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 11:12:03-debug: // ---- build task 查询 Asset Bundle ---- (47ms)
2024-4-7 11:12:03-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 11:12:03-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:12:03-debug: [Build Memory track]: 查询 Asset Bundle start:209.95MB, end 208.36MB, increase: -1627.53KB
2024-4-7 11:12:03-debug: run build task 查询 Asset Bundle success in 47 ms√, progress: 5%
2024-4-7 11:12:03-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-4-7 11:12:03-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 10%
2024-4-7 11:12:03-debug: [Build Memory track]: 查询 Asset Bundle start:208.37MB, end 208.39MB, increase: 14.64KB
2024-4-7 11:12:03-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 11:12:03-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:12:03-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-7 11:12:03-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-7 11:12:03-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 11:12:03-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 11:12:03-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:208.40MB, end 208.42MB, increase: 17.44KB
2024-4-7 11:12:03-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-7 11:12:03-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-7 11:12:03-debug: [Build Memory track]: 填充脚本数据到 settings.json start:208.44MB, end 208.45MB, increase: 17.14KB
2024-4-7 11:12:03-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 11:12:03-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:12:03-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (12ms)
2024-4-7 11:12:03-debug: run build task 整理部分构建选项内数据到 settings.json success in 12 ms√, progress: 15%
2024-4-7 11:12:03-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:208.47MB, end 208.60MB, increase: 135.29KB
2024-4-7 11:12:04-debug: refresh db internal success
2024-4-7 11:12:04-debug: refresh db assets success
2024-4-7 11:12:04-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:12:04-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:12:05-debug: asset-db:refresh-all-database (328ms)
2024-4-7 11:12:05-debug: asset-db:worker-effect-data-processing (51ms)
2024-4-7 11:12:05-debug: asset-db-hook-engine-extends-afterRefresh (53ms)
2024-4-7 11:12:05-debug: refresh db internal success
2024-4-7 11:12:05-debug: refresh db assets success
2024-4-7 11:12:05-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:12:05-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:12:05-debug: asset-db:refresh-all-database (354ms)
2024-4-7 11:12:05-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-7 11:12:05-debug: asset-db-hook-engine-extends-afterRefresh (7ms)
2024-4-7 11:13:50-debug: refresh db internal success
2024-4-7 11:13:50-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\src\Draw.tsbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:13:50-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:13:51-debug: Query all assets info in project
2024-4-7 11:13:51-debug: refresh db assets success
2024-4-7 11:13:51-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:13:51-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:13:51-debug: asset-db:refresh-all-database (1811ms)
2024-4-7 11:13:51-debug: asset-db:worker-effect-data-processing (16ms)
2024-4-7 11:13:51-debug: asset-db-hook-engine-extends-afterRefresh (18ms)
2024-4-7 11:13:51-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:13:52-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 11:13:52-debug:   Number of all scenes: 1
2024-4-7 11:13:52-debug:   Number of all scripts: 3
2024-4-7 11:13:52-debug:   Number of other assets: 328
2024-4-7 11:13:52-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 11:13:52-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:13:52-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 11:13:52-debug: // ---- build task 查询 Asset Bundle ---- (46ms)
2024-4-7 11:13:52-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 11:13:52-debug: run build task 查询 Asset Bundle success in 46 ms√, progress: 5%
2024-4-7 11:13:52-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:13:52-debug: [Build Memory track]: 查询 Asset Bundle start:214.93MB, end 213.50MB, increase: -1462.23KB
2024-4-7 11:13:52-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-4-7 11:13:52-debug: [Build Memory track]: 查询 Asset Bundle start:213.52MB, end 213.53MB, increase: 14.63KB
2024-4-7 11:13:52-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-4-7 11:13:52-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 11:13:52-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:13:52-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (5ms)
2024-4-7 11:13:52-debug: run build task 整理部分构建选项内数据到 settings.json success in 5 ms√, progress: 12%
2024-4-7 11:13:52-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 11:13:52-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 11:13:52-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:213.55MB, end 213.57MB, increase: 17.58KB
2024-4-7 11:13:52-debug: [Build Memory track]: 填充脚本数据到 settings.json start:213.58MB, end 213.79MB, increase: 219.29KB
2024-4-7 11:13:52-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-7 11:13:52-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 11:13:52-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:13:52-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-7 11:13:52-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (18ms)
2024-4-7 11:13:52-debug: run build task 整理部分构建选项内数据到 settings.json success in 18 ms√, progress: 15%
2024-4-7 11:13:52-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:213.81MB, end 217.15MB, increase: 3.35MB
2024-4-7 11:13:54-debug: recompile effect.bin success
2024-4-7 11:15:20-debug: Query all assets info in project
2024-4-7 11:15:20-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 11:15:20-debug:   Number of all scenes: 1
2024-4-7 11:15:20-debug:   Number of all scripts: 3
2024-4-7 11:15:20-debug:   Number of other assets: 328
2024-4-7 11:15:20-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 11:15:20-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:15:20-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 11:15:20-debug: // ---- build task 查询 Asset Bundle ---- (39ms)
2024-4-7 11:15:20-debug: run build task 查询 Asset Bundle success in 39 ms√, progress: 5%
2024-4-7 11:15:20-debug: [Build Memory track]: 查询 Asset Bundle start:207.21MB, end 207.62MB, increase: 414.93KB
2024-4-7 11:15:20-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:15:20-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 11:15:20-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-4-7 11:15:20-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 10%
2024-4-7 11:15:20-debug: [Build Memory track]: 查询 Asset Bundle start:207.64MB, end 207.65MB, increase: 15.75KB
2024-4-7 11:15:20-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 11:15:20-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:15:20-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-7 11:15:20-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-7 11:15:20-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.67MB, end 207.68MB, increase: 18.15KB
2024-4-7 11:15:20-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 11:15:20-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 11:15:20-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-7 11:15:20-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-7 11:15:20-debug: [Build Memory track]: 填充脚本数据到 settings.json start:207.70MB, end 207.72MB, increase: 16.53KB
2024-4-7 11:15:20-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 11:15:20-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:15:21-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (28ms)
2024-4-7 11:15:21-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.73MB, end 207.85MB, increase: 124.01KB
2024-4-7 11:15:21-debug: run build task 整理部分构建选项内数据到 settings.json success in 28 ms√, progress: 15%
2024-4-7 11:54:16-debug: refresh db internal success
2024-4-7 11:54:16-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:54:17-debug: refresh db assets success
2024-4-7 11:54:17-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:54:17-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:54:17-debug: asset-db:refresh-all-database (994ms)
2024-4-7 11:54:17-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:54:17-debug: asset-db:worker-effect-data-processing (7ms)
2024-4-7 11:54:17-debug: asset-db-hook-engine-extends-afterRefresh (8ms)
2024-4-7 11:54:18-debug: Query all assets info in project
2024-4-7 11:54:18-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 11:54:18-debug:   Number of all scenes: 1
2024-4-7 11:54:18-debug:   Number of all scripts: 3
2024-4-7 11:54:18-debug:   Number of other assets: 328
2024-4-7 11:54:18-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 11:54:18-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:54:18-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 11:54:18-debug: run build task 查询 Asset Bundle success in 37 ms√, progress: 5%
2024-4-7 11:54:18-debug: [Build Memory track]: 查询 Asset Bundle start:199.20MB, end 201.42MB, increase: 2.21MB
2024-4-7 11:54:18-debug: // ---- build task 查询 Asset Bundle ---- (37ms)
2024-4-7 11:54:18-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 11:54:18-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:54:18-debug: run build task 查询 Asset Bundle success in 8 ms√, progress: 10%
2024-4-7 11:54:18-debug: // ---- build task 查询 Asset Bundle ---- (8ms)
2024-4-7 11:54:18-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:54:18-debug: [Build Memory track]: 查询 Asset Bundle start:201.43MB, end 201.44MB, increase: 14.55KB
2024-4-7 11:54:18-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 11:54:18-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-7 11:54:18-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-7 11:54:18-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:201.46MB, end 201.48MB, increase: 17.02KB
2024-4-7 11:54:18-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 11:54:18-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 11:54:18-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-7 11:54:18-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 11:54:18-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-7 11:54:18-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:54:18-debug: [Build Memory track]: 填充脚本数据到 settings.json start:201.49MB, end 201.74MB, increase: 259.08KB
2024-4-7 11:54:18-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:201.76MB, end 201.89MB, increase: 135.92KB
2024-4-7 11:54:18-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (15ms)
2024-4-7 11:54:18-debug: run build task 整理部分构建选项内数据到 settings.json success in 15 ms√, progress: 15%
2024-4-7 11:54:19-debug: recompile effect.bin success
2024-4-7 11:54:37-debug: refresh db internal success
2024-4-7 11:54:37-debug: refresh db assets success
2024-4-7 11:54:37-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:54:37-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:54:37-debug: asset-db:refresh-all-database (154ms)
2024-4-7 11:54:37-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-4-7 11:54:37-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-7 11:56:44-debug: refresh db internal success
2024-4-7 11:56:44-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:56:44-debug: refresh db assets success
2024-4-7 11:56:44-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:56:44-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:56:44-debug: asset-db:refresh-all-database (561ms)
2024-4-7 11:56:44-debug: asset-db:worker-effect-data-processing (6ms)
2024-4-7 11:56:44-debug: asset-db-hook-engine-extends-afterRefresh (8ms)
2024-4-7 11:56:44-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:56:45-debug: Query all assets info in project
2024-4-7 11:56:45-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 11:56:45-debug:   Number of all scripts: 3
2024-4-7 11:56:45-debug:   Number of other assets: 328
2024-4-7 11:56:45-debug:   Number of all scenes: 1
2024-4-7 11:56:45-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 11:56:45-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:56:45-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 11:56:45-debug: // ---- build task 查询 Asset Bundle ---- (66ms)
2024-4-7 11:56:45-debug: run build task 查询 Asset Bundle success in 66 ms√, progress: 5%
2024-4-7 11:56:45-debug: [Build Memory track]: 查询 Asset Bundle start:200.20MB, end 197.68MB, increase: -2576.29KB
2024-4-7 11:56:45-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 11:56:45-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:56:45-debug: // ---- build task 查询 Asset Bundle ---- (6ms)
2024-4-7 11:56:45-debug: run build task 查询 Asset Bundle success in 6 ms√, progress: 10%
2024-4-7 11:56:45-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 11:56:45-debug: [Build Memory track]: 查询 Asset Bundle start:197.70MB, end 200.67MB, increase: 2.97MB
2024-4-7 11:56:45-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:56:45-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (6ms)
2024-4-7 11:56:45-debug: run build task 整理部分构建选项内数据到 settings.json success in 6 ms√, progress: 12%
2024-4-7 11:56:45-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:200.68MB, end 200.70MB, increase: 18.57KB
2024-4-7 11:56:45-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 11:56:45-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 11:56:45-debug: // ---- build task 填充脚本数据到 settings.json ---- (4ms)
2024-4-7 11:56:45-debug: run build task 填充脚本数据到 settings.json success in 4 ms√, progress: 13%
2024-4-7 11:56:45-debug: [Build Memory track]: 填充脚本数据到 settings.json start:200.72MB, end 200.73MB, increase: 17.36KB
2024-4-7 11:56:45-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 11:56:45-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:56:45-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (58ms)
2024-4-7 11:56:45-debug: run build task 整理部分构建选项内数据到 settings.json success in 58 ms√, progress: 15%
2024-4-7 11:56:45-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:200.75MB, end 204.67MB, increase: 3.92MB
2024-4-7 11:56:46-debug: refresh db internal success
2024-4-7 11:56:46-debug: refresh db assets success
2024-4-7 11:56:46-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:56:46-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:56:46-debug: asset-db:refresh-all-database (280ms)
2024-4-7 11:56:46-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-7 11:56:46-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-4-7 11:56:46-debug: recompile effect.bin success
2024-4-7 11:57:54-debug: refresh db internal success
2024-4-7 11:57:54-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:57:54-debug: refresh db assets success
2024-4-7 11:57:54-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:57:54-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:57:54-debug: asset-db:refresh-all-database (782ms)
2024-4-7 11:57:54-debug: asset-db:worker-effect-data-processing (15ms)
2024-4-7 11:57:54-debug: asset-db-hook-engine-extends-afterRefresh (17ms)
2024-4-7 11:57:54-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:57:55-debug: Query all assets info in project
2024-4-7 11:57:55-debug:   Number of all scenes: 1
2024-4-7 11:57:55-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 11:57:55-debug:   Number of all scripts: 3
2024-4-7 11:57:55-debug:   Number of other assets: 328
2024-4-7 11:57:55-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 11:57:55-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:57:55-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 11:57:55-debug: // ---- build task 查询 Asset Bundle ---- (57ms)
2024-4-7 11:57:55-debug: [Build Memory track]: 查询 Asset Bundle start:213.66MB, end 217.20MB, increase: 3.55MB
2024-4-7 11:57:55-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:57:55-debug: run build task 查询 Asset Bundle success in 57 ms√, progress: 5%
2024-4-7 11:57:55-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 11:57:55-debug: // ---- build task 查询 Asset Bundle ---- (21ms)
2024-4-7 11:57:55-debug: run build task 查询 Asset Bundle success in 21 ms√, progress: 10%
2024-4-7 11:57:55-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 11:57:55-debug: [Build Memory track]: 查询 Asset Bundle start:217.22MB, end 218.99MB, increase: 1.77MB
2024-4-7 11:57:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:57:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-7 11:57:55-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-7 11:57:55-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:219.01MB, end 219.02MB, increase: 17.26KB
2024-4-7 11:57:55-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 11:57:55-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 11:57:55-debug: // ---- build task 填充脚本数据到 settings.json ---- (1ms)
2024-4-7 11:57:55-debug: run build task 填充脚本数据到 settings.json success in 1 ms√, progress: 13%
2024-4-7 11:57:55-debug: [Build Memory track]: 填充脚本数据到 settings.json start:219.04MB, end 219.06MB, increase: 17.40KB
2024-4-7 11:57:55-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 11:57:55-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:57:56-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (59ms)
2024-4-7 11:57:56-debug: run build task 整理部分构建选项内数据到 settings.json success in 59 ms√, progress: 15%
2024-4-7 11:57:56-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:219.07MB, end 220.92MB, increase: 1.85MB
2024-4-7 11:57:57-debug: recompile effect.bin success
2024-4-7 11:58:42-debug: refresh db internal success
2024-4-7 11:58:42-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:58:42-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:760: '/' : wrong operand types - no operation '/' exists that takes a left-hand operand of type 'highp float' and a right operand of type 'const int' (or there is no acceptable conversion) 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 745 float rand(vec2 seeds_zero_to_one) {746   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);747 }748 749 vec4 vert () {750   StandardVertInput In;751   CCVertInput(In);752 753   mat4 matWorld, matWorldIT;754   CCGetWorldMatrixFull(matWorld, matWorldIT);755 756   vec3 dir = normalize(In.position.xyz);757   float f = 5.0;758   float len0 = length(In.position);759   float delay = len0 * f;760   float time = cc_time.x - delay/2;761   time = mod(time, f);762   time = step(0.0, time) * time;763   float r = rand(In.position.xy);764   In.position.xyz = dir * r  * time;765 766   vec4 pos = matWorld * In.position;767 768   v_position = pos.xyz;769   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);770   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);771   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;772 773   v_uv = a_texCoord;774   #if HAS_SECOND_UV775     v_uv1 = a_texCoord1;776   #endif777   v_color = a_color;778 779   CC_TRANSFER_FOG(pos);780   v_shadowPos = cc_matLightViewProj * pos;781   gl_PointSize = 1.0;782   return cc_matProj * (cc_matView * matWorld) * In.position;783 }784 785 786 void main() { gl_Position = vert(); }787 
2024-4-7 11:58:42-debug: refresh db assets success
2024-4-7 11:58:42-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:58:42-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:58:42-debug: asset-db:refresh-all-database (558ms)
2024-4-7 11:58:42-debug: asset-db:worker-effect-data-processing (15ms)
2024-4-7 11:58:42-debug: asset-db-hook-engine-extends-afterRefresh (16ms)
2024-4-7 11:58:42-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:58:43-debug: Query all assets info in project
2024-4-7 11:58:43-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 11:58:43-debug:   Number of all scenes: 1
2024-4-7 11:58:43-debug:   Number of all scripts: 3
2024-4-7 11:58:43-debug:   Number of other assets: 327
2024-4-7 11:58:44-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 11:58:44-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:58:44-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 11:58:44-debug: // ---- build task 查询 Asset Bundle ---- (72ms)
2024-4-7 11:58:44-debug: run build task 查询 Asset Bundle success in 72 ms√, progress: 5%
2024-4-7 11:58:44-debug: [Build Memory track]: 查询 Asset Bundle start:205.39MB, end 207.26MB, increase: 1.87MB
2024-4-7 11:58:44-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:58:44-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 11:58:44-debug: // ---- build task 查询 Asset Bundle ---- (7ms)
2024-4-7 11:58:44-debug: [Build Memory track]: 查询 Asset Bundle start:207.27MB, end 207.29MB, increase: 15.68KB
2024-4-7 11:58:44-debug: run build task 查询 Asset Bundle success in 7 ms√, progress: 10%
2024-4-7 11:58:44-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 11:58:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:58:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (5ms)
2024-4-7 11:58:44-debug: run build task 整理部分构建选项内数据到 settings.json success in 5 ms√, progress: 12%
2024-4-7 11:58:44-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 11:58:44-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 11:58:44-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.30MB, end 207.32MB, increase: 18.12KB
2024-4-7 11:58:44-debug: // ---- build task 填充脚本数据到 settings.json ---- (6ms)
2024-4-7 11:58:44-debug: run build task 填充脚本数据到 settings.json success in 6 ms√, progress: 13%
2024-4-7 11:58:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:58:44-debug: [Build Memory track]: 填充脚本数据到 settings.json start:207.33MB, end 207.35MB, increase: 16.06KB
2024-4-7 11:58:44-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 11:58:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (38ms)
2024-4-7 11:58:44-debug: run build task 整理部分构建选项内数据到 settings.json success in 38 ms√, progress: 15%
2024-4-7 11:58:44-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.36MB, end 207.49MB, increase: 124.97KB
2024-4-7 11:58:51-debug: refresh db internal success
2024-4-7 11:58:51-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:58:52-debug: refresh db assets success
2024-4-7 11:58:52-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:58:52-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:58:52-debug: asset-db:refresh-all-database (688ms)
2024-4-7 11:58:52-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-7 11:58:52-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-7 11:58:52-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:58:53-debug: Query all assets info in project
2024-4-7 11:58:53-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 11:58:53-debug:   Number of all scenes: 1
2024-4-7 11:58:53-debug:   Number of all scripts: 3
2024-4-7 11:58:53-debug:   Number of other assets: 328
2024-4-7 11:58:53-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 11:58:53-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:58:53-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 11:58:53-debug: // ---- build task 查询 Asset Bundle ---- (66ms)
2024-4-7 11:58:53-debug: [Build Memory track]: 查询 Asset Bundle start:208.08MB, end 200.61MB, increase: -7654.09KB
2024-4-7 11:58:53-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 11:58:53-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:58:53-debug: run build task 查询 Asset Bundle success in 66 ms√, progress: 5%
2024-4-7 11:58:53-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-7 11:58:53-debug: [Build Memory track]: 查询 Asset Bundle start:200.62MB, end 200.66MB, increase: 38.56KB
2024-4-7 11:58:53-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-7 11:58:53-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 11:58:53-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:58:53-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (6ms)
2024-4-7 11:58:53-debug: run build task 整理部分构建选项内数据到 settings.json success in 6 ms√, progress: 12%
2024-4-7 11:58:53-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:200.68MB, end 200.74MB, increase: 61.66KB
2024-4-7 11:58:53-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 11:58:53-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 11:58:53-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-7 11:58:53-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-7 11:58:53-debug: [Build Memory track]: 填充脚本数据到 settings.json start:200.75MB, end 200.77MB, increase: 17.42KB
2024-4-7 11:58:53-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:58:53-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 11:58:53-debug: run build task 整理部分构建选项内数据到 settings.json success in 14 ms√, progress: 15%
2024-4-7 11:58:53-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (14ms)
2024-4-7 11:58:53-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:200.78MB, end 200.94MB, increase: 163.64KB
2024-4-7 11:58:55-debug: recompile effect.bin success
2024-4-7 11:59:43-debug: refresh db internal success
2024-4-7 11:59:43-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:59:43-debug: refresh db assets success
2024-4-7 11:59:43-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 11:59:43-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 11:59:43-debug: asset-db:refresh-all-database (947ms)
2024-4-7 11:59:43-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-7 11:59:44-debug: asset-db-hook-engine-extends-afterRefresh (10ms)
2024-4-7 11:59:44-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 11:59:44-debug: Query all assets info in project
2024-4-7 11:59:44-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 11:59:44-debug:   Number of all scenes: 1
2024-4-7 11:59:44-debug:   Number of all scripts: 3
2024-4-7 11:59:44-debug:   Number of other assets: 328
2024-4-7 11:59:44-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 11:59:44-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:59:44-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 11:59:44-debug: // ---- build task 查询 Asset Bundle ---- (59ms)
2024-4-7 11:59:44-debug: run build task 查询 Asset Bundle success in 59 ms√, progress: 5%
2024-4-7 11:59:44-debug: [Build Memory track]: 查询 Asset Bundle start:214.51MB, end 214.77MB, increase: 263.61KB
2024-4-7 11:59:44-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 11:59:44-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 11:59:44-debug: // ---- build task 查询 Asset Bundle ---- (8ms)
2024-4-7 11:59:44-debug: run build task 查询 Asset Bundle success in 8 ms√, progress: 10%
2024-4-7 11:59:44-debug: [Build Memory track]: 查询 Asset Bundle start:214.78MB, end 214.80MB, increase: 16.46KB
2024-4-7 11:59:44-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 11:59:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:59:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (4ms)
2024-4-7 11:59:44-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 11:59:44-debug: run build task 整理部分构建选项内数据到 settings.json success in 4 ms√, progress: 12%
2024-4-7 11:59:44-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:214.81MB, end 214.83MB, increase: 18.96KB
2024-4-7 11:59:44-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 11:59:44-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-7 11:59:44-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-7 11:59:44-debug: [Build Memory track]: 填充脚本数据到 settings.json start:214.84MB, end 217.10MB, increase: 2.26MB
2024-4-7 11:59:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 11:59:44-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 11:59:44-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (41ms)
2024-4-7 11:59:44-debug: run build task 整理部分构建选项内数据到 settings.json success in 41 ms√, progress: 15%
2024-4-7 11:59:44-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:217.12MB, end 212.34MB, increase: -4890.58KB
2024-4-7 11:59:46-debug: recompile effect.bin success
2024-4-7 12:03:02-debug: refresh db internal success
2024-4-7 12:03:02-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:03:03-debug: refresh db assets success
2024-4-7 12:03:03-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 12:03:03-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 12:03:03-debug: asset-db:refresh-all-database (799ms)
2024-4-7 12:03:03-debug: asset-db:worker-effect-data-processing (14ms)
2024-4-7 12:03:03-debug: asset-db-hook-engine-extends-afterRefresh (15ms)
2024-4-7 12:03:03-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:03:04-debug: Query all assets info in project
2024-4-7 12:03:04-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 12:03:04-debug:   Number of all scripts: 3
2024-4-7 12:03:04-debug:   Number of other assets: 328
2024-4-7 12:03:04-debug:   Number of all scenes: 1
2024-4-7 12:03:04-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 12:03:04-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 12:03:04-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 12:03:04-debug: run build task 查询 Asset Bundle success in 52 ms√, progress: 5%
2024-4-7 12:03:04-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 12:03:04-debug: [Build Memory track]: 查询 Asset Bundle start:215.80MB, end 217.74MB, increase: 1.94MB
2024-4-7 12:03:04-debug: // ---- build task 查询 Asset Bundle ---- (52ms)
2024-4-7 12:03:04-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 12:03:04-debug: run build task 查询 Asset Bundle success in 6 ms√, progress: 10%
2024-4-7 12:03:04-debug: // ---- build task 查询 Asset Bundle ---- (6ms)
2024-4-7 12:03:04-debug: [Build Memory track]: 查询 Asset Bundle start:217.75MB, end 217.82MB, increase: 72.56KB
2024-4-7 12:03:04-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 12:03:04-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 12:03:04-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (10ms)
2024-4-7 12:03:04-debug: run build task 整理部分构建选项内数据到 settings.json success in 10 ms√, progress: 12%
2024-4-7 12:03:04-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 12:03:04-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:217.84MB, end 217.86MB, increase: 17.48KB
2024-4-7 12:03:04-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 12:03:04-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-7 12:03:04-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-7 12:03:04-debug: [Build Memory track]: 填充脚本数据到 settings.json start:217.87MB, end 217.89MB, increase: 17.39KB
2024-4-7 12:03:04-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 12:03:04-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 12:03:04-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (66ms)
2024-4-7 12:03:04-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:217.90MB, end 218.26MB, increase: 370.00KB
2024-4-7 12:03:04-debug: run build task 整理部分构建选项内数据到 settings.json success in 66 ms√, progress: 15%
2024-4-7 12:03:06-debug: refresh db internal success
2024-4-7 12:03:06-debug: refresh db assets success
2024-4-7 12:03:06-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 12:03:06-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 12:03:06-debug: asset-db:refresh-all-database (818ms)
2024-4-7 12:03:06-debug: asset-db:worker-effect-data-processing (1ms)
2024-4-7 12:03:06-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-4-7 12:03:06-debug: recompile effect.bin success
2024-4-7 12:04:51-debug: refresh db internal success
2024-4-7 12:04:51-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:04:51-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:759: '-' : wrong operand types - no operation '-' exists that takes a left-hand operand of type 'const int' and a right operand of type 'highp float' (or there is no acceptable conversion)ERROR: 0:759: '*' : wrong operand types - no operation '*' exists that takes a left-hand operand of type 'const int' and a right operand of type 'highp float' (or there is no acceptable conversion)ERROR: 0:759: 'assign' : cannot convert from 'const int' to 'highp float' 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 745 float rand(vec2 seeds_zero_to_one) {746   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);747 }748 749 vec4 vert () {750   StandardVertInput In;751   CCVertInput(In);752 753   mat4 matWorld, matWorldIT;754   CCGetWorldMatrixFull(matWorld, matWorldIT);755 756   vec3 dir = normalize(In.position.xyz);757   float f = 5.0;758   float time = cc_time.x - f;759   time = (1 - step(0.0, time)) * time;760   float r = rand(In.position.xy);761   In.position.xyz = dir * r  * time;762 763   vec4 pos = matWorld * In.position;764 765   v_position = pos.xyz;766   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);767   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);768   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;769 770   v_uv = a_texCoord;771   #if HAS_SECOND_UV772     v_uv1 = a_texCoord1;773   #endif774   v_color = a_color;775 776   CC_TRANSFER_FOG(pos);777   v_shadowPos = cc_matLightViewProj * pos;778   gl_PointSize = 1.0;779   return cc_matProj * (cc_matView * matWorld) * In.position;780 }781 782 783 void main() { gl_Position = vert(); }784 
2024-4-7 12:04:51-debug: refresh db assets success
2024-4-7 12:04:51-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 12:04:51-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 12:04:51-debug: asset-db:refresh-all-database (504ms)
2024-4-7 12:04:51-debug: asset-db:worker-effect-data-processing (6ms)
2024-4-7 12:04:51-debug: asset-db-hook-engine-extends-afterRefresh (6ms)
2024-4-7 12:04:51-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:04:57-debug: Query all assets info in project
2024-4-7 12:04:57-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 12:04:57-debug:   Number of all scenes: 1
2024-4-7 12:04:57-debug:   Number of all scripts: 3
2024-4-7 12:04:57-debug:   Number of other assets: 327
2024-4-7 12:04:57-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 12:04:57-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 12:04:57-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 12:04:57-debug: // ---- build task 查询 Asset Bundle ---- (62ms)
2024-4-7 12:04:57-debug: run build task 查询 Asset Bundle success in 62 ms√, progress: 5%
2024-4-7 12:04:57-debug: [Build Memory track]: 查询 Asset Bundle start:205.05MB, end 205.49MB, increase: 454.55KB
2024-4-7 12:04:57-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 12:04:57-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 12:04:57-debug: // ---- build task 查询 Asset Bundle ---- (5ms)
2024-4-7 12:04:57-debug: run build task 查询 Asset Bundle success in 5 ms√, progress: 10%
2024-4-7 12:04:57-debug: [Build Memory track]: 查询 Asset Bundle start:205.51MB, end 205.52MB, increase: 14.36KB
2024-4-7 12:04:57-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 12:04:57-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 12:04:57-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-7 12:04:57-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-7 12:04:57-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:205.54MB, end 205.55MB, increase: 16.96KB
2024-4-7 12:04:57-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 12:04:57-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 12:04:57-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-7 12:04:57-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-7 12:04:57-debug: [Build Memory track]: 填充脚本数据到 settings.json start:205.57MB, end 205.59MB, increase: 17.51KB
2024-4-7 12:04:57-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 12:04:57-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 12:04:57-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (15ms)
2024-4-7 12:04:57-debug: run build task 整理部分构建选项内数据到 settings.json success in 15 ms√, progress: 15%
2024-4-7 12:04:57-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:205.60MB, end 205.72MB, increase: 124.46KB
2024-4-7 12:05:07-debug: refresh db internal success
2024-4-7 12:05:07-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:05:07-debug: refresh db assets success
2024-4-7 12:05:07-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 12:05:07-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 12:05:07-debug: asset-db:refresh-all-database (686ms)
2024-4-7 12:05:07-debug: asset-db:worker-effect-data-processing (6ms)
2024-4-7 12:05:07-debug: asset-db-hook-engine-extends-afterRefresh (7ms)
2024-4-7 12:05:07-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:05:08-debug: Query all assets info in project
2024-4-7 12:05:08-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 12:05:08-debug:   Number of all scenes: 1
2024-4-7 12:05:08-debug:   Number of all scripts: 3
2024-4-7 12:05:08-debug:   Number of other assets: 328
2024-4-7 12:05:08-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 12:05:08-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 12:05:08-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 12:05:08-debug: // ---- build task 查询 Asset Bundle ---- (73ms)
2024-4-7 12:05:08-debug: run build task 查询 Asset Bundle success in 73 ms√, progress: 5%
2024-4-7 12:05:08-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 12:05:08-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 12:05:08-debug: [Build Memory track]: 查询 Asset Bundle start:214.83MB, end 211.38MB, increase: -3532.70KB
2024-4-7 12:05:08-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-4-7 12:05:08-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-4-7 12:05:08-debug: [Build Memory track]: 查询 Asset Bundle start:211.39MB, end 211.41MB, increase: 14.76KB
2024-4-7 12:05:08-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 12:05:08-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 12:05:08-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-7 12:05:08-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-7 12:05:08-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.42MB, end 211.44MB, increase: 17.48KB
2024-4-7 12:05:08-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 12:05:08-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 12:05:08-debug: [Build Memory track]: 填充脚本数据到 settings.json start:211.46MB, end 211.47MB, increase: 17.18KB
2024-4-7 12:05:08-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-7 12:05:08-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 12:05:08-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 12:05:08-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-7 12:05:08-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (50ms)
2024-4-7 12:05:08-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:211.49MB, end 217.88MB, increase: 6.39MB
2024-4-7 12:05:08-debug: run build task 整理部分构建选项内数据到 settings.json success in 50 ms√, progress: 15%
2024-4-7 12:05:10-debug: recompile effect.bin success
2024-4-7 12:09:07-debug: refresh db internal success
2024-4-7 12:09:07-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:09:08-error: ../shader/particle.effect - vs:vert: Error EFX2406: compilation failed: ↓↓↓↓↓ EXPAND THIS MESSAGE FOR MORE INFO ↓↓↓↓↓ERROR: 0:759: '-' : wrong operand types - no operation '-' exists that takes a left-hand operand of type 'const int' and a right operand of type 'highp float' (or there is no acceptable conversion)ERROR: 0:759: '*' : wrong operand types - no operation '*' exists that takes a left-hand operand of type 'const int' and a right operand of type 'highp float' (or there is no acceptable conversion)ERROR: 0:759: 'assign' : cannot convert from 'const int' to 'highp float' 1 #version 1002 #define USE_INSTANCING 13 #define CC_DEVICE_SUPPORT_FLOAT_TEXTURE 14 #define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS 10245 #define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS 10246 #define CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS 1287 #define CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS 1288 #define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT 09 #define CC_PLATFORM_ANDROID_AND_WEBGL 010 #define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES 011 #define CC_USE_SKINNING 112 #define CC_USE_BAKED_ANIMATION 113 #define CC_USE_LIGHTMAP 114 #define CC_USE_REFLECTION_PROBE 115 #define CC_RECEIVE_SHADOW 116 #define CC_USE_LIGHT_PROBE 117 #define CC_USE_MORPH 118 #define CC_MORPH_TARGET_COUNT 219 #define CC_MORPH_TARGET_HAS_POSITION 120 #define CC_MORPH_TARGET_HAS_NORMAL 121 #define CC_MORPH_TARGET_HAS_TANGENT 122 #define CC_MORPH_PRECOMPUTED 123 #define CC_USE_REAL_TIME_JOINT_TEXTURE 124 #define CC_USE_FOG 025 #define CC_USE_ACCURATE_FOG 126 #define CC_SUPPORT_CASCADED_SHADOW_MAP 127 #define HAS_SECOND_UV 128 29 30 precision highp float;31 32 33 #define QUATER_PI         0.7853981634034 #define HALF_PI           1.5707963267935 #define PI                3.1415926535936 #define PI2               6.2831853071837 #define PI4               12.566370614438 39 #define INV_QUATER_PI     1.2732395447440 #define INV_HALF_PI       0.6366197723741 #define INV_PI            0.3183098861842 #define INV_PI2           0.1591549430943 #define INV_PI4           0.0795774715544 45 #define EPSILON           1e-646 #define EPSILON_LOWP      1e-447 #define LOG2              1.44269548 #define EXP_VALUE         2.7182818349 #define FP_MAX            65504.050 #define FP_SCALE          0.000976562551 #define FP_SCALE_INV      1024.052 #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)53 #define LIGHT_MAP_TYPE_DISABLED 054 #define LIGHT_MAP_TYPE_ALL_IN_ONE 155 #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 256 #define REFLECTION_PROBE_TYPE_NONE 057 #define REFLECTION_PROBE_TYPE_CUBE 158 #define REFLECTION_PROBE_TYPE_PLANAR 259 #define REFLECTION_PROBE_TYPE_BLEND 360 #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 461 #define LIGHT_TYPE_DIRECTIONAL 0.062 #define LIGHT_TYPE_SPHERE 1.063 #define LIGHT_TYPE_SPOT 2.064 #define LIGHT_TYPE_POINT 3.065 #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.066 67 #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)68 #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)69 #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)70 #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)71 #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)72 #define TONE_MAPPING_ACES 073 #define TONE_MAPPING_LINEAR 174 #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.075 #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE76   #define CC_SURFACES_DEBUG_VIEW_SINGLE 177 #endif78 #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC79   #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 280 #endif81 82 83 struct StandardVertInput {84   highp vec4 position;85   vec3 normal;86   vec4 tangent;87 };88 89 attribute vec3 a_position;90 attribute vec3 a_normal;91 attribute vec2 a_texCoord;92 attribute vec4 a_tangent;93 94 #if CC_USE_SKINNING95   96     attribute vec4 a_joints;97   98 99   attribute vec4 a_weights;100 #endif101 102 103 #if USE_INSTANCING104   #if CC_USE_BAKED_ANIMATION105     attribute highp vec4 a_jointAnimInfo;106   #endif107   attribute vec4 a_matWorld0;108   attribute vec4 a_matWorld1;109   attribute vec4 a_matWorld2;110   #if CC_USE_LIGHTMAP111     attribute vec4 a_lightingMapUVParam;112   #endif113   #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW114     #if CC_RECEIVE_SHADOW115     #endif116     attribute vec4 a_localShadowBiasAndProbeId;117   #endif118 119   #if CC_USE_REFLECTION_PROBE120     attribute vec4 a_reflectionProbeData;121   #endif122 123   #if CC_USE_LIGHT_PROBE124     attribute vec4 a_sh_linear_const_r;125     attribute vec4 a_sh_linear_const_g;126     attribute vec4 a_sh_linear_const_b;127   #endif128 #endif129 130 #if CC_USE_MORPH131   132     attribute float a_vertexId;133     int getVertexId() {134       return int(a_vertexId);135     }136   137 #endif138 139 140 141 142 143 144 highp float decode32 (highp vec4 rgba) {145   rgba = rgba * 255.0;146   highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;147   highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;148   highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;149   return Sign * exp2(Exponent - 23.0) * Mantissa;150 }151 152 153 154 155 156 157 158 #if CC_USE_MORPH159   uniform vec4 cc_displacementWeights[15];160   uniform vec4 cc_displacementTextureInfo;161 162   163   #if CC_MORPH_TARGET_HAS_POSITION164     uniform sampler2D cc_PositionDisplacements;165   #endif166   167   #if CC_MORPH_TARGET_HAS_NORMAL168     uniform sampler2D cc_NormalDisplacements;169   #endif170   171   #if CC_MORPH_TARGET_HAS_TANGENT172     uniform sampler2D cc_TangentDisplacements;173   #endif174   175   176   177   vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {178     float pixelIndexF = float(pixelIndex);179     float x = mod(pixelIndexF, textureResolution.x);180     float y = floor(pixelIndexF / textureResolution.x);181     return vec2(x, y);182   }183   184   vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {185     return (vec2(location.x, location.y) + .5) / textureResolution;186   }187   188   #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE189     190       vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {191         int pixelIndex = elementIndex;192         vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);193         vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);194         return texture2D(tex, uv);195       }196     197   #else198     vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {199       int pixelIndex = elementIndex * 4;200       vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);201       vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);202       vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);203       vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);204       return vec4(205         decode32(texture2D(tex, x)),206         decode32(texture2D(tex, y)),207         decode32(texture2D(tex, z)),208         1.0209       );210     }211   #endif212   213   float getDisplacementWeight(int index) {214     int quot = index / 4;215     int remainder = index - quot * 4;216     if (remainder == 0) {217       return cc_displacementWeights[quot].x;218     } else if (remainder == 1) {219       return cc_displacementWeights[quot].y;220     } else if (remainder == 2) {221       return cc_displacementWeights[quot].z;222     } else {223       return cc_displacementWeights[quot].w;224     }225   }226   227   vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {228   #if CC_MORPH_PRECOMPUTED229     return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;230   #else231     vec3 result = vec3(0, 0, 0);232     int nVertices = int(cc_displacementTextureInfo.z);233     for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {234       result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));235     }236     return result;237   #endif238   }239   240   241   #if CC_MORPH_TARGET_HAS_POSITION242   vec3 getPositionDisplacement(int vertexId) {243       return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);244   }245   #endif246   247   #if CC_MORPH_TARGET_HAS_NORMAL248   vec3 getNormalDisplacement(int vertexId) {249       return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);250   }251   #endif252   253   #if CC_MORPH_TARGET_HAS_TANGENT254   vec3 getTangentDisplacement(int vertexId) {255       return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);256   }257   #endif258   259   void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {260     int vertexId = getVertexId();261   262   #if CC_MORPH_TARGET_HAS_POSITION263     position.xyz = position.xyz + getPositionDisplacement(vertexId);264   #endif265   266   #if CC_MORPH_TARGET_HAS_NORMAL267     normal.xyz = normal.xyz + getNormalDisplacement(vertexId);268   #endif269   270   #if CC_MORPH_TARGET_HAS_TANGENT271     tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);272   #endif273   }274   275   void applyMorph (inout vec4 position) {276   #if CC_MORPH_TARGET_HAS_POSITION277     position.xyz = position.xyz + getPositionDisplacement(getVertexId());278   #endif279   }280   281   282 #endif283 #if CC_USE_SKINNING284   285   #if CC_USE_BAKED_ANIMATION286     uniform highp vec4 cc_jointTextureInfo;287     uniform highp vec4 cc_jointAnimInfo;288     uniform highp sampler2D cc_jointTexture;289     290     void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)291     {292       #if USE_INSTANCING293         highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;294       #else295         highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;296       #endif297       invSize = cc_jointTextureInfo.w;298       highp float tempY = floor(temp * invSize);299       x = floor(temp - tempY * cc_jointTextureInfo.x);300       y = (tempY + 0.5) * invSize;301     }302   #else303     #if CC_USE_REAL_TIME_JOINT_TEXTURE304       uniform highp sampler2D cc_realtimeJoint;305     #else306       uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];307 308     #endif309   #endif310   311   312   313 314   315   #if CC_USE_BAKED_ANIMATION316     #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE317       mat4 getJointMatrix (float i) {318         highp float x, y, invSize;319         CCGetJointTextureCoords(3.0, i, x, y, invSize);320         vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));321         vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));322         vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));323         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));324       }325     #else326       mat4 getJointMatrix (float i) {327         highp float x, y, invSize;328         CCGetJointTextureCoords(12.0, i, x, y, invSize);329         vec4 v1 = vec4(330           decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),331           decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),332           decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),333           decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))334         );335         vec4 v2 = vec4(336           decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),337           decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),338           decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),339           decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))340         );341         vec4 v3 = vec4(342           decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),343           decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),344           decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),345           decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))346         );347         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));348       }349     #endif350   #else351     #if CC_USE_REAL_TIME_JOINT_TEXTURE352       #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE353         mat4 getJointMatrix (float i) {354           float x = i;355           vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));356           vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));357           vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));358           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));359         }360       #else361         mat4 getJointMatrix (float i) {362          float x = 4.0 * i;363           vec4 v1 = vec4(364             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),365             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),366             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),367             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))368           );369           vec4 v2 = vec4(370             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),371             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),372             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),373             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))374           );375           vec4 v3 = vec4(376             decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),377             decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),378             decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),379             decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))380           );381           return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));382         }383       #endif384     #else385       mat4 getJointMatrix (float i) {386         int idx = int(i);387         vec4 v1 = cc_joints[idx * 3];388         vec4 v2 = cc_joints[idx * 3 + 1];389         vec4 v3 = cc_joints[idx * 3 + 2];390         return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));391       }392     #endif393   #endif394   395   mat4 skinMatrix () {396     vec4 joints = vec4(a_joints);397     return getJointMatrix(joints.x) * a_weights.x398          + getJointMatrix(joints.y) * a_weights.y399          + getJointMatrix(joints.z) * a_weights.z400          + getJointMatrix(joints.w) * a_weights.w;401   }402   403   void CCSkin (inout vec4 position) {404     mat4 m = skinMatrix();405     position = m * position;406   }407   408   void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {409     mat4 m = skinMatrix();410     position = m * position;411     normal = (m * vec4(normal, 0.0)).xyz;412     tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;413   }414   415   416 #endif417 418 void CCVertInput(inout StandardVertInput In)419 {420   421     In.position = vec4(a_position, 1.0); 422     In.normal = a_normal;                423     In.tangent = a_tangent;424   #if CC_USE_MORPH425     applyMorph(In.position, In.normal, In.tangent);426   #endif427   #if CC_USE_SKINNING428     CCSkin(In.position, In.normal, In.tangent);429   #endif430 }431 uniform highp vec4 cc_time;432 uniform highp mat4 cc_matView;433   uniform highp mat4 cc_matProj;434   uniform highp vec4 cc_cameraPos;435   uniform mediump vec4 cc_fogBase;436   uniform mediump vec4 cc_fogAdd;437 438 439 440 441 #if !USE_INSTANCING442   uniform highp mat4 cc_matWorld;443   uniform highp mat4 cc_matWorldIT;444 445   446 #endif447 448 449 450 451 452 void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)453 {454   #if USE_INSTANCING455     matWorld = mat4(456       vec4(a_matWorld0.xyz, 0.0),457       vec4(a_matWorld1.xyz, 0.0),458       vec4(a_matWorld2.xyz, 0.0),459       vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)460     );461     vec3 scale = 1.0 / vec3(length(a_matWorld0.xyz), length(a_matWorld1.xyz), length(a_matWorld2.xyz));462     vec3 scale2 = scale * scale;463     matWorldIT = mat4(464       vec4(a_matWorld0.xyz * scale2.x, 0.0),465       vec4(a_matWorld1.xyz * scale2.y, 0.0),466       vec4(a_matWorld2.xyz * scale2.z, 0.0),467       vec4(0.0, 0.0, 0.0, 1.0)468     );469   #else470     matWorld = cc_matWorld;471     matWorldIT = cc_matWorldIT;472   #endif473 }474 475 476 #if CC_USE_FOG != 4477   478   float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {479       vec4 wPos = pos;480       float cam_dis = distance(cameraPos, wPos.xyz);481       return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);482   }483   float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {484       vec4 wPos = pos;485       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;486       float f = exp(-cam_dis * fogDensity);487       return f;488   }489   490   float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {491       vec4 wPos = pos;492       float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;493       float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);494       return f;495   }496   float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {497       vec4 wPos = pos;498       vec3 camWorldProj = cameraPos.xyz;499       camWorldProj.y = 0.;500       vec3 worldPosProj = wPos.xyz;501       worldPosProj.y = 0.;502       float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;503       float fDeltaY, fDensityIntegral;504       if (cameraPos.y > fogTop) {505           if (wPos.y < fogTop) {506               fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;507               fDensityIntegral = fDeltaY * fDeltaY * 0.5;508           }509           else {510               fDeltaY = 0.;511               fDensityIntegral = 0.;512           }513       }514       else {515           if (wPos.y < fogTop) {516               float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;517               float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;518               fDeltaY = abs(fDeltaA - fDeltaB);519               fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));520           }521           else {522               fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;523               fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);524           }525       }526       float fDensity;527       if (fDeltaY != 0.) {528           fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;529       }530       else {531           fDensity = 0.;532       }533       float f = exp(-fDensity);534       return f;535   }536   537 #endif538 void CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)539 {540 #if CC_USE_FOG == 0541 	factor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);542 #elif CC_USE_FOG == 1543 	factor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);544 #elif CC_USE_FOG == 2545 	factor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);546 #elif CC_USE_FOG == 3547 	factor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);548 #else549 	factor = 1.0;550 #endif551 }552 553 554 555 556 557 #if !CC_USE_ACCURATE_FOG558 varying mediump float v_fog_factor;559 #endif560 561 562 void CC_TRANSFER_FOG(vec4 pos) {563 #if !CC_USE_ACCURATE_FOG564     CC_TRANSFER_FOG_BASE(pos, v_fog_factor);565 #endif566 }567 568 569 570 varying highp vec4 v_shadowPos;571 uniform highp mat4 cc_matLightViewProj;572 573 574 575 576 #if CC_SUPPORT_CASCADED_SHADOW_MAP577   #endif578 579 580 581 #if defined(CC_USE_METAL) || defined(CC_USE_WGPU)582 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y) y = -y583 #else584 #define CC_HANDLE_SAMPLE_NDC_FLIP_STATIC(y)585 #endif586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 #if CC_RECEIVE_SHADOW620   uniform highp sampler2D cc_shadowMap;621   uniform highp sampler2D cc_spotShadowMap;622   623 624   625   626   627     #define UnpackBitFromFloat(value, bit) (mod(floor(value / pow(10.0, float(bit))), 10.0) > 0.0)628     629   630     631     632     633     634   635     636     637     638     639   640     641     642     643     644   645     646     647     648     649       650       651     652   653   654           655   656   657   658   659   660   661   662   663   664   665   666   667   668   669 670   671 672   673 674   675   676 677   678   679 680   681   682 683   684 685   686 687   688   689 690   691 692   693 694   695   696 697   698 699   #if CC_SUPPORT_CASCADED_SHADOW_MAP700     701 702     703 704     705 706     707 708     709     710   #else711     712 713     714   #endif715   716 717   718 719   720 #endif721 722 723 724 725 726 #if CC_RECEIVE_SHADOW727 728 #endif729 730 731 attribute vec4 a_color;732 #if HAS_SECOND_UV733   attribute vec2 a_texCoord1;734 #endif735 736 varying vec3 v_position;737 varying vec3 v_normal;738 varying vec3 v_tangent;739 varying vec3 v_bitangent;740 varying vec2 v_uv;741 varying vec2 v_uv1;742 varying vec4 v_color;743 744 745 float rand(vec2 seeds_zero_to_one) {746   return fract(sin(dot(seeds_zero_to_one.xy, vec2(12.9898, 78.233))) * 43758.5453);747 }748 749 vec4 vert () {750   StandardVertInput In;751   CCVertInput(In);752 753   mat4 matWorld, matWorldIT;754   CCGetWorldMatrixFull(matWorld, matWorldIT);755 756   vec3 dir = normalize(In.position.xyz);757   float f = 5.0;758   float time = cc_time.x;759   time = (1 - step(f, time)) * time;760   float r = rand(In.position.xy);761   In.position.xyz = dir * r  * time;762 763   vec4 pos = matWorld * In.position;764 765   v_position = pos.xyz;766   v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);767   v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);768   v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;769 770   v_uv = a_texCoord;771   #if HAS_SECOND_UV772     v_uv1 = a_texCoord1;773   #endif774   v_color = a_color;775 776   CC_TRANSFER_FOG(pos);777   v_shadowPos = cc_matLightViewProj * pos;778   gl_PointSize = 1.0;779   return cc_matProj * (cc_matView * matWorld) * In.position;780 }781 782 783 void main() { gl_Position = vert(); }784 
2024-4-7 12:09:08-debug: refresh db assets success
2024-4-7 12:09:08-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 12:09:08-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 12:09:08-debug: asset-db:refresh-all-database (621ms)
2024-4-7 12:09:08-debug: asset-db:worker-effect-data-processing (12ms)
2024-4-7 12:09:08-debug: asset-db-hook-engine-extends-afterRefresh (17ms)
2024-4-7 12:09:08-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:09:18-debug: refresh db internal success
2024-4-7 12:09:18-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:09:18-debug: refresh db assets success
2024-4-7 12:09:18-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 12:09:18-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 12:09:18-debug: asset-db:refresh-all-database (650ms)
2024-4-7 12:09:18-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:09:18-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-7 12:09:18-debug: asset-db-hook-engine-extends-afterRefresh (5ms)
2024-4-7 12:09:19-debug: Query all assets info in project
2024-4-7 12:09:19-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 12:09:19-debug:   Number of all scenes: 1
2024-4-7 12:09:19-debug:   Number of all scripts: 3
2024-4-7 12:09:19-debug:   Number of other assets: 328
2024-4-7 12:09:19-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 12:09:19-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 12:09:19-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 12:09:19-debug: // ---- build task 查询 Asset Bundle ---- (49ms)
2024-4-7 12:09:19-debug: run build task 查询 Asset Bundle success in 49 ms√, progress: 5%
2024-4-7 12:09:19-debug: [Build Memory track]: 查询 Asset Bundle start:205.88MB, end 196.73MB, increase: -9367.13KB
2024-4-7 12:09:19-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 12:09:19-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 12:09:19-debug: // ---- build task 查询 Asset Bundle ---- (1ms)
2024-4-7 12:09:19-debug: [Build Memory track]: 查询 Asset Bundle start:196.74MB, end 196.94MB, increase: 197.93KB
2024-4-7 12:09:19-debug: run build task 查询 Asset Bundle success in 1 ms√, progress: 10%
2024-4-7 12:09:19-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 12:09:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 12:09:19-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-4-7 12:09:20-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 12%
2024-4-7 12:09:20-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:196.95MB, end 196.97MB, increase: 17.03KB
2024-4-7 12:09:20-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 12:09:20-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 12:09:20-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-7 12:09:20-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-7 12:09:20-debug: [Build Memory track]: 填充脚本数据到 settings.json start:196.98MB, end 197.01MB, increase: 31.54KB
2024-4-7 12:09:20-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 12:09:20-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 12:09:20-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (16ms)
2024-4-7 12:09:20-debug: run build task 整理部分构建选项内数据到 settings.json success in 16 ms√, progress: 15%
2024-4-7 12:09:20-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:197.03MB, end 197.20MB, increase: 179.62KB
2024-4-7 12:09:21-debug: recompile effect.bin success
2024-4-7 12:10:39-debug: refresh db internal success
2024-4-7 12:10:39-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:10:40-debug: refresh db assets success
2024-4-7 12:10:40-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 12:10:40-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 12:10:40-debug: asset-db:refresh-all-database (901ms)
2024-4-7 12:10:40-debug: asset-db:worker-effect-data-processing (4ms)
2024-4-7 12:10:40-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-4-7 12:10:40-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:10:41-debug: Query all assets info in project
2024-4-7 12:10:41-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 12:10:41-debug:   Number of all scenes: 1
2024-4-7 12:10:41-debug:   Number of other assets: 328
2024-4-7 12:10:41-debug:   Number of all scripts: 3
2024-4-7 12:10:41-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 12:10:41-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 12:10:41-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 12:10:41-debug: // ---- build task 查询 Asset Bundle ---- (70ms)
2024-4-7 12:10:41-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 12:10:41-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 12:10:41-debug: run build task 查询 Asset Bundle success in 70 ms√, progress: 5%
2024-4-7 12:10:41-debug: [Build Memory track]: 查询 Asset Bundle start:212.35MB, end 212.62MB, increase: 271.80KB
2024-4-7 12:10:41-debug: [Build Memory track]: 查询 Asset Bundle start:212.63MB, end 212.65MB, increase: 14.63KB
2024-4-7 12:10:41-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-4-7 12:10:41-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 10%
2024-4-7 12:10:41-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 12:10:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 12:10:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-4-7 12:10:41-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 12%
2024-4-7 12:10:41-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:212.66MB, end 214.98MB, increase: 2.32MB
2024-4-7 12:10:41-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 12:10:41-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 12:10:41-debug: // ---- build task 填充脚本数据到 settings.json ---- (2ms)
2024-4-7 12:10:41-debug: run build task 填充脚本数据到 settings.json success in 2 ms√, progress: 13%
2024-4-7 12:10:41-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 12:10:41-debug: [Build Memory track]: 填充脚本数据到 settings.json start:215.00MB, end 215.01MB, increase: 17.38KB
2024-4-7 12:10:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 12:10:41-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (18ms)
2024-4-7 12:10:41-debug: run build task 整理部分构建选项内数据到 settings.json success in 18 ms√, progress: 15%
2024-4-7 12:10:41-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:215.03MB, end 215.54MB, increase: 526.24KB
2024-4-7 12:10:43-debug: recompile effect.bin success
2024-4-7 12:11:01-debug: refresh db internal success
2024-4-7 12:11:01-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.effectbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:11:02-debug: refresh db assets success
2024-4-7 12:11:02-debug: Run asset db hook engine-extends:afterRefresh ...
2024-4-7 12:11:02-debug: Run asset db hook engine-extends:afterRefresh success!
2024-4-7 12:11:02-debug: asset-db:refresh-all-database (843ms)
2024-4-7 12:11:02-debug: asset-db:worker-effect-data-processing (5ms)
2024-4-7 12:11:02-debug: asset-db-hook-engine-extends-afterRefresh (7ms)
2024-4-7 12:11:02-debug: %cImport%c: E:\cary\git\cocos-creator\3d\firework\assets\shader\particle.mtlbackground: #aaff85; color: #000;color: #000;
2024-4-7 12:11:03-debug: Query all assets info in project
2024-4-7 12:11:03-debug:   Number of all scenes: 1
2024-4-7 12:11:03-debug:   Number of all scripts: 3
2024-4-7 12:11:03-debug:   Number of other assets: 328
2024-4-7 12:11:03-debug: init custom config: keepNodeUuid: false, useCache: true
2024-4-7 12:11:03-debug: 查询 Asset Bundle start, progress: 0%
2024-4-7 12:11:03-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 12:11:03-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,511d2633-09a7-4bdd-ac42-f778032124b3,5d45aa00-e064-4938-b314-4265f0c2258c,9361fd90-ba52-4f84-aa93-6e878fd576ca,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,d1346436-ac96-4271-b863-1f4fdead95b0,971bdb23-3ff6-43eb-b422-1c30165a3663,17debcc3-0a6b-4b8a-b00b-dc58b885581e,711ebe11-f673-4cd9-9a83-63c60ba54c5b,c0143906-9aed-447e-9436-2ae8512d1b6e,14da1725-c4c2-42b4-ab08-ee0aeb6898b3,081cab31-dccd-428e-8652-f2404cc81c47,78e0584a-4343-4727-8f37-e14e65c2a2db,ba21476f-2866-4f81-9c4d-6e359316e448,871c3b6c-7379-419d-bda3-794b239ab90d,1d08ef62-a503-4ce2-8b9a-46c90873f7d3
2024-4-7 12:11:03-debug: 查询 Asset Bundle start, progress: 5%
2024-4-7 12:11:03-debug: run build task 查询 Asset Bundle success in 120 ms√, progress: 5%
2024-4-7 12:11:03-debug: [Build Memory track]: 查询 Asset Bundle start:202.91MB, end 207.74MB, increase: 4.82MB
2024-4-7 12:11:03-debug: // ---- build task 查询 Asset Bundle ---- (120ms)
2024-4-7 12:11:03-debug: // ---- build task 查询 Asset Bundle ----
2024-4-7 12:11:03-debug: // ---- build task 查询 Asset Bundle ---- (8ms)
2024-4-7 12:11:03-debug: run build task 查询 Asset Bundle success in 8 ms√, progress: 10%
2024-4-7 12:11:03-debug: [Build Memory track]: 查询 Asset Bundle start:207.75MB, end 207.81MB, increase: 65.34KB
2024-4-7 12:11:03-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-4-7 12:11:03-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 12:11:03-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (7ms)
2024-4-7 12:11:03-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.83MB, end 207.85MB, increase: 17.11KB
2024-4-7 12:11:03-debug: run build task 整理部分构建选项内数据到 settings.json success in 7 ms√, progress: 12%
2024-4-7 12:11:03-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-4-7 12:11:03-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-4-7 12:11:04-debug: // ---- build task 填充脚本数据到 settings.json ---- (3ms)
2024-4-7 12:11:04-debug: run build task 填充脚本数据到 settings.json success in 3 ms√, progress: 13%
2024-4-7 12:11:04-debug: [Build Memory track]: 填充脚本数据到 settings.json start:207.86MB, end 207.88MB, increase: 16.99KB
2024-4-7 12:11:04-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-4-7 12:11:04-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-4-7 12:11:04-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (19ms)
2024-4-7 12:11:04-debug: run build task 整理部分构建选项内数据到 settings.json success in 19 ms√, progress: 15%
2024-4-7 12:11:04-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:207.89MB, end 208.06MB, increase: 165.97KB
2024-4-7 12:11:04-debug: recompile effect.bin success
