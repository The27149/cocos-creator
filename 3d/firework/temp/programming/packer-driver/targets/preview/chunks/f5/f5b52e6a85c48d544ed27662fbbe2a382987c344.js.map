{"version":3,"sources":["file:///E:/cary/git/cocos-creator/3d/firework/assets/src/Draw.ts"],"names":["_decorator","Component","gfx","MeshRenderer","UIVertexFormat","utils","v3","ccclass","property","Draw","points","indices","start","createPoints","mrender","node","getComponent","mesh","createMesh","MeshUtils","primitiveMode","PrimitiveMode","POINT_LIST","positions","uvs","minPos","maxPos","attributes","vfmt","pi","Math","PI","halfPi","i","r","random","idx","alfa","cita","temp","cos","sin","min","max"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,G,OAAAA,G;AAAWC,MAAAA,Y,OAAAA,Y;AAAoBC,MAAAA,c,OAAAA,c;AAAgBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,E,OAAAA,E;;;;;;;;;OAChF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;sBAGjBS,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb,SAC0BR,SAD1B,CACoC;AAAA;AAAA;AAAA,eAGxBS,MAHwB,GAGL,EAHK;AAAA,eAIxBC,OAJwB,GAIJ,EAJI;AAAA;;AAMhCC,QAAAA,KAAK,GAAG;AACJ,eAAKC,YAAL;AACA,cAAIC,OAAO,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBb,YAAvB,CAAd;AACAW,UAAAA,OAAO,CAACG,IAAR,GAAe,KAAKC,UAAL,EAAf,CAHI,CAKJ;AACH;;AAEOA,QAAAA,UAAU,GAAS;AACvB,iBAAOb,KAAK,CAACc,SAAN,CAAgBD,UAAhB,CAA2B;AAC9BE,YAAAA,aAAa,EAAElB,GAAG,CAACmB,aAAJ,CAAkBC,UADH;AAE9BC,YAAAA,SAAS,EAAE,KAAKb,MAFc;AAG9Bc,YAAAA,GAAG,EAAE,EAHyB;AAI9Bb,YAAAA,OAAO,EAAE,KAAKA,OAJgB;AAK9Bc,YAAAA,MAAM,EAAEnB,EAAE,EALoB;AAM9BoB,YAAAA,MAAM,EAAEpB,EAAE,EANoB;AAO9BqB,YAAAA,UAAU,EAAEvB,cAAc,CAACwB;AAPG,WAA3B,CAAP;AASH,SAxB+B,CA0BhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACQf,QAAAA,YAAY,GAAG;AACnB,cAAMgB,EAAE,GAAGC,IAAI,CAACC,EAAhB;AAAA,cACIC,MAAM,GAAGH,EAAE,GAAG,CADlB;;AAEA,eAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAApB,EAA2BA,CAAC,EAA5B,EAAgC;AAC5B,gBAAIC,CAAC,GAAG,KAAKC,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAR;AACA,gBAAIC,GAAG,GAAGH,CAAC,GAAG,CAAd;AACA,gBAAII,IAAI,GAAG,KAAKF,MAAL,CAAY,CAAZ,EAAeN,EAAE,GAAG,CAApB,CAAX;AACA,gBAAIS,IAAI,GAAG,KAAKH,MAAL,CAAY,CAACH,MAAb,EAAqBA,MAArB,CAAX;AACA,gBAAIO,IAAI,GAAGL,CAAC,GAAIJ,IAAI,CAACU,GAAL,CAASF,IAAT,KAAkB,GAAlC,CAL4B,CAKW;;AACvC,iBAAK5B,MAAL,CAAY0B,GAAZ,IAAmBG,IAAI,GAAGT,IAAI,CAACU,GAAL,CAASH,IAAT,CAA1B;AACA,iBAAK3B,MAAL,CAAY0B,GAAG,GAAG,CAAlB,IAAuBF,CAAC,GAAGJ,IAAI,CAACW,GAAL,CAASH,IAAT,CAA3B;AACA,iBAAK5B,MAAL,CAAY0B,GAAG,GAAG,CAAlB,IAAuBG,IAAI,GAAGT,IAAI,CAACW,GAAL,CAASJ,IAAT,CAA9B;AACA,iBAAK1B,OAAL,CAAasB,CAAb,IAAkBA,CAAlB;AACH;AACJ;;AAEOE,QAAAA,MAAM,CAACO,GAAD,EAAMC,GAAN,EAAmB;AAC7B,iBAAOb,IAAI,CAACK,MAAL,MAAiBQ,GAAG,GAAGD,GAAvB,IAA8BA,GAArC;AACH;;AAxD+B,O","sourcesContent":["import { _decorator, Component, gfx, Mesh, MeshRenderer, Node, UIVertexFormat, utils, v3, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Draw')\r\nexport class Draw extends Component {\r\n\r\n\r\n    private points: number[] = [];\r\n    private indices: number[] = [];\r\n\r\n    start() {\r\n        this.createPoints();\r\n        let mrender = this.node.getComponent(MeshRenderer);\r\n        mrender.mesh = this.createMesh();\r\n\r\n        // mrender.material.setProperty(`v0`,)\r\n    }\r\n\r\n    private createMesh(): Mesh {\r\n        return utils.MeshUtils.createMesh({\r\n            primitiveMode: gfx.PrimitiveMode.POINT_LIST,\r\n            positions: this.points,\r\n            uvs: [],\r\n            indices: this.indices,\r\n            minPos: v3(),\r\n            maxPos: v3(),\r\n            attributes: UIVertexFormat.vfmt,\r\n        })\r\n    }\r\n\r\n    //正方体定点\r\n    // private createPoints() {\r\n    //     for (let i = 0; i < 10000; i++) {\r\n    //         let idx = i * 3;\r\n    //         this.points[idx] = this.random(-1, 1);\r\n    //         this.points[idx + 1] = this.random(-1, 1);\r\n    //         this.points[idx + 2] = this.random(-1, 1);\r\n    //         this.indices[i] = i;\r\n    //     }\r\n    // }\r\n\r\n    //球形定点\r\n    private createPoints() {\r\n        const pi = Math.PI,\r\n            halfPi = pi / 2;\r\n        for (let i = 0; i < 10000; i++) {\r\n            let r = this.random(0, 1);\r\n            let idx = i * 3;\r\n            let alfa = this.random(0, pi * 2);\r\n            let cita = this.random(-halfPi, halfPi);\r\n            let temp = r * (Math.cos(cita) ** 0.5);//搞个根号，减弱余弦不均匀分布的影响\r\n            this.points[idx] = temp * Math.cos(alfa);\r\n            this.points[idx + 1] = r * Math.sin(cita);\r\n            this.points[idx + 2] = temp * Math.sin(alfa);\r\n            this.indices[i] = i;\r\n        }\r\n    }\r\n\r\n    private random(min, max): number {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n}\r\n"]}