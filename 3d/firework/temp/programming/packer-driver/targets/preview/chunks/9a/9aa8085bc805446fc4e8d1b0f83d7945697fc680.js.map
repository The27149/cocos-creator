{"version":3,"sources":["file:///E:/personal/git/cocos-creator/3d/firework/assets/src/Draw.ts"],"names":["_decorator","Component","gfx","MeshRenderer","UIVertexFormat","utils","v3","ccclass","property","Draw","points","indices","start","createPoints","mrender","node","getComponent","mesh","createMesh","MeshUtils","primitiveMode","PrimitiveMode","POINT_LIST","positions","uvs","minPos","maxPos","attributes","vfmt","i","idx","random","min","max","Math"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,G,OAAAA,G;AAAWC,MAAAA,Y,OAAAA,Y;AAAoBC,MAAAA,c,OAAAA,c;AAAgBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,E,OAAAA,E;;;;;;;;;OAChF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;sBAGjBS,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb,SAC0BR,SAD1B,CACoC;AAAA;AAAA;AAAA,eAGxBS,MAHwB,GAGL,EAHK;AAAA,eAIxBC,OAJwB,GAIJ,EAJI;AAAA;;AAMhCC,QAAAA,KAAK,GAAG;AACJ,eAAKC,YAAL;AACA,cAAIC,OAAO,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBb,YAAvB,CAAd;AACAW,UAAAA,OAAO,CAACG,IAAR,GAAe,KAAKC,UAAL,EAAf,CAHI,CAKJ;AACH;;AAEOA,QAAAA,UAAU,GAAS;AACvB,iBAAOb,KAAK,CAACc,SAAN,CAAgBD,UAAhB,CAA2B;AAC9BE,YAAAA,aAAa,EAAElB,GAAG,CAACmB,aAAJ,CAAkBC,UADH;AAE9BC,YAAAA,SAAS,EAAE,KAAKb,MAFc;AAG9Bc,YAAAA,GAAG,EAAE,EAHyB;AAI9Bb,YAAAA,OAAO,EAAE,KAAKA,OAJgB;AAK9Bc,YAAAA,MAAM,EAAEnB,EAAE,EALoB;AAM9BoB,YAAAA,MAAM,EAAEpB,EAAE,EANoB;AAO9BqB,YAAAA,UAAU,EAAEvB,cAAc,CAACwB;AAPG,WAA3B,CAAP;AASH;;AAEOf,QAAAA,YAAY,GAAG;AACnB,eAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAApB,EAA2BA,CAAC,EAA5B,EAAgC;AAC5B,gBAAIC,GAAG,GAAGD,CAAC,GAAG,CAAd;AACA,iBAAKnB,MAAL,CAAYoB,GAAZ,IAAmB,KAAKC,MAAL,CAAY,CAAC,CAAb,EAAgB,CAAhB,CAAnB;AACA,iBAAKrB,MAAL,CAAYoB,GAAG,GAAG,CAAlB,IAAuB,KAAKC,MAAL,CAAY,CAAC,CAAb,EAAgB,CAAhB,CAAvB;AACA,iBAAKrB,MAAL,CAAYoB,GAAG,GAAG,CAAlB,IAAuB,KAAKC,MAAL,CAAY,CAAC,CAAb,EAAgB,CAAhB,CAAvB;AACA,iBAAKpB,OAAL,CAAakB,CAAb,IAAkBA,CAAlB;AACH;AACJ;;AAEOE,QAAAA,MAAM,CAACC,GAAD,EAAMC,GAAN,EAAmB;AAC7B,iBAAOC,IAAI,CAACH,MAAL,MAAiBE,GAAG,GAAGD,GAAvB,IAA8BA,GAArC;AACH;;AAtC+B,O","sourcesContent":["import { _decorator, Component, gfx, Mesh, MeshRenderer, Node, UIVertexFormat, utils, v3, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Draw')\nexport class Draw extends Component {\n\n\n    private points: number[] = [];\n    private indices: number[] = [];\n\n    start() {\n        this.createPoints();\n        let mrender = this.node.getComponent(MeshRenderer);\n        mrender.mesh = this.createMesh();\n\n        // mrender.material.setProperty(`v0`,)\n    }\n\n    private createMesh(): Mesh {\n        return utils.MeshUtils.createMesh({\n            primitiveMode: gfx.PrimitiveMode.POINT_LIST,\n            positions: this.points,\n            uvs: [],\n            indices: this.indices,\n            minPos: v3(),\n            maxPos: v3(),\n            attributes: UIVertexFormat.vfmt,\n        })\n    }\n\n    private createPoints() {\n        for (let i = 0; i < 10000; i++) {\n            let idx = i * 3;\n            this.points[idx] = this.random(-1, 1);\n            this.points[idx + 1] = this.random(-1, 1);\n            this.points[idx + 2] = this.random(-1, 1);\n            this.indices[i] = i;\n        }\n    }\n\n    private random(min, max): number {\n        return Math.random() * (max - min) + min;\n    }\n}\n"]}